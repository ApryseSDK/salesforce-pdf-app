(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === "object" && typeof module === "object")
    module.exports = factory();
  else if (typeof define === "function" && define.amd) define([], factory);
  else if (typeof exports === "object") exports["WebViewerVideo"] = factory();
  else root["WebViewerVideo"] = factory();
})(this, function () {
  return /******/ (function (modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {}; // The require function
    /******/
    /******/ /******/ function __webpack_require__(moduleId) {
      /******/
      /******/ // Check if module is in cache
      /******/ if (installedModules[moduleId]) {
        /******/ return installedModules[moduleId].exports;
        /******/
      } // Create a new module (and put it into the cache)
      /******/ /******/ var module = (installedModules[moduleId] = {
        /******/ i: moduleId,
        /******/ l: false,
        /******/ exports: {},
        /******/
      }); // Execute the module function
      /******/
      /******/ /******/ modules[moduleId].call(
        module.exports,
        module,
        module.exports,
        __webpack_require__
      ); // Flag the module as loaded
      /******/
      /******/ /******/ module.l = true; // Return the exports of the module
      /******/
      /******/ /******/ return module.exports;
      /******/
    } // expose the modules object (__webpack_modules__)
    /******/
    /******/
    /******/ /******/ __webpack_require__.m = modules; // expose the module cache
    /******/
    /******/ /******/ __webpack_require__.c = installedModules; // define getter function for harmony exports
    /******/
    /******/ /******/ __webpack_require__.d = function (exports, name, getter) {
      /******/ if (!__webpack_require__.o(exports, name)) {
        /******/ Object.defineProperty(exports, name, {
          enumerable: true,
          get: getter,
        });
        /******/
      }
      /******/
    }; // define __esModule on exports
    /******/
    /******/ /******/ __webpack_require__.r = function (exports) {
      /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
        /******/ Object.defineProperty(exports, Symbol.toStringTag, {
          value: "Module",
        });
        /******/
      }
      /******/ Object.defineProperty(exports, "__esModule", { value: true });
      /******/
    }; // create a fake namespace object // mode & 1: value is a module id, require it // mode & 2: merge all properties of value into the ns // mode & 4: return value when already ns object // mode & 8|1: behave like require
    /******/
    /******/ /******/ /******/ /******/ /******/ /******/ __webpack_require__.t = function (
      value,
      mode
    ) {
      /******/ if (mode & 1) value = __webpack_require__(value);
      /******/ if (mode & 8) return value;
      /******/ if (
        mode & 4 &&
        typeof value === "object" &&
        value &&
        value.__esModule
      )
        return value;
      /******/ var ns = Object.create(null);
      /******/ __webpack_require__.r(ns);
      /******/ Object.defineProperty(ns, "default", {
        enumerable: true,
        value: value,
      });
      /******/ if (mode & 2 && typeof value != "string")
        for (var key in value)
          __webpack_require__.d(
            ns,
            key,
            function (key) {
              return value[key];
            }.bind(null, key)
          );
      /******/ return ns;
      /******/
    }; // getDefaultExport function for compatibility with non-harmony modules
    /******/
    /******/ /******/ __webpack_require__.n = function (module) {
      /******/ var getter =
        module && module.__esModule
          ? /******/ function getDefault() {
              return module["default"];
            }
          : /******/ function getModuleExports() {
              return module;
            };
      /******/ __webpack_require__.d(getter, "a", getter);
      /******/ return getter;
      /******/
    }; // Object.prototype.hasOwnProperty.call
    /******/
    /******/ /******/ __webpack_require__.o = function (object, property) {
      return Object.prototype.hasOwnProperty.call(object, property);
    }; // __webpack_public_path__
    /******/
    /******/ /******/ __webpack_require__.p = ""; // Load entry module and return exports
    /******/
    /******/
    /******/ /******/ return __webpack_require__((__webpack_require__.s = 445));
    /******/
  })(
    /************************************************************************/
    /******/ [
      /* 0 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        if (true) {
          module.exports = __webpack_require__(428);
        } else {
        }

        /***/
      },
      /* 1 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;
        var createNonEnumerableProperty = __webpack_require__(22);
        var redefine = __webpack_require__(23);
        var setGlobal = __webpack_require__(105);
        var copyConstructorProperties = __webpack_require__(171);
        var isForced = __webpack_require__(70);

        /*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
        module.exports = function (options, source) {
          var TARGET = options.target;
          var GLOBAL = options.global;
          var STATIC = options.stat;
          var FORCED, target, key, targetProperty, sourceProperty, descriptor;
          if (GLOBAL) {
            target = global;
          } else if (STATIC) {
            target = global[TARGET] || setGlobal(TARGET, {});
          } else {
            target = (global[TARGET] || {}).prototype;
          }
          if (target)
            for (key in source) {
              sourceProperty = source[key];
              if (options.noTargetGet) {
                descriptor = getOwnPropertyDescriptor(target, key);
                targetProperty = descriptor && descriptor.value;
              } else targetProperty = target[key];
              FORCED = isForced(
                GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key,
                options.forced
              );
              // contained in target
              if (!FORCED && targetProperty !== undefined) {
                if (typeof sourceProperty === typeof targetProperty) continue;
                copyConstructorProperties(sourceProperty, targetProperty);
              }
              // add a flag to not completely full polyfills
              if (options.sham || (targetProperty && targetProperty.sham)) {
                createNonEnumerableProperty(sourceProperty, "sham", true);
              }
              // extend global
              redefine(target, key, sourceProperty, options);
            }
        };

        /***/
      },
      /* 2 */
      /***/ function (module, exports) {
        module.exports = function (exec) {
          try {
            return !!exec();
          } catch (error) {
            return true;
          }
        };

        /***/
      },
      /* 3 */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global) {
          var check = function (it) {
            return it && it.Math == Math && it;
          };

          // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
          module.exports =
            /* global globalThis -- safe */
            check(typeof globalThis == "object" && globalThis) ||
            check(typeof window == "object" && window) ||
            check(typeof self == "object" && self) ||
            check(typeof global == "object" && global) ||
            // eslint-disable-next-line no-new-func -- fallback
            (function () {
              return this;
            })() ||
            Function("return this")();

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 4 */
      /***/ function (module, exports) {
        module.exports = function (it) {
          return typeof it === "object"
            ? it !== null
            : typeof it === "function";
        };

        /***/
      },
      /* 5 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);

        module.exports = function (it) {
          if (!isObject(it)) {
            throw TypeError(String(it) + " is not an object");
          }
          return it;
        };

        /***/
      },
      /* 6 */
      /***/ function (module, exports, __webpack_require__) {
        var arrayWithHoles = __webpack_require__(423);

        var iterableToArrayLimit = __webpack_require__(424);

        var unsupportedIterableToArray = __webpack_require__(425);

        var nonIterableRest = __webpack_require__(427);

        function _slicedToArray(arr, i) {
          return (
            arrayWithHoles(arr) ||
            iterableToArrayLimit(arr, i) ||
            unsupportedIterableToArray(arr, i) ||
            nonIterableRest()
          );
        }

        module.exports = _slicedToArray;

        /***/
      },
      /* 7 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        // Detect IE8's incomplete defineProperty implementation
        module.exports = !fails(function () {
          return (
            Object.defineProperty({}, 1, {
              get: function () {
                return 7;
              },
            })[1] != 7
          );
        });

        /***/
      },
      /* 8 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var shared = __webpack_require__(108);
        var has = __webpack_require__(14);
        var uid = __webpack_require__(67);
        var NATIVE_SYMBOL = __webpack_require__(112);
        var USE_SYMBOL_AS_UID = __webpack_require__(173);

        var WellKnownSymbolsStore = shared("wks");
        var Symbol = global.Symbol;
        var createWellKnownSymbol = USE_SYMBOL_AS_UID
          ? Symbol
          : (Symbol && Symbol.withoutSetter) || uid;

        module.exports = function (name) {
          if (!has(WellKnownSymbolsStore, name)) {
            if (NATIVE_SYMBOL && has(Symbol, name))
              WellKnownSymbolsStore[name] = Symbol[name];
            else
              WellKnownSymbolsStore[name] = createWellKnownSymbol(
                "Symbol." + name
              );
          }
          return WellKnownSymbolsStore[name];
        };

        /***/
      },
      /* 9 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var NATIVE_ARRAY_BUFFER = __webpack_require__(140);
        var DESCRIPTORS = __webpack_require__(7);
        var global = __webpack_require__(3);
        var isObject = __webpack_require__(4);
        var has = __webpack_require__(14);
        var classof = __webpack_require__(75);
        var createNonEnumerableProperty = __webpack_require__(22);
        var redefine = __webpack_require__(23);
        var defineProperty = __webpack_require__(12).f;
        var getPrototypeOf = __webpack_require__(33);
        var setPrototypeOf = __webpack_require__(46);
        var wellKnownSymbol = __webpack_require__(8);
        var uid = __webpack_require__(67);

        var Int8Array = global.Int8Array;
        var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
        var Uint8ClampedArray = global.Uint8ClampedArray;
        var Uint8ClampedArrayPrototype =
          Uint8ClampedArray && Uint8ClampedArray.prototype;
        var TypedArray = Int8Array && getPrototypeOf(Int8Array);
        var TypedArrayPrototype =
          Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
        var ObjectPrototype = Object.prototype;
        var isPrototypeOf = ObjectPrototype.isPrototypeOf;

        var TO_STRING_TAG = wellKnownSymbol("toStringTag");
        var TYPED_ARRAY_TAG = uid("TYPED_ARRAY_TAG");
        // Fixing native typed arrays in Opera Presto crashes the browser, see #595
        var NATIVE_ARRAY_BUFFER_VIEWS =
          NATIVE_ARRAY_BUFFER &&
          !!setPrototypeOf &&
          classof(global.opera) !== "Opera";
        var TYPED_ARRAY_TAG_REQIRED = false;
        var NAME;

        var TypedArrayConstructorsList = {
          Int8Array: 1,
          Uint8Array: 1,
          Uint8ClampedArray: 1,
          Int16Array: 2,
          Uint16Array: 2,
          Int32Array: 4,
          Uint32Array: 4,
          Float32Array: 4,
          Float64Array: 8,
        };

        var BigIntArrayConstructorsList = {
          BigInt64Array: 8,
          BigUint64Array: 8,
        };

        var isView = function isView(it) {
          if (!isObject(it)) return false;
          var klass = classof(it);
          return (
            klass === "DataView" ||
            has(TypedArrayConstructorsList, klass) ||
            has(BigIntArrayConstructorsList, klass)
          );
        };

        var isTypedArray = function (it) {
          if (!isObject(it)) return false;
          var klass = classof(it);
          return (
            has(TypedArrayConstructorsList, klass) ||
            has(BigIntArrayConstructorsList, klass)
          );
        };

        var aTypedArray = function (it) {
          if (isTypedArray(it)) return it;
          throw TypeError("Target is not a typed array");
        };

        var aTypedArrayConstructor = function (C) {
          if (setPrototypeOf) {
            if (isPrototypeOf.call(TypedArray, C)) return C;
          } else
            for (var ARRAY in TypedArrayConstructorsList)
              if (has(TypedArrayConstructorsList, NAME)) {
                var TypedArrayConstructor = global[ARRAY];
                if (
                  TypedArrayConstructor &&
                  (C === TypedArrayConstructor ||
                    isPrototypeOf.call(TypedArrayConstructor, C))
                ) {
                  return C;
                }
              }
          throw TypeError("Target is not a typed array constructor");
        };

        var exportTypedArrayMethod = function (KEY, property, forced) {
          if (!DESCRIPTORS) return;
          if (forced)
            for (var ARRAY in TypedArrayConstructorsList) {
              var TypedArrayConstructor = global[ARRAY];
              if (
                TypedArrayConstructor &&
                has(TypedArrayConstructor.prototype, KEY)
              ) {
                delete TypedArrayConstructor.prototype[KEY];
              }
            }
          if (!TypedArrayPrototype[KEY] || forced) {
            redefine(
              TypedArrayPrototype,
              KEY,
              forced
                ? property
                : (NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY]) ||
                    property
            );
          }
        };

        var exportTypedArrayStaticMethod = function (KEY, property, forced) {
          var ARRAY, TypedArrayConstructor;
          if (!DESCRIPTORS) return;
          if (setPrototypeOf) {
            if (forced)
              for (ARRAY in TypedArrayConstructorsList) {
                TypedArrayConstructor = global[ARRAY];
                if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {
                  delete TypedArrayConstructor[KEY];
                }
              }
            if (!TypedArray[KEY] || forced) {
              // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
              try {
                return redefine(
                  TypedArray,
                  KEY,
                  forced
                    ? property
                    : (NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY]) || property
                );
              } catch (error) {
                /* empty */
              }
            } else return;
          }
          for (ARRAY in TypedArrayConstructorsList) {
            TypedArrayConstructor = global[ARRAY];
            if (
              TypedArrayConstructor &&
              (!TypedArrayConstructor[KEY] || forced)
            ) {
              redefine(TypedArrayConstructor, KEY, property);
            }
          }
        };

        for (NAME in TypedArrayConstructorsList) {
          if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;
        }

        // WebKit bug - typed arrays constructors prototype is Object.prototype
        if (
          !NATIVE_ARRAY_BUFFER_VIEWS ||
          typeof TypedArray != "function" ||
          TypedArray === Function.prototype
        ) {
          // eslint-disable-next-line no-shadow -- safe
          TypedArray = function TypedArray() {
            throw TypeError("Incorrect invocation");
          };
          if (NATIVE_ARRAY_BUFFER_VIEWS)
            for (NAME in TypedArrayConstructorsList) {
              if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
            }
        }

        if (
          !NATIVE_ARRAY_BUFFER_VIEWS ||
          !TypedArrayPrototype ||
          TypedArrayPrototype === ObjectPrototype
        ) {
          TypedArrayPrototype = TypedArray.prototype;
          if (NATIVE_ARRAY_BUFFER_VIEWS)
            for (NAME in TypedArrayConstructorsList) {
              if (global[NAME])
                setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
            }
        }

        // WebKit bug - one more object in Uint8ClampedArray prototype chain
        if (
          NATIVE_ARRAY_BUFFER_VIEWS &&
          getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype
        ) {
          setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
        }

        if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {
          TYPED_ARRAY_TAG_REQIRED = true;
          defineProperty(TypedArrayPrototype, TO_STRING_TAG, {
            get: function () {
              return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
            },
          });
          for (NAME in TypedArrayConstructorsList)
            if (global[NAME]) {
              createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
            }
        }

        module.exports = {
          NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
          TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
          aTypedArray: aTypedArray,
          aTypedArrayConstructor: aTypedArrayConstructor,
          exportTypedArrayMethod: exportTypedArrayMethod,
          exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
          isView: isView,
          isTypedArray: isTypedArray,
          TypedArray: TypedArray,
          TypedArrayPrototype: TypedArrayPrototype,
        };

        /***/
      },
      /* 10 */
      /***/ function (module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(32);

        var min = Math.min;

        // `ToLength` abstract operation
        // https://tc39.es/ecma262/#sec-tolength
        module.exports = function (argument) {
          return argument > 0 ? min(toInteger(argument), 0x1fffffffffffff) : 0; // 2 ** 53 - 1 == 9007199254740991
        };

        /***/
      },
      /* 11 */
      /***/ function (module, exports, __webpack_require__) {
        module.exports = __webpack_require__(50);

        /***/
      },
      /* 12 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var IE8_DOM_DEFINE = __webpack_require__(169);
        var anObject = __webpack_require__(5);
        var toPrimitive = __webpack_require__(35);

        var nativeDefineProperty = Object.defineProperty;

        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        exports.f = DESCRIPTORS
          ? nativeDefineProperty
          : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPrimitive(P, true);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return nativeDefineProperty(O, P, Attributes);
                } catch (error) {
                  /* empty */
                }
              if ("get" in Attributes || "set" in Attributes)
                throw TypeError("Accessors not supported");
              if ("value" in Attributes) O[P] = Attributes.value;
              return O;
            };

        /***/
      },
      /* 13 */
      /***/ function (module, exports, __webpack_require__) {
        var requireObjectCoercible = __webpack_require__(21);

        // `ToObject` abstract operation
        // https://tc39.es/ecma262/#sec-toobject
        module.exports = function (argument) {
          return Object(requireObjectCoercible(argument));
        };

        /***/
      },
      /* 14 */
      /***/ function (module, exports) {
        var hasOwnProperty = {}.hasOwnProperty;

        module.exports = function (it, key) {
          return hasOwnProperty.call(it, key);
        };

        /***/
      },
      /* 15 */
      /***/ function (module, exports, __webpack_require__) {
        var path = __webpack_require__(51);
        var has = __webpack_require__(14);
        var wrappedWellKnownSymbolModule = __webpack_require__(177);
        var defineProperty = __webpack_require__(12).f;

        module.exports = function (NAME) {
          var Symbol = path.Symbol || (path.Symbol = {});
          if (!has(Symbol, NAME))
            defineProperty(Symbol, NAME, {
              value: wrappedWellKnownSymbolModule.f(NAME),
            });
        };

        /***/
      },
      /* 16 */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (false) {
          var throwOnDirectAccess, ReactIs;
        } else {
          // By explicitly using `prop-types` you are opting into new production behavior.
          // http://fb.me/prop-types-in-prod
          module.exports = __webpack_require__(429)();
        }

        /***/
      },
      /* 17 */
      /***/ function (module, exports, __webpack_require__) {
        var bind = __webpack_require__(45);
        var IndexedObject = __webpack_require__(66);
        var toObject = __webpack_require__(13);
        var toLength = __webpack_require__(10);
        var arraySpeciesCreate = __webpack_require__(71);

        var push = [].push;

        // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
        var createMethod = function (TYPE) {
          var IS_MAP = TYPE == 1;
          var IS_FILTER = TYPE == 2;
          var IS_SOME = TYPE == 3;
          var IS_EVERY = TYPE == 4;
          var IS_FIND_INDEX = TYPE == 6;
          var IS_FILTER_OUT = TYPE == 7;
          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
          return function ($this, callbackfn, that, specificCreate) {
            var O = toObject($this);
            var self = IndexedObject(O);
            var boundFunction = bind(callbackfn, that, 3);
            var length = toLength(self.length);
            var index = 0;
            var create = specificCreate || arraySpeciesCreate;
            var target = IS_MAP
              ? create($this, length)
              : IS_FILTER || IS_FILTER_OUT
              ? create($this, 0)
              : undefined;
            var value, result;
            for (; length > index; index++)
              if (NO_HOLES || index in self) {
                value = self[index];
                result = boundFunction(value, index, O);
                if (TYPE) {
                  if (IS_MAP) target[index] = result;
                  // map
                  else if (result)
                    switch (TYPE) {
                      case 3:
                        return true; // some
                      case 5:
                        return value; // find
                      case 6:
                        return index; // findIndex
                      case 2:
                        push.call(target, value); // filter
                    }
                  else
                    switch (TYPE) {
                      case 4:
                        return false; // every
                      case 7:
                        push.call(target, value); // filterOut
                    }
                }
              }
            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
          };
        };

        module.exports = {
          // `Array.prototype.forEach` method
          // https://tc39.es/ecma262/#sec-array.prototype.foreach
          forEach: createMethod(0),
          // `Array.prototype.map` method
          // https://tc39.es/ecma262/#sec-array.prototype.map
          map: createMethod(1),
          // `Array.prototype.filter` method
          // https://tc39.es/ecma262/#sec-array.prototype.filter
          filter: createMethod(2),
          // `Array.prototype.some` method
          // https://tc39.es/ecma262/#sec-array.prototype.some
          some: createMethod(3),
          // `Array.prototype.every` method
          // https://tc39.es/ecma262/#sec-array.prototype.every
          every: createMethod(4),
          // `Array.prototype.find` method
          // https://tc39.es/ecma262/#sec-array.prototype.find
          find: createMethod(5),
          // `Array.prototype.findIndex` method
          // https://tc39.es/ecma262/#sec-array.prototype.findIndex
          findIndex: createMethod(6),
          // `Array.prototype.filterOut` method
          // https://github.com/tc39/proposal-array-filtering
          filterOut: createMethod(7),
        };

        /***/
      },
      /* 18 */
      /***/ function (module, exports) {
        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            Promise.resolve(value).then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function () {
            var self = this,
              args = arguments;
            return new Promise(function (resolve, reject) {
              var gen = fn.apply(self, args);

              function _next(value) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  "next",
                  value
                );
              }

              function _throw(err) {
                asyncGeneratorStep(
                  gen,
                  resolve,
                  reject,
                  _next,
                  _throw,
                  "throw",
                  err
                );
              }

              _next(undefined);
            });
          };
        }

        module.exports = _asyncToGenerator;

        /***/
      },
      /* 19 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        function checkDCE() {
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
          if (
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" ||
            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function"
          ) {
            return;
          }
          if (false) {
          }
          try {
            // Verify that the code above has been dead code eliminated (DCE'd).
            __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
          } catch (err) {
            // DevTools shouldn't crash React, no matter what.
            // We should still report in case we break this code.
            console.error(err);
          }
        }

        if (true) {
          // DCE check should happen before ReactDOM bundle executes so that
          // DevTools can report bad minification during injection.
          checkDCE();
          module.exports = __webpack_require__(441);
        } else {
        }

        /***/
      },
      /* 20 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var propertyIsEnumerableModule = __webpack_require__(83);
        var createPropertyDescriptor = __webpack_require__(39);
        var toIndexedObject = __webpack_require__(27);
        var toPrimitive = __webpack_require__(35);
        var has = __webpack_require__(14);
        var IE8_DOM_DEFINE = __webpack_require__(169);

        var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
        exports.f = DESCRIPTORS
          ? nativeGetOwnPropertyDescriptor
          : function getOwnPropertyDescriptor(O, P) {
              O = toIndexedObject(O);
              P = toPrimitive(P, true);
              if (IE8_DOM_DEFINE)
                try {
                  return nativeGetOwnPropertyDescriptor(O, P);
                } catch (error) {
                  /* empty */
                }
              if (has(O, P))
                return createPropertyDescriptor(
                  !propertyIsEnumerableModule.f.call(O, P),
                  O[P]
                );
            };

        /***/
      },
      /* 21 */
      /***/ function (module, exports) {
        // `RequireObjectCoercible` abstract operation
        // https://tc39.es/ecma262/#sec-requireobjectcoercible
        module.exports = function (it) {
          if (it == undefined) throw TypeError("Can't call method on " + it);
          return it;
        };

        /***/
      },
      /* 22 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var definePropertyModule = __webpack_require__(12);
        var createPropertyDescriptor = __webpack_require__(39);

        module.exports = DESCRIPTORS
          ? function (object, key, value) {
              return definePropertyModule.f(
                object,
                key,
                createPropertyDescriptor(1, value)
              );
            }
          : function (object, key, value) {
              object[key] = value;
              return object;
            };

        /***/
      },
      /* 23 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var createNonEnumerableProperty = __webpack_require__(22);
        var has = __webpack_require__(14);
        var setGlobal = __webpack_require__(105);
        var inspectSource = __webpack_require__(106);
        var InternalStateModule = __webpack_require__(24);

        var getInternalState = InternalStateModule.get;
        var enforceInternalState = InternalStateModule.enforce;
        var TEMPLATE = String(String).split("String");

        (module.exports = function (O, key, value, options) {
          var unsafe = options ? !!options.unsafe : false;
          var simple = options ? !!options.enumerable : false;
          var noTargetGet = options ? !!options.noTargetGet : false;
          var state;
          if (typeof value == "function") {
            if (typeof key == "string" && !has(value, "name")) {
              createNonEnumerableProperty(value, "name", key);
            }
            state = enforceInternalState(value);
            if (!state.source) {
              state.source = TEMPLATE.join(typeof key == "string" ? key : "");
            }
          }
          if (O === global) {
            if (simple) O[key] = value;
            else setGlobal(key, value);
            return;
          } else if (!unsafe) {
            delete O[key];
          } else if (!noTargetGet && O[key]) {
            simple = true;
          }
          if (simple) O[key] = value;
          else createNonEnumerableProperty(O, key, value);
          // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        })(Function.prototype, "toString", function toString() {
          return (
            (typeof this == "function" && getInternalState(this).source) ||
            inspectSource(this)
          );
        });

        /***/
      },
      /* 24 */
      /***/ function (module, exports, __webpack_require__) {
        var NATIVE_WEAK_MAP = __webpack_require__(170);
        var global = __webpack_require__(3);
        var isObject = __webpack_require__(4);
        var createNonEnumerableProperty = __webpack_require__(22);
        var objectHas = __webpack_require__(14);
        var shared = __webpack_require__(107);
        var sharedKey = __webpack_require__(84);
        var hiddenKeys = __webpack_require__(68);

        var WeakMap = global.WeakMap;
        var set, get, has;

        var enforce = function (it) {
          return has(it) ? get(it) : set(it, {});
        };

        var getterFor = function (TYPE) {
          return function (it) {
            var state;
            if (!isObject(it) || (state = get(it)).type !== TYPE) {
              throw TypeError("Incompatible receiver, " + TYPE + " required");
            }
            return state;
          };
        };

        if (NATIVE_WEAK_MAP) {
          var store = shared.state || (shared.state = new WeakMap());
          var wmget = store.get;
          var wmhas = store.has;
          var wmset = store.set;
          set = function (it, metadata) {
            metadata.facade = it;
            wmset.call(store, it, metadata);
            return metadata;
          };
          get = function (it) {
            return wmget.call(store, it) || {};
          };
          has = function (it) {
            return wmhas.call(store, it);
          };
        } else {
          var STATE = sharedKey("state");
          hiddenKeys[STATE] = true;
          set = function (it, metadata) {
            metadata.facade = it;
            createNonEnumerableProperty(it, STATE, metadata);
            return metadata;
          };
          get = function (it) {
            return objectHas(it, STATE) ? it[STATE] : {};
          };
          has = function (it) {
            return objectHas(it, STATE);
          };
        }

        module.exports = {
          set: set,
          get: get,
          has: has,
          enforce: enforce,
          getterFor: getterFor,
        };

        /***/
      },
      /* 25 */
      /***/ function (module, exports) {
        module.exports = function (it) {
          if (typeof it != "function") {
            throw TypeError(String(it) + " is not a function");
          }
          return it;
        };

        /***/
      },
      ,
      /* 26 */ /* 27 */
      /***/ function (module, exports, __webpack_require__) {
        // toObject with fallback for non-array-like ES3 strings
        var IndexedObject = __webpack_require__(66);
        var requireObjectCoercible = __webpack_require__(21);

        module.exports = function (it) {
          return IndexedObject(requireObjectCoercible(it));
        };

        /***/
      },
      /* 28 */
      /***/ function (module, exports, __webpack_require__) {
        var path = __webpack_require__(51);
        var global = __webpack_require__(3);

        var aFunction = function (variable) {
          return typeof variable == "function" ? variable : undefined;
        };

        module.exports = function (namespace, method) {
          return arguments.length < 2
            ? aFunction(path[namespace]) || aFunction(global[namespace])
            : (path[namespace] && path[namespace][method]) ||
                (global[namespace] && global[namespace][method]);
        };

        /***/
      },
      /* 29 */
      /***/ function (module, exports, __webpack_require__) {
        var requireObjectCoercible = __webpack_require__(21);

        var quot = /"/g;

        // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
        // https://tc39.es/ecma262/#sec-createhtml
        module.exports = function (string, tag, attribute, value) {
          var S = String(requireObjectCoercible(string));
          var p1 = "<" + tag;
          if (attribute !== "")
            p1 +=
              " " +
              attribute +
              '="' +
              String(value).replace(quot, "&quot;") +
              '"';
          return p1 + ">" + S + "</" + tag + ">";
        };

        /***/
      },
      /* 30 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        // check the existence of a method, lowercase
        // of a tag and escaping quotes in arguments
        module.exports = function (METHOD_NAME) {
          return fails(function () {
            var test = ""[METHOD_NAME]('"');
            return test !== test.toLowerCase() || test.split('"').length > 3;
          });
        };

        /***/
      },
      /* 31 */
      /***/ function (module, exports) {
        module.exports = false;

        /***/
      },
      /* 32 */
      /***/ function (module, exports) {
        var ceil = Math.ceil;
        var floor = Math.floor;

        // `ToInteger` abstract operation
        // https://tc39.es/ecma262/#sec-tointeger
        module.exports = function (argument) {
          return isNaN((argument = +argument))
            ? 0
            : (argument > 0 ? floor : ceil)(argument);
        };

        /***/
      },
      /* 33 */
      /***/ function (module, exports, __webpack_require__) {
        var has = __webpack_require__(14);
        var toObject = __webpack_require__(13);
        var sharedKey = __webpack_require__(84);
        var CORRECT_PROTOTYPE_GETTER = __webpack_require__(117);

        var IE_PROTO = sharedKey("IE_PROTO");
        var ObjectPrototype = Object.prototype;

        // `Object.getPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.getprototypeof
        module.exports = CORRECT_PROTOTYPE_GETTER
          ? Object.getPrototypeOf
          : function (O) {
              O = toObject(O);
              if (has(O, IE_PROTO)) return O[IE_PROTO];
              if (
                typeof O.constructor == "function" &&
                O instanceof O.constructor
              ) {
                return O.constructor.prototype;
              }
              return O instanceof Object ? ObjectPrototype : null;
            };

        /***/
      },
      /* 34 */
      /***/ function (module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__; /*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
        /* global define */

        (function () {
          "use strict";

          var hasOwn = {}.hasOwnProperty;

          function classNames() {
            var classes = [];

            for (var i = 0; i < arguments.length; i++) {
              var arg = arguments[i];
              if (!arg) continue;

              var argType = typeof arg;

              if (argType === "string" || argType === "number") {
                classes.push(arg);
              } else if (Array.isArray(arg) && arg.length) {
                var inner = classNames.apply(null, arg);
                if (inner) {
                  classes.push(inner);
                }
              } else if (argType === "object") {
                for (var key in arg) {
                  if (hasOwn.call(arg, key) && arg[key]) {
                    classes.push(key);
                  }
                }
              }
            }

            return classes.join(" ");
          }

          if (true && module.exports) {
            classNames.default = classNames;
            module.exports = classNames;
          } else if (true) {
            // register as 'classnames', consistent with npm package name
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
              return classNames;
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })();

        /***/
      },
      /* 35 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);

        // `ToPrimitive` abstract operation
        // https://tc39.es/ecma262/#sec-toprimitive
        // instead of the ES6 spec version, we didn't implement @@toPrimitive case
        // and the second argument - flag - preferred type is a string
        module.exports = function (input, PREFERRED_STRING) {
          if (!isObject(input)) return input;
          var fn, val;
          if (
            PREFERRED_STRING &&
            typeof (fn = input.toString) == "function" &&
            !isObject((val = fn.call(input)))
          )
            return val;
          if (
            typeof (fn = input.valueOf) == "function" &&
            !isObject((val = fn.call(input)))
          )
            return val;
          if (
            !PREFERRED_STRING &&
            typeof (fn = input.toString) == "function" &&
            !isObject((val = fn.call(input)))
          )
            return val;
          throw TypeError("Can't convert object to primitive value");
        };

        /***/
      },
      /* 36 */
      /***/ function (module, exports, __webpack_require__) {
        var defineProperty = __webpack_require__(12).f;
        var has = __webpack_require__(14);
        var wellKnownSymbol = __webpack_require__(8);

        var TO_STRING_TAG = wellKnownSymbol("toStringTag");

        module.exports = function (it, TAG, STATIC) {
          if (it && !has((it = STATIC ? it : it.prototype), TO_STRING_TAG)) {
            defineProperty(it, TO_STRING_TAG, {
              configurable: true,
              value: TAG,
            });
          }
        };

        /***/
      },
      /* 37 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var defineProperties = __webpack_require__(114);
        var enumBugKeys = __webpack_require__(110);
        var hiddenKeys = __webpack_require__(68);
        var html = __webpack_require__(175);
        var documentCreateElement = __webpack_require__(104);
        var sharedKey = __webpack_require__(84);

        var GT = ">";
        var LT = "<";
        var PROTOTYPE = "prototype";
        var SCRIPT = "script";
        var IE_PROTO = sharedKey("IE_PROTO");

        var EmptyConstructor = function () {
          /* empty */
        };

        var scriptTag = function (content) {
          return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
        };

        // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
        var NullProtoObjectViaActiveX = function (activeXDocument) {
          activeXDocument.write(scriptTag(""));
          activeXDocument.close();
          var temp = activeXDocument.parentWindow.Object;
          activeXDocument = null; // avoid memory leak
          return temp;
        };

        // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var NullProtoObjectViaIFrame = function () {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = documentCreateElement("iframe");
          var JS = "java" + SCRIPT + ":";
          var iframeDocument;
          iframe.style.display = "none";
          html.appendChild(iframe);
          // https://github.com/zloirock/core-js/issues/475
          iframe.src = String(JS);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(scriptTag("document.F=Object"));
          iframeDocument.close();
          return iframeDocument.F;
        };

        // Check for document.domain and active x support
        // No need to use active x approach when document.domain is not set
        // see https://github.com/es-shims/es5-shim/issues/150
        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
        // avoid IE GC bug
        var activeXDocument;
        var NullProtoObject = function () {
          try {
            /* global ActiveXObject -- old IE */
            activeXDocument = document.domain && new ActiveXObject("htmlfile");
          } catch (error) {
            /* ignore */
          }
          NullProtoObject = activeXDocument
            ? NullProtoObjectViaActiveX(activeXDocument)
            : NullProtoObjectViaIFrame();
          var length = enumBugKeys.length;
          while (length--)
            delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
          return NullProtoObject();
        };

        hiddenKeys[IE_PROTO] = true;

        // `Object.create` method
        // https://tc39.es/ecma262/#sec-object.create
        module.exports =
          Object.create ||
          function create(O, Properties) {
            var result;
            if (O !== null) {
              EmptyConstructor[PROTOTYPE] = anObject(O);
              result = new EmptyConstructor();
              EmptyConstructor[PROTOTYPE] = null;
              // add "__proto__" for Object.getPrototypeOf polyfill
              result[IE_PROTO] = O;
            } else result = NullProtoObject();
            return Properties === undefined
              ? result
              : defineProperties(result, Properties);
          };

        /***/
      },
      /* 38 */
      /***/ function (module, exports) {
        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }

        module.exports = _defineProperty;

        /***/
      },
      /* 39 */
      /***/ function (module, exports) {
        module.exports = function (bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value,
          };
        };

        /***/
      },
      /* 40 */
      /***/ function (module, exports) {
        var toString = {}.toString;

        module.exports = function (it) {
          return toString.call(it).slice(8, -1);
        };

        /***/
      },
      /* 41 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fails = __webpack_require__(2);

        module.exports = function (METHOD_NAME, argument) {
          var method = [][METHOD_NAME];
          return (
            !!method &&
            fails(function () {
              // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
              method.call(
                null,
                argument ||
                  function () {
                    throw 1;
                  },
                1
              );
            })
          );
        };

        /***/
      },
      /* 42 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var aFunction = __webpack_require__(25);
        var wellKnownSymbol = __webpack_require__(8);

        var SPECIES = wellKnownSymbol("species");

        // `SpeciesConstructor` abstract operation
        // https://tc39.es/ecma262/#sec-speciesconstructor
        module.exports = function (O, defaultConstructor) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined || (S = anObject(C)[SPECIES]) == undefined
            ? defaultConstructor
            : aFunction(S);
        };

        /***/
      },
      /* 43 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var DESCRIPTORS = __webpack_require__(7);
        var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(
          142
        );
        var ArrayBufferViewCore = __webpack_require__(9);
        var ArrayBufferModule = __webpack_require__(100);
        var anInstance = __webpack_require__(49);
        var createPropertyDescriptor = __webpack_require__(39);
        var createNonEnumerableProperty = __webpack_require__(22);
        var toLength = __webpack_require__(10);
        var toIndex = __webpack_require__(228);
        var toOffset = __webpack_require__(229);
        var toPrimitive = __webpack_require__(35);
        var has = __webpack_require__(14);
        var classof = __webpack_require__(75);
        var isObject = __webpack_require__(4);
        var create = __webpack_require__(37);
        var setPrototypeOf = __webpack_require__(46);
        var getOwnPropertyNames = __webpack_require__(52).f;
        var typedArrayFrom = __webpack_require__(230);
        var forEach = __webpack_require__(17).forEach;
        var setSpecies = __webpack_require__(61);
        var definePropertyModule = __webpack_require__(12);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var InternalStateModule = __webpack_require__(24);
        var inheritIfRequired = __webpack_require__(96);

        var getInternalState = InternalStateModule.get;
        var setInternalState = InternalStateModule.set;
        var nativeDefineProperty = definePropertyModule.f;
        var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
        var round = Math.round;
        var RangeError = global.RangeError;
        var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
        var DataView = ArrayBufferModule.DataView;
        var NATIVE_ARRAY_BUFFER_VIEWS =
          ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
        var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
        var TypedArray = ArrayBufferViewCore.TypedArray;
        var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var isTypedArray = ArrayBufferViewCore.isTypedArray;
        var BYTES_PER_ELEMENT = "BYTES_PER_ELEMENT";
        var WRONG_LENGTH = "Wrong length";

        var fromList = function (C, list) {
          var index = 0;
          var length = list.length;
          var result = new (aTypedArrayConstructor(C))(length);
          while (length > index) result[index] = list[index++];
          return result;
        };

        var addGetter = function (it, key) {
          nativeDefineProperty(it, key, {
            get: function () {
              return getInternalState(this)[key];
            },
          });
        };

        var isArrayBuffer = function (it) {
          var klass;
          return (
            it instanceof ArrayBuffer ||
            (klass = classof(it)) == "ArrayBuffer" ||
            klass == "SharedArrayBuffer"
          );
        };

        var isTypedArrayIndex = function (target, key) {
          return (
            isTypedArray(target) &&
            typeof key != "symbol" &&
            key in target &&
            String(+key) == String(key)
          );
        };

        var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(
          target,
          key
        ) {
          return isTypedArrayIndex(target, (key = toPrimitive(key, true)))
            ? createPropertyDescriptor(2, target[key])
            : nativeGetOwnPropertyDescriptor(target, key);
        };

        var wrappedDefineProperty = function defineProperty(
          target,
          key,
          descriptor
        ) {
          if (
            isTypedArrayIndex(target, (key = toPrimitive(key, true))) &&
            isObject(descriptor) &&
            has(descriptor, "value") &&
            !has(descriptor, "get") &&
            !has(descriptor, "set") &&
            // TODO: add validation descriptor w/o calling accessors
            !descriptor.configurable &&
            (!has(descriptor, "writable") || descriptor.writable) &&
            (!has(descriptor, "enumerable") || descriptor.enumerable)
          ) {
            target[key] = descriptor.value;
            return target;
          }
          return nativeDefineProperty(target, key, descriptor);
        };

        if (DESCRIPTORS) {
          if (!NATIVE_ARRAY_BUFFER_VIEWS) {
            getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
            definePropertyModule.f = wrappedDefineProperty;
            addGetter(TypedArrayPrototype, "buffer");
            addGetter(TypedArrayPrototype, "byteOffset");
            addGetter(TypedArrayPrototype, "byteLength");
            addGetter(TypedArrayPrototype, "length");
          }

          $(
            {
              target: "Object",
              stat: true,
              forced: !NATIVE_ARRAY_BUFFER_VIEWS,
            },
            {
              getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
              defineProperty: wrappedDefineProperty,
            }
          );

          module.exports = function (TYPE, wrapper, CLAMPED) {
            var BYTES = TYPE.match(/\d+$/)[0] / 8;
            var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? "Clamped" : "") + "Array";
            var GETTER = "get" + TYPE;
            var SETTER = "set" + TYPE;
            var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
            var TypedArrayConstructor = NativeTypedArrayConstructor;
            var TypedArrayConstructorPrototype =
              TypedArrayConstructor && TypedArrayConstructor.prototype;
            var exported = {};

            var getter = function (that, index) {
              var data = getInternalState(that);
              return data.view[GETTER](index * BYTES + data.byteOffset, true);
            };

            var setter = function (that, index, value) {
              var data = getInternalState(that);
              if (CLAMPED)
                value =
                  (value = round(value)) < 0
                    ? 0
                    : value > 0xff
                    ? 0xff
                    : value & 0xff;
              data.view[SETTER](index * BYTES + data.byteOffset, value, true);
            };

            var addElement = function (that, index) {
              nativeDefineProperty(that, index, {
                get: function () {
                  return getter(this, index);
                },
                set: function (value) {
                  return setter(this, index, value);
                },
                enumerable: true,
              });
            };

            if (!NATIVE_ARRAY_BUFFER_VIEWS) {
              TypedArrayConstructor = wrapper(function (
                that,
                data,
                offset,
                $length
              ) {
                anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
                var index = 0;
                var byteOffset = 0;
                var buffer, byteLength, length;
                if (!isObject(data)) {
                  length = toIndex(data);
                  byteLength = length * BYTES;
                  buffer = new ArrayBuffer(byteLength);
                } else if (isArrayBuffer(data)) {
                  buffer = data;
                  byteOffset = toOffset(offset, BYTES);
                  var $len = data.byteLength;
                  if ($length === undefined) {
                    if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                    byteLength = $len - byteOffset;
                    if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                  } else {
                    byteLength = toLength($length) * BYTES;
                    if (byteLength + byteOffset > $len)
                      throw RangeError(WRONG_LENGTH);
                  }
                  length = byteLength / BYTES;
                } else if (isTypedArray(data)) {
                  return fromList(TypedArrayConstructor, data);
                } else {
                  return typedArrayFrom.call(TypedArrayConstructor, data);
                }
                setInternalState(that, {
                  buffer: buffer,
                  byteOffset: byteOffset,
                  byteLength: byteLength,
                  length: length,
                  view: new DataView(buffer),
                });
                while (index < length) addElement(that, index++);
              });

              if (setPrototypeOf)
                setPrototypeOf(TypedArrayConstructor, TypedArray);
              TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(
                TypedArrayPrototype
              );
            } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
              TypedArrayConstructor = wrapper(function (
                dummy,
                data,
                typedArrayOffset,
                $length
              ) {
                anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);
                return inheritIfRequired(
                  (function () {
                    if (!isObject(data))
                      return new NativeTypedArrayConstructor(toIndex(data));
                    if (isArrayBuffer(data))
                      return $length !== undefined
                        ? new NativeTypedArrayConstructor(
                            data,
                            toOffset(typedArrayOffset, BYTES),
                            $length
                          )
                        : typedArrayOffset !== undefined
                        ? new NativeTypedArrayConstructor(
                            data,
                            toOffset(typedArrayOffset, BYTES)
                          )
                        : new NativeTypedArrayConstructor(data);
                    if (isTypedArray(data))
                      return fromList(TypedArrayConstructor, data);
                    return typedArrayFrom.call(TypedArrayConstructor, data);
                  })(),
                  dummy,
                  TypedArrayConstructor
                );
              });

              if (setPrototypeOf)
                setPrototypeOf(TypedArrayConstructor, TypedArray);
              forEach(
                getOwnPropertyNames(NativeTypedArrayConstructor),
                function (key) {
                  if (!(key in TypedArrayConstructor)) {
                    createNonEnumerableProperty(
                      TypedArrayConstructor,
                      key,
                      NativeTypedArrayConstructor[key]
                    );
                  }
                }
              );
              TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
            }

            if (
              TypedArrayConstructorPrototype.constructor !==
              TypedArrayConstructor
            ) {
              createNonEnumerableProperty(
                TypedArrayConstructorPrototype,
                "constructor",
                TypedArrayConstructor
              );
            }

            if (TYPED_ARRAY_TAG) {
              createNonEnumerableProperty(
                TypedArrayConstructorPrototype,
                TYPED_ARRAY_TAG,
                CONSTRUCTOR_NAME
              );
            }

            exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

            $(
              {
                global: true,
                forced: TypedArrayConstructor != NativeTypedArrayConstructor,
                sham: !NATIVE_ARRAY_BUFFER_VIEWS,
              },
              exported
            );

            if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
              createNonEnumerableProperty(
                TypedArrayConstructor,
                BYTES_PER_ELEMENT,
                BYTES
              );
            }

            if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
              createNonEnumerableProperty(
                TypedArrayConstructorPrototype,
                BYTES_PER_ELEMENT,
                BYTES
              );
            }

            setSpecies(CONSTRUCTOR_NAME);
          };
        } else
          module.exports = function () {
            /* empty */
          };

        /***/
      },
      /* 44 */
      /***/ function (module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(32);

        var max = Math.max;
        var min = Math.min;

        // Helper for a popular repeating case of the spec:
        // Let integer be ? ToInteger(index).
        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
        module.exports = function (index, length) {
          var integer = toInteger(index);
          return integer < 0 ? max(integer + length, 0) : min(integer, length);
        };

        /***/
      },
      /* 45 */
      /***/ function (module, exports, __webpack_require__) {
        var aFunction = __webpack_require__(25);

        // optional / simple context binding
        module.exports = function (fn, that, length) {
          aFunction(fn);
          if (that === undefined) return fn;
          switch (length) {
            case 0:
              return function () {
                return fn.call(that);
              };
            case 1:
              return function (a) {
                return fn.call(that, a);
              };
            case 2:
              return function (a, b) {
                return fn.call(that, a, b);
              };
            case 3:
              return function (a, b, c) {
                return fn.call(that, a, b, c);
              };
          }
          return function (/* ...args */) {
            return fn.apply(that, arguments);
          };
        };

        /***/
      },
      /* 46 */
      /***/ function (module, exports, __webpack_require__) {
        /* eslint-disable no-proto -- safe */
        var anObject = __webpack_require__(5);
        var aPossiblePrototype = __webpack_require__(196);

        // `Object.setPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.setprototypeof
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        module.exports =
          Object.setPrototypeOf ||
          ("__proto__" in {}
            ? (function () {
                var CORRECT_SETTER = false;
                var test = {};
                var setter;
                try {
                  setter = Object.getOwnPropertyDescriptor(
                    Object.prototype,
                    "__proto__"
                  ).set;
                  setter.call(test, []);
                  CORRECT_SETTER = test instanceof Array;
                } catch (error) {
                  /* empty */
                }
                return function setPrototypeOf(O, proto) {
                  anObject(O);
                  aPossiblePrototype(proto);
                  if (CORRECT_SETTER) setter.call(O, proto);
                  else O.__proto__ = proto;
                  return O;
                };
              })()
            : undefined);

        /***/
      },
      /* 47 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var isArrayIteratorMethod = __webpack_require__(119);
        var toLength = __webpack_require__(10);
        var bind = __webpack_require__(45);
        var getIteratorMethod = __webpack_require__(79);
        var iteratorClose = __webpack_require__(198);

        var Result = function (stopped, result) {
          this.stopped = stopped;
          this.result = result;
        };

        module.exports = function (iterable, unboundFunction, options) {
          var that = options && options.that;
          var AS_ENTRIES = !!(options && options.AS_ENTRIES);
          var IS_ITERATOR = !!(options && options.IS_ITERATOR);
          var INTERRUPTED = !!(options && options.INTERRUPTED);
          var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
          var iterator, iterFn, index, length, result, next, step;

          var stop = function (condition) {
            if (iterator) iteratorClose(iterator);
            return new Result(true, condition);
          };

          var callFn = function (value) {
            if (AS_ENTRIES) {
              anObject(value);
              return INTERRUPTED
                ? fn(value[0], value[1], stop)
                : fn(value[0], value[1]);
            }
            return INTERRUPTED ? fn(value, stop) : fn(value);
          };

          if (IS_ITERATOR) {
            iterator = iterable;
          } else {
            iterFn = getIteratorMethod(iterable);
            if (typeof iterFn != "function")
              throw TypeError("Target is not iterable");
            // optimisation for array iterators
            if (isArrayIteratorMethod(iterFn)) {
              for (
                index = 0, length = toLength(iterable.length);
                length > index;
                index++
              ) {
                result = callFn(iterable[index]);
                if (result && result instanceof Result) return result;
              }
              return new Result(false);
            }
            iterator = iterFn.call(iterable);
          }

          next = iterator.next;
          while (!(step = next.call(iterator)).done) {
            try {
              result = callFn(step.value);
            } catch (error) {
              iteratorClose(iterator);
              throw error;
            }
            if (typeof result == "object" && result && result instanceof Result)
              return result;
          }
          return new Result(false);
        };

        /***/
      },
      /* 48 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);
        var create = __webpack_require__(37);
        var definePropertyModule = __webpack_require__(12);

        var UNSCOPABLES = wellKnownSymbol("unscopables");
        var ArrayPrototype = Array.prototype;

        // Array.prototype[@@unscopables]
        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        if (ArrayPrototype[UNSCOPABLES] == undefined) {
          definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
            configurable: true,
            value: create(null),
          });
        }

        // add a key to Array.prototype[@@unscopables]
        module.exports = function (key) {
          ArrayPrototype[UNSCOPABLES][key] = true;
        };

        /***/
      },
      /* 49 */
      /***/ function (module, exports) {
        module.exports = function (it, Constructor, name) {
          if (!(it instanceof Constructor)) {
            throw TypeError(
              "Incorrect " + (name ? name + " " : "") + "invocation"
            );
          }
          return it;
        };

        /***/
      },
      /* 50 */
      /***/ function (module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var runtime = (function (exports) {
          "use strict";

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === "function" ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || "@@iterator";
          var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
          var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

          function define(obj, key, value) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
            return obj[key];
          }
          try {
            // IE 8 has a broken Object.defineProperty that only works on DOM objects.
            define({}, "");
          } catch (err) {
            define = function (obj, key, value) {
              return (obj[key] = value);
            };
          }

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          exports.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: "normal", arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: "throw", arg: err };
            }
          }

          var GenStateSuspendedStart = "suspendedStart";
          var GenStateSuspendedYield = "suspendedYield";
          var GenStateExecuting = "executing";
          var GenStateCompleted = "completed";

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function () {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ["next", "throw", "return"].forEach(function (method) {
              define(prototype, method, function (arg) {
                return this._invoke(method, arg);
              });
            });
          }

          exports.isGeneratorFunction = function (genFun) {
            var ctor = typeof genFun === "function" && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === "GeneratorFunction"
              : false;
          };

          exports.mark = function (genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              define(genFun, toStringTagSymbol, "GeneratorFunction");
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          exports.awrap = function (arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator, PromiseImpl) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === "throw") {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === "object" &&
                  hasOwn.call(value, "__await")
                ) {
                  return PromiseImpl.resolve(value.__await).then(
                    function (value) {
                      invoke("next", value, resolve, reject);
                    },
                    function (err) {
                      invoke("throw", err, resolve, reject);
                    }
                  );
                }

                return PromiseImpl.resolve(value).then(
                  function (unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                  },
                  function (error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke("throw", error, resolve, reject);
                  }
                );
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new PromiseImpl(function (resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function () {
            return this;
          };
          exports.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          exports.async = function (
            innerFn,
            outerFn,
            self,
            tryLocsList,
            PromiseImpl
          ) {
            if (PromiseImpl === void 0) PromiseImpl = Promise;

            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList),
              PromiseImpl
            );

            return exports.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function (result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error("Generator is already running");
              }

              if (state === GenStateCompleted) {
                if (method === "throw") {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === "next") {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === "throw") {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === "return") {
                  context.abrupt("return", context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === "normal") {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  };
                } else if (record.type === "throw") {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = "throw";
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === "throw") {
                // Note: ["return"] must be used for ES3 parsing compatibility.
                if (delegate.iterator["return"]) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = "return";
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === "throw") {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = "throw";
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === "throw") {
              context.method = "throw";
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = "throw";
              context.arg = new TypeError("iterator result is not an object");
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          define(Gp, toStringTagSymbol, "Generator");

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function () {
            return this;
          };

          Gp.toString = function () {
            return "[object Generator]";
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = "normal";
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: "root" }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          exports.keys = function (object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === "function") {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          exports.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function (skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = "next";
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === "t" &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function () {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === "throw") {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function (exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = "next";
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === "root") {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle("end");
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, "catchLoc");
                  var hasFinally = hasOwn.call(entry, "finallyLoc");

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error("try statement without catch or finally");
                  }
                }
              }
            },

            abrupt: function (type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, "finallyLoc") &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === "break" || type === "continue") &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function (record, afterLoc) {
              if (record.type === "throw") {
                throw record.arg;
              }

              if (record.type === "break" || record.type === "continue") {
                this.next = record.arg;
              } else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
              } else if (record.type === "normal" && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function (finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function (tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === "throw") {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error("illegal catch attempt");
            },

            delegateYield: function (iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              if (this.method === "next") {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            },
          };

          // Regardless of whether this script is executing as a CommonJS module
          // or not, return the runtime object so that we can declare the variable
          // regeneratorRuntime in the outer scope, which allows this module to be
          // injected easily by `bin/regenerator --include-runtime script.js`.
          return exports;
        })(
          // If this script is executing as a CommonJS module, use module.exports
          // as the regeneratorRuntime namespace. Otherwise create a new empty
          // object. Either way, the resulting object will be used to initialize
          // the regeneratorRuntime variable at the top of this file.
          true ? module.exports : undefined
        );

        try {
          regeneratorRuntime = runtime;
        } catch (accidentalStrictMode) {
          // This module should not be running in strict mode, so the above
          // assignment should always work unless something is misconfigured. Just
          // in case runtime.js accidentally runs in strict mode, we can escape
          // strict mode using a global Function call. This could conceivably fail
          // if a Content Security Policy forbids using Function, but in that case
          // the proper solution is to fix the accidental strict mode problem. If
          // you've misconfigured your bundler to force strict mode and applied a
          // CSP to forbid Function, and you're not willing to fix either of those
          // problems, please detail your unique predicament in a GitHub issue.
          Function("r", "regeneratorRuntime = r")(runtime);
        }

        /***/
      },
      /* 51 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);

        module.exports = global;

        /***/
      },
      /* 52 */
      /***/ function (module, exports, __webpack_require__) {
        var internalObjectKeys = __webpack_require__(172);
        var enumBugKeys = __webpack_require__(110);

        var hiddenKeys = enumBugKeys.concat("length", "prototype");

        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        exports.f =
          Object.getOwnPropertyNames ||
          function getOwnPropertyNames(O) {
            return internalObjectKeys(O, hiddenKeys);
          };

        /***/
      },
      /* 53 */
      /***/ function (module, exports, __webpack_require__) {
        var classof = __webpack_require__(40);

        // `IsArray` abstract operation
        // https://tc39.es/ecma262/#sec-isarray
        module.exports =
          Array.isArray ||
          function isArray(arg) {
            return classof(arg) == "Array";
          };

        /***/
      },
      /* 54 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toPrimitive = __webpack_require__(35);
        var definePropertyModule = __webpack_require__(12);
        var createPropertyDescriptor = __webpack_require__(39);

        module.exports = function (object, key, value) {
          var propertyKey = toPrimitive(key);
          if (propertyKey in object)
            definePropertyModule.f(
              object,
              propertyKey,
              createPropertyDescriptor(0, value)
            );
          else object[propertyKey] = value;
        };

        /***/
      },
      /* 55 */
      /***/ function (module, exports, __webpack_require__) {
        var hiddenKeys = __webpack_require__(68);
        var isObject = __webpack_require__(4);
        var has = __webpack_require__(14);
        var defineProperty = __webpack_require__(12).f;
        var uid = __webpack_require__(67);
        var FREEZING = __webpack_require__(80);

        var METADATA = uid("meta");
        var id = 0;

        var isExtensible =
          Object.isExtensible ||
          function () {
            return true;
          };

        var setMetadata = function (it) {
          defineProperty(it, METADATA, {
            value: {
              objectID: "O" + ++id, // object ID
              weakData: {}, // weak collections IDs
            },
          });
        };

        var fastKey = function (it, create) {
          // return a primitive with prefix
          if (!isObject(it))
            return typeof it == "symbol"
              ? it
              : (typeof it == "string" ? "S" : "P") + it;
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return "F";
            // not necessary to add metadata
            if (!create) return "E";
            // add missing metadata
            setMetadata(it);
            // return object ID
          }
          return it[METADATA].objectID;
        };

        var getWeakData = function (it, create) {
          if (!has(it, METADATA)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return true;
            // not necessary to add metadata
            if (!create) return false;
            // add missing metadata
            setMetadata(it);
            // return the store of weak collections IDs
          }
          return it[METADATA].weakData;
        };

        // add metadata on freeze-family methods calling
        var onFreeze = function (it) {
          if (
            FREEZING &&
            meta.REQUIRED &&
            isExtensible(it) &&
            !has(it, METADATA)
          )
            setMetadata(it);
          return it;
        };

        var meta = (module.exports = {
          REQUIRED: false,
          fastKey: fastKey,
          getWeakData: getWeakData,
          onFreeze: onFreeze,
        });

        hiddenKeys[METADATA] = true;

        /***/
      },
      /* 56 */
      /***/ function (module, exports) {
        var g;

        // This works in non-strict mode
        g = (function () {
          return this;
        })();

        try {
          // This works if eval is allowed (see CSP)
          g = g || new Function("return this")();
        } catch (e) {
          // This works if the window reference is available
          if (typeof window === "object") g = window;
        }

        // g can still be undefined, but nothing to do about it...
        // We return undefined, instead of nothing here, so it's
        // easier to handle this case. if(!global) { ...}

        module.exports = g;

        /***/
      },
      /* 57 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var isArray = __webpack_require__(53);
        var isObject = __webpack_require__(4);
        var toObject = __webpack_require__(13);
        var toLength = __webpack_require__(10);
        var createProperty = __webpack_require__(54);
        var arraySpeciesCreate = __webpack_require__(71);
        var arrayMethodHasSpeciesSupport = __webpack_require__(72);
        var wellKnownSymbol = __webpack_require__(8);
        var V8_VERSION = __webpack_require__(73);

        var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
        var MAX_SAFE_INTEGER = 0x1fffffffffffff;
        var MAXIMUM_ALLOWED_INDEX_EXCEEDED = "Maximum allowed index exceeded";

        // We can't use this feature detection in V8 since it causes
        // deoptimization and serious performance degradation
        // https://github.com/zloirock/core-js/issues/679
        var IS_CONCAT_SPREADABLE_SUPPORT =
          V8_VERSION >= 51 ||
          !fails(function () {
            var array = [];
            array[IS_CONCAT_SPREADABLE] = false;
            return array.concat()[0] !== array;
          });

        var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");

        var isConcatSpreadable = function (O) {
          if (!isObject(O)) return false;
          var spreadable = O[IS_CONCAT_SPREADABLE];
          return spreadable !== undefined ? !!spreadable : isArray(O);
        };

        var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

        // `Array.prototype.concat` method
        // https://tc39.es/ecma262/#sec-array.prototype.concat
        // with adding support of @@isConcatSpreadable and @@species
        $(
          { target: "Array", proto: true, forced: FORCED },
          {
            // eslint-disable-next-line no-unused-vars -- required for `.length`
            concat: function concat(arg) {
              var O = toObject(this);
              var A = arraySpeciesCreate(O, 0);
              var n = 0;
              var i, k, length, len, E;
              for (i = -1, length = arguments.length; i < length; i++) {
                E = i === -1 ? O : arguments[i];
                if (isConcatSpreadable(E)) {
                  len = toLength(E.length);
                  if (n + len > MAX_SAFE_INTEGER)
                    throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                  for (k = 0; k < len; k++, n++)
                    if (k in E) createProperty(A, n, E[k]);
                } else {
                  if (n >= MAX_SAFE_INTEGER)
                    throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
                  createProperty(A, n++, E);
                }
              }
              A.length = n;
              return A;
            },
          }
        );

        /***/
      },
      /* 58 */
      /***/ function (module, exports, __webpack_require__) {
        var TO_STRING_TAG_SUPPORT = __webpack_require__(113);
        var redefine = __webpack_require__(23);
        var toString = __webpack_require__(256);

        // `Object.prototype.toString` method
        // https://tc39.es/ecma262/#sec-object.prototype.tostring
        if (!TO_STRING_TAG_SUPPORT) {
          redefine(Object.prototype, "toString", toString, { unsafe: true });
        }

        /***/
      },
      /* 59 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $map = __webpack_require__(17).map;
        var arrayMethodHasSpeciesSupport = __webpack_require__(72);

        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("map");

        // `Array.prototype.map` method
        // https://tc39.es/ecma262/#sec-array.prototype.map
        // with adding support of @@species
        $(
          { target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT },
          {
            map: function map(callbackfn /* , thisArg */) {
              return $map(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 60 */
      /***/ function (module, exports, __webpack_require__) {
        var classof = __webpack_require__(40);
        var global = __webpack_require__(3);

        module.exports = classof(global.process) == "process";

        /***/
      },
      /* 61 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var getBuiltIn = __webpack_require__(28);
        var definePropertyModule = __webpack_require__(12);
        var wellKnownSymbol = __webpack_require__(8);
        var DESCRIPTORS = __webpack_require__(7);

        var SPECIES = wellKnownSymbol("species");

        module.exports = function (CONSTRUCTOR_NAME) {
          var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
          var defineProperty = definePropertyModule.f;

          if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
            defineProperty(Constructor, SPECIES, {
              configurable: true,
              get: function () {
                return this;
              },
            });
          }
        };

        /***/
      },
      /* 62 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toIndexedObject = __webpack_require__(27);
        var addToUnscopables = __webpack_require__(48);
        var Iterators = __webpack_require__(78);
        var InternalStateModule = __webpack_require__(24);
        var defineIterator = __webpack_require__(115);

        var ARRAY_ITERATOR = "Array Iterator";
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

        // `Array.prototype.entries` method
        // https://tc39.es/ecma262/#sec-array.prototype.entries
        // `Array.prototype.keys` method
        // https://tc39.es/ecma262/#sec-array.prototype.keys
        // `Array.prototype.values` method
        // https://tc39.es/ecma262/#sec-array.prototype.values
        // `Array.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-array.prototype-@@iterator
        // `CreateArrayIterator` internal method
        // https://tc39.es/ecma262/#sec-createarrayiterator
        module.exports = defineIterator(
          Array,
          "Array",
          function (iterated, kind) {
            setInternalState(this, {
              type: ARRAY_ITERATOR,
              target: toIndexedObject(iterated), // target
              index: 0, // next index
              kind: kind, // kind
            });
            // `%ArrayIteratorPrototype%.next` method
            // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
          },
          function () {
            var state = getInternalState(this);
            var target = state.target;
            var kind = state.kind;
            var index = state.index++;
            if (!target || index >= target.length) {
              state.target = undefined;
              return { value: undefined, done: true };
            }
            if (kind == "keys") return { value: index, done: false };
            if (kind == "values") return { value: target[index], done: false };
            return { value: [index, target[index]], done: false };
          },
          "values"
        );

        // argumentsList[@@iterator] is %ArrayProto_values%
        // https://tc39.es/ecma262/#sec-createunmappedargumentsobject
        // https://tc39.es/ecma262/#sec-createmappedargumentsobject
        Iterators.Arguments = Iterators.Array;

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("keys");
        addToUnscopables("values");
        addToUnscopables("entries");

        /***/
      },
      /* 63 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var anObject = __webpack_require__(5);

        // `RegExp.prototype.flags` getter implementation
        // https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
        module.exports = function () {
          var that = anObject(this);
          var result = "";
          if (that.global) result += "g";
          if (that.ignoreCase) result += "i";
          if (that.multiline) result += "m";
          if (that.dotAll) result += "s";
          if (that.unicode) result += "u";
          if (that.sticky) result += "y";
          return result;
        };

        /***/
      },
      /* 64 */
      /***/ function (module, exports, __webpack_require__) {
        var requireObjectCoercible = __webpack_require__(21);
        var whitespaces = __webpack_require__(95);

        var whitespace = "[" + whitespaces + "]";
        var ltrim = RegExp("^" + whitespace + whitespace + "*");
        var rtrim = RegExp(whitespace + whitespace + "*$");

        // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
        var createMethod = function (TYPE) {
          return function ($this) {
            var string = String(requireObjectCoercible($this));
            if (TYPE & 1) string = string.replace(ltrim, "");
            if (TYPE & 2) string = string.replace(rtrim, "");
            return string;
          };
        };

        module.exports = {
          // `String.prototype.{ trimLeft, trimStart }` methods
          // https://tc39.es/ecma262/#sec-string.prototype.trimstart
          start: createMethod(1),
          // `String.prototype.{ trimRight, trimEnd }` methods
          // https://tc39.es/ecma262/#sec-string.prototype.trimend
          end: createMethod(2),
          // `String.prototype.trim` method
          // https://tc39.es/ecma262/#sec-string.prototype.trim
          trim: createMethod(3),
        };

        /***/
      },
      /* 65 */
      /***/ function (module, exports, __webpack_require__) {
        var redefine = __webpack_require__(23);

        module.exports = function (target, src, options) {
          for (var key in src) redefine(target, key, src[key], options);
          return target;
        };

        /***/
      },
      /* 66 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);
        var classof = __webpack_require__(40);

        var split = "".split;

        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        module.exports = fails(function () {
          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
          // eslint-disable-next-line no-prototype-builtins -- safe
          return !Object("z").propertyIsEnumerable(0);
        })
          ? function (it) {
              return classof(it) == "String" ? split.call(it, "") : Object(it);
            }
          : Object;

        /***/
      },
      /* 67 */
      /***/ function (module, exports) {
        var id = 0;
        var postfix = Math.random();

        module.exports = function (key) {
          return (
            "Symbol(" +
            String(key === undefined ? "" : key) +
            ")_" +
            (++id + postfix).toString(36)
          );
        };

        /***/
      },
      /* 68 */
      /***/ function (module, exports) {
        module.exports = {};

        /***/
      },
      /* 69 */
      /***/ function (module, exports, __webpack_require__) {
        var toIndexedObject = __webpack_require__(27);
        var toLength = __webpack_require__(10);
        var toAbsoluteIndex = __webpack_require__(44);

        // `Array.prototype.{ indexOf, includes }` methods implementation
        var createMethod = function (IS_INCLUDES) {
          return function ($this, el, fromIndex) {
            var O = toIndexedObject($this);
            var length = toLength(O.length);
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare -- NaN check
            if (IS_INCLUDES && el != el)
              while (length > index) {
                value = O[index++];
                // eslint-disable-next-line no-self-compare -- NaN check
                if (value != value) return true;
                // Array#indexOf ignores holes, Array#includes - not
              }
            else
              for (; length > index; index++) {
                if ((IS_INCLUDES || index in O) && O[index] === el)
                  return IS_INCLUDES || index || 0;
              }
            return !IS_INCLUDES && -1;
          };
        };

        module.exports = {
          // `Array.prototype.includes` method
          // https://tc39.es/ecma262/#sec-array.prototype.includes
          includes: createMethod(true),
          // `Array.prototype.indexOf` method
          // https://tc39.es/ecma262/#sec-array.prototype.indexof
          indexOf: createMethod(false),
        };

        /***/
      },
      /* 70 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        var replacement = /#|\.prototype\./;

        var isForced = function (feature, detection) {
          var value = data[normalize(feature)];
          return value == POLYFILL
            ? true
            : value == NATIVE
            ? false
            : typeof detection == "function"
            ? fails(detection)
            : !!detection;
        };

        var normalize = (isForced.normalize = function (string) {
          return String(string).replace(replacement, ".").toLowerCase();
        });

        var data = (isForced.data = {});
        var NATIVE = (isForced.NATIVE = "N");
        var POLYFILL = (isForced.POLYFILL = "P");

        module.exports = isForced;

        /***/
      },
      /* 71 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);
        var isArray = __webpack_require__(53);
        var wellKnownSymbol = __webpack_require__(8);

        var SPECIES = wellKnownSymbol("species");

        // `ArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray, length) {
          var C;
          if (isArray(originalArray)) {
            C = originalArray.constructor;
            // cross-realm fallback
            if (typeof C == "function" && (C === Array || isArray(C.prototype)))
              C = undefined;
            else if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
        };

        /***/
      },
      /* 72 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);
        var wellKnownSymbol = __webpack_require__(8);
        var V8_VERSION = __webpack_require__(73);

        var SPECIES = wellKnownSymbol("species");

        module.exports = function (METHOD_NAME) {
          // We can't use this feature detection in V8 since it causes
          // deoptimization and serious performance degradation
          // https://github.com/zloirock/core-js/issues/677
          return (
            V8_VERSION >= 51 ||
            !fails(function () {
              var array = [];
              var constructor = (array.constructor = {});
              constructor[SPECIES] = function () {
                return { foo: 1 };
              };
              return array[METHOD_NAME](Boolean).foo !== 1;
            })
          );
        };

        /***/
      },
      /* 73 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var userAgent = __webpack_require__(74);

        var process = global.process;
        var versions = process && process.versions;
        var v8 = versions && versions.v8;
        var match, version;

        if (v8) {
          match = v8.split(".");
          version = match[0] + match[1];
        } else if (userAgent) {
          match = userAgent.match(/Edge\/(\d+)/);
          if (!match || match[1] >= 74) {
            match = userAgent.match(/Chrome\/(\d+)/);
            if (match) version = match[1];
          }
        }

        module.exports = version && +version;

        /***/
      },
      /* 74 */
      /***/ function (module, exports, __webpack_require__) {
        var getBuiltIn = __webpack_require__(28);

        module.exports = getBuiltIn("navigator", "userAgent") || "";

        /***/
      },
      /* 75 */
      /***/ function (module, exports, __webpack_require__) {
        var TO_STRING_TAG_SUPPORT = __webpack_require__(113);
        var classofRaw = __webpack_require__(40);
        var wellKnownSymbol = __webpack_require__(8);

        var TO_STRING_TAG = wellKnownSymbol("toStringTag");
        // ES3 wrong here
        var CORRECT_ARGUMENTS =
          classofRaw(
            (function () {
              return arguments;
            })()
          ) == "Arguments";

        // fallback for IE11 Script Access Denied error
        var tryGet = function (it, key) {
          try {
            return it[key];
          } catch (error) {
            /* empty */
          }
        };

        // getting tag from ES6+ `Object.prototype.toString`
        module.exports = TO_STRING_TAG_SUPPORT
          ? classofRaw
          : function (it) {
              var O, tag, result;
              return it === undefined
                ? "Undefined"
                : it === null
                ? "Null"
                : // @@toStringTag case
                typeof (tag = tryGet((O = Object(it)), TO_STRING_TAG)) ==
                  "string"
                ? tag
                : // builtinTag case
                CORRECT_ARGUMENTS
                ? classofRaw(O)
                : // ES3 arguments fallback
                (result = classofRaw(O)) == "Object" &&
                  typeof O.callee == "function"
                ? "Arguments"
                : result;
            };

        /***/
      },
      /* 76 */
      /***/ function (module, exports, __webpack_require__) {
        var internalObjectKeys = __webpack_require__(172);
        var enumBugKeys = __webpack_require__(110);

        // `Object.keys` method
        // https://tc39.es/ecma262/#sec-object.keys
        module.exports =
          Object.keys ||
          function keys(O) {
            return internalObjectKeys(O, enumBugKeys);
          };

        /***/
      },
      /* 77 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var charAt = __webpack_require__(85).charAt;
        var InternalStateModule = __webpack_require__(24);
        var defineIterator = __webpack_require__(115);

        var STRING_ITERATOR = "String Iterator";
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

        // `String.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-string.prototype-@@iterator
        defineIterator(
          String,
          "String",
          function (iterated) {
            setInternalState(this, {
              type: STRING_ITERATOR,
              string: String(iterated),
              index: 0,
            });
            // `%StringIteratorPrototype%.next` method
            // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
          },
          function next() {
            var state = getInternalState(this);
            var string = state.string;
            var index = state.index;
            var point;
            if (index >= string.length) return { value: undefined, done: true };
            point = charAt(string, index);
            state.index += point.length;
            return { value: point, done: false };
          }
        );

        /***/
      },
      /* 78 */
      /***/ function (module, exports) {
        module.exports = {};

        /***/
      },
      /* 79 */
      /***/ function (module, exports, __webpack_require__) {
        var classof = __webpack_require__(75);
        var Iterators = __webpack_require__(78);
        var wellKnownSymbol = __webpack_require__(8);

        var ITERATOR = wellKnownSymbol("iterator");

        module.exports = function (it) {
          if (it != undefined)
            return it[ITERATOR] || it["@@iterator"] || Iterators[classof(it)];
        };

        /***/
      },
      /* 80 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        module.exports = !fails(function () {
          return Object.isExtensible(Object.preventExtensions({}));
        });

        /***/
      },
      /* 81 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);
        var classof = __webpack_require__(40);
        var wellKnownSymbol = __webpack_require__(8);

        var MATCH = wellKnownSymbol("match");

        // `IsRegExp` abstract operation
        // https://tc39.es/ecma262/#sec-isregexp
        module.exports = function (it) {
          var isRegExp;
          return (
            isObject(it) &&
            ((isRegExp = it[MATCH]) !== undefined
              ? !!isRegExp
              : classof(it) == "RegExp")
          );
        };

        /***/
      },
      /* 82 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var exec = __webpack_require__(91);

        // `RegExp.prototype.exec` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.exec
        $(
          { target: "RegExp", proto: true, forced: /./.exec !== exec },
          {
            exec: exec,
          }
        );

        /***/
      },
      /* 83 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // Nashorn ~ JDK8 bug
        var NASHORN_BUG =
          getOwnPropertyDescriptor &&
          !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

        // `Object.prototype.propertyIsEnumerable` method implementation
        // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
        exports.f = NASHORN_BUG
          ? function propertyIsEnumerable(V) {
              var descriptor = getOwnPropertyDescriptor(this, V);
              return !!descriptor && descriptor.enumerable;
            }
          : nativePropertyIsEnumerable;

        /***/
      },
      /* 84 */
      /***/ function (module, exports, __webpack_require__) {
        var shared = __webpack_require__(108);
        var uid = __webpack_require__(67);

        var keys = shared("keys");

        module.exports = function (key) {
          return keys[key] || (keys[key] = uid(key));
        };

        /***/
      },
      /* 85 */
      /***/ function (module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(32);
        var requireObjectCoercible = __webpack_require__(21);

        // `String.prototype.{ codePointAt, at }` methods implementation
        var createMethod = function (CONVERT_TO_STRING) {
          return function ($this, pos) {
            var S = String(requireObjectCoercible($this));
            var position = toInteger(pos);
            var size = S.length;
            var first, second;
            if (position < 0 || position >= size)
              return CONVERT_TO_STRING ? "" : undefined;
            first = S.charCodeAt(position);
            return first < 0xd800 ||
              first > 0xdbff ||
              position + 1 === size ||
              (second = S.charCodeAt(position + 1)) < 0xdc00 ||
              second > 0xdfff
              ? CONVERT_TO_STRING
                ? S.charAt(position)
                : first
              : CONVERT_TO_STRING
              ? S.slice(position, position + 2)
              : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;
          };
        };

        module.exports = {
          // `String.prototype.codePointAt` method
          // https://tc39.es/ecma262/#sec-string.prototype.codepointat
          codeAt: createMethod(false),
          // `String.prototype.at` method
          // https://github.com/mathiasbynens/String.prototype.at
          charAt: createMethod(true),
        };

        /***/
      },
      /* 86 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);

        var ITERATOR = wellKnownSymbol("iterator");
        var SAFE_CLOSING = false;

        try {
          var called = 0;
          var iteratorWithReturn = {
            next: function () {
              return { done: !!called++ };
            },
            return: function () {
              SAFE_CLOSING = true;
            },
          };
          iteratorWithReturn[ITERATOR] = function () {
            return this;
          };
          // eslint-disable-next-line no-throw-literal -- required for testing
          Array.from(iteratorWithReturn, function () {
            throw 2;
          });
        } catch (error) {
          /* empty */
        }

        module.exports = function (exec, SKIP_CLOSING) {
          if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
          var ITERATION_SUPPORT = false;
          try {
            var object = {};
            object[ITERATOR] = function () {
              return {
                next: function () {
                  return { done: (ITERATION_SUPPORT = true) };
                },
              };
            };
            exec(object);
          } catch (error) {
            /* empty */
          }
          return ITERATION_SUPPORT;
        };

        /***/
      },
      /* 87 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var forEach = __webpack_require__(201);

        // `Array.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        $(
          { target: "Array", proto: true, forced: [].forEach != forEach },
          {
            forEach: forEach,
          }
        );

        /***/
      },
      /* 88 */
      /***/ function (module, exports, __webpack_require__) {
        var aFunction = __webpack_require__(25);
        var toObject = __webpack_require__(13);
        var IndexedObject = __webpack_require__(66);
        var toLength = __webpack_require__(10);

        // `Array.prototype.{ reduce, reduceRight }` methods implementation
        var createMethod = function (IS_RIGHT) {
          return function (that, callbackfn, argumentsLength, memo) {
            aFunction(callbackfn);
            var O = toObject(that);
            var self = IndexedObject(O);
            var length = toLength(O.length);
            var index = IS_RIGHT ? length - 1 : 0;
            var i = IS_RIGHT ? -1 : 1;
            if (argumentsLength < 2)
              while (true) {
                if (index in self) {
                  memo = self[index];
                  index += i;
                  break;
                }
                index += i;
                if (IS_RIGHT ? index < 0 : length <= index) {
                  throw TypeError(
                    "Reduce of empty array with no initial value"
                  );
                }
              }
            for (; IS_RIGHT ? index >= 0 : length > index; index += i)
              if (index in self) {
                memo = callbackfn(memo, self[index], index, O);
              }
            return memo;
          };
        };

        module.exports = {
          // `Array.prototype.reduce` method
          // https://tc39.es/ecma262/#sec-array.prototype.reduce
          left: createMethod(false),
          // `Array.prototype.reduceRight` method
          // https://tc39.es/ecma262/#sec-array.prototype.reduceright
          right: createMethod(true),
        };

        /***/
      },
      /* 89 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var IS_PURE = __webpack_require__(31);
        var global = __webpack_require__(3);
        var fails = __webpack_require__(2);

        // Forced replacement object prototype accessors methods
        module.exports =
          IS_PURE ||
          !fails(function () {
            var key = Math.random();
            // In FF throws only define methods
            // eslint-disable-next-line no-undef, no-useless-call -- required for testing
            __defineSetter__.call(null, key, function () {
              /* empty */
            });
            delete global[key];
          });

        /***/
      },
      /* 90 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        // TODO: Remove from `core-js@4` since it's moved to entry points
        __webpack_require__(82);
        var redefine = __webpack_require__(23);
        var fails = __webpack_require__(2);
        var wellKnownSymbol = __webpack_require__(8);
        var regexpExec = __webpack_require__(91);
        var createNonEnumerableProperty = __webpack_require__(22);

        var SPECIES = wellKnownSymbol("species");

        var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
          // #replace needs built-in support for named groups.
          // #match works fine because it just return the exec results, even if it has
          // a "grops" property.
          var re = /./;
          re.exec = function () {
            var result = [];
            result.groups = { a: "7" };
            return result;
          };
          return "".replace(re, "$<a>") !== "7";
        });

        // IE <= 11 replaces $0 with the whole match, as if it was $&
        // https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
        var REPLACE_KEEPS_$0 = (function () {
          return "a".replace(/./, "$0") === "$0";
        })();

        var REPLACE = wellKnownSymbol("replace");
        // Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
        var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
          if (/./[REPLACE]) {
            return /./[REPLACE]("a", "$0") === "";
          }
          return false;
        })();

        // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
        // Weex JS has frozen built-in prototypes, so use try / catch wrapper
        var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
          // eslint-disable-next-line regexp/no-empty-group -- required for testing
          var re = /(?:)/;
          var originalExec = re.exec;
          re.exec = function () {
            return originalExec.apply(this, arguments);
          };
          var result = "ab".split(re);
          return result.length !== 2 || result[0] !== "a" || result[1] !== "b";
        });

        module.exports = function (KEY, length, exec, sham) {
          var SYMBOL = wellKnownSymbol(KEY);

          var DELEGATES_TO_SYMBOL = !fails(function () {
            // String methods call symbol-named RegEp methods
            var O = {};
            O[SYMBOL] = function () {
              return 7;
            };
            return ""[KEY](O) != 7;
          });

          var DELEGATES_TO_EXEC =
            DELEGATES_TO_SYMBOL &&
            !fails(function () {
              // Symbol-named RegExp methods call .exec
              var execCalled = false;
              var re = /a/;

              if (KEY === "split") {
                // We can't use real regex here since it causes deoptimization
                // and serious performance degradation in V8
                // https://github.com/zloirock/core-js/issues/306
                re = {};
                // RegExp[@@split] doesn't call the regex's exec method, but first creates
                // a new one. We need to return the patched regex when creating the new one.
                re.constructor = {};
                re.constructor[SPECIES] = function () {
                  return re;
                };
                re.flags = "";
                re[SYMBOL] = /./[SYMBOL];
              }

              re.exec = function () {
                execCalled = true;
                return null;
              };

              re[SYMBOL]("");
              return !execCalled;
            });

          if (
            !DELEGATES_TO_SYMBOL ||
            !DELEGATES_TO_EXEC ||
            (KEY === "replace" &&
              !(
                REPLACE_SUPPORTS_NAMED_GROUPS &&
                REPLACE_KEEPS_$0 &&
                !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
              )) ||
            (KEY === "split" && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
          ) {
            var nativeRegExpMethod = /./[SYMBOL];
            var methods = exec(
              SYMBOL,
              ""[KEY],
              function (nativeMethod, regexp, str, arg2, forceStringMethod) {
                if (regexp.exec === regexpExec) {
                  if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                    // The native String method already delegates to @@method (this
                    // polyfilled function), leasing to infinite recursion.
                    // We avoid it by directly calling the native @@method method.
                    return {
                      done: true,
                      value: nativeRegExpMethod.call(regexp, str, arg2),
                    };
                  }
                  return {
                    done: true,
                    value: nativeMethod.call(str, regexp, arg2),
                  };
                }
                return { done: false };
              },
              {
                REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,
                REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,
              }
            );
            var stringMethod = methods[0];
            var regexMethod = methods[1];

            redefine(String.prototype, KEY, stringMethod);
            redefine(
              RegExp.prototype,
              SYMBOL,
              length == 2
                ? // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                  // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                  function (string, arg) {
                    return regexMethod.call(string, this, arg);
                  }
                : // 21.2.5.6 RegExp.prototype[@@match](string)
                  // 21.2.5.9 RegExp.prototype[@@search](string)
                  function (string) {
                    return regexMethod.call(string, this);
                  }
            );
          }

          if (sham)
            createNonEnumerableProperty(RegExp.prototype[SYMBOL], "sham", true);
        };

        /***/
      },
      /* 91 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var regexpFlags = __webpack_require__(63);
        var stickyHelpers = __webpack_require__(92);

        var nativeExec = RegExp.prototype.exec;
        // This always refers to the native implementation, because the
        // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
        // which loads this file before patching the method.
        var nativeReplace = String.prototype.replace;

        var patchedExec = nativeExec;

        var UPDATES_LAST_INDEX_WRONG = (function () {
          var re1 = /a/;
          var re2 = /b*/g;
          nativeExec.call(re1, "a");
          nativeExec.call(re2, "a");
          return re1.lastIndex !== 0 || re2.lastIndex !== 0;
        })();

        var UNSUPPORTED_Y =
          stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

        // nonparticipating capturing group, copied from es5-shim's String#split patch.
        // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing
        var NPCG_INCLUDED = /()??/.exec("")[1] !== undefined;

        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;

        if (PATCH) {
          patchedExec = function exec(str) {
            var re = this;
            var lastIndex, reCopy, match, i;
            var sticky = UNSUPPORTED_Y && re.sticky;
            var flags = regexpFlags.call(re);
            var source = re.source;
            var charsAdded = 0;
            var strCopy = str;

            if (sticky) {
              flags = flags.replace("y", "");
              if (flags.indexOf("g") === -1) {
                flags += "g";
              }

              strCopy = String(str).slice(re.lastIndex);
              // Support anchored sticky behavior.
              if (
                re.lastIndex > 0 &&
                (!re.multiline ||
                  (re.multiline && str[re.lastIndex - 1] !== "\n"))
              ) {
                source = "(?: " + source + ")";
                strCopy = " " + strCopy;
                charsAdded++;
              }
              // ^(? + rx + ) is needed, in combination with some str slicing, to
              // simulate the 'y' flag.
              reCopy = new RegExp("^(?:" + source + ")", flags);
            }

            if (NPCG_INCLUDED) {
              reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
            }
            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

            match = nativeExec.call(sticky ? reCopy : re, strCopy);

            if (sticky) {
              if (match) {
                match.input = match.input.slice(charsAdded);
                match[0] = match[0].slice(charsAdded);
                match.index = re.lastIndex;
                re.lastIndex += match[0].length;
              } else re.lastIndex = 0;
            } else if (UPDATES_LAST_INDEX_WRONG && match) {
              re.lastIndex = re.global
                ? match.index + match[0].length
                : lastIndex;
            }
            if (NPCG_INCLUDED && match && match.length > 1) {
              // Fix browsers whose `exec` methods don't consistently return `undefined`
              // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
              nativeReplace.call(match[0], reCopy, function () {
                for (i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undefined) match[i] = undefined;
                }
              });
            }

            return match;
          };
        }

        module.exports = patchedExec;

        /***/
      },
      /* 92 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fails = __webpack_require__(2);

        // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,
        // so we use an intermediate function.
        function RE(s, f) {
          return RegExp(s, f);
        }

        exports.UNSUPPORTED_Y = fails(function () {
          // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
          var re = RE("a", "y");
          re.lastIndex = 2;
          return re.exec("abcd") != null;
        });

        exports.BROKEN_CARET = fails(function () {
          // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
          var re = RE("^r", "gy");
          re.lastIndex = 2;
          return re.exec("str") != null;
        });

        /***/
      },
      /* 93 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var charAt = __webpack_require__(85).charAt;

        // `AdvanceStringIndex` abstract operation
        // https://tc39.es/ecma262/#sec-advancestringindex
        module.exports = function (S, index, unicode) {
          return index + (unicode ? charAt(S, index).length : 1);
        };

        /***/
      },
      /* 94 */
      /***/ function (module, exports, __webpack_require__) {
        var classof = __webpack_require__(40);
        var regexpExec = __webpack_require__(91);

        // `RegExpExec` abstract operation
        // https://tc39.es/ecma262/#sec-regexpexec
        module.exports = function (R, S) {
          var exec = R.exec;
          if (typeof exec === "function") {
            var result = exec.call(R, S);
            if (typeof result !== "object") {
              throw TypeError(
                "RegExp exec method returned something other than an Object or null"
              );
            }
            return result;
          }

          if (classof(R) !== "RegExp") {
            throw TypeError("RegExp#exec called on incompatible receiver");
          }

          return regexpExec.call(R, S);
        };

        /***/
      },
      /* 95 */
      /***/ function (module, exports) {
        // a string of all valid unicode whitespaces
        module.exports =
          "\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002" +
          "\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

        /***/
      },
      /* 96 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);
        var setPrototypeOf = __webpack_require__(46);

        // makes subclassing work correct for wrapped built-ins
        module.exports = function ($this, dummy, Wrapper) {
          var NewTarget, NewTargetPrototype;
          if (
            // it can work only with native `setPrototypeOf`
            setPrototypeOf &&
            // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
            typeof (NewTarget = dummy.constructor) == "function" &&
            NewTarget !== Wrapper &&
            isObject((NewTargetPrototype = NewTarget.prototype)) &&
            NewTargetPrototype !== Wrapper.prototype
          )
            setPrototypeOf($this, NewTargetPrototype);
          return $this;
        };

        /***/
      },
      /* 97 */
      /***/ function (module, exports) {
        var nativeExpm1 = Math.expm1;
        var exp = Math.exp;

        // `Math.expm1` method implementation
        // https://tc39.es/ecma262/#sec-math.expm1
        module.exports =
          !nativeExpm1 ||
          // Old FF bug
          nativeExpm1(10) > 22025.465794806719 ||
          nativeExpm1(10) < 22025.4657948067165168 ||
          // Tor Browser bug
          nativeExpm1(-2e-17) != -2e-17
            ? function expm1(x) {
                return (x = +x) == 0
                  ? x
                  : x > -1e-6 && x < 1e-6
                  ? x + (x * x) / 2
                  : exp(x) - 1;
              }
            : nativeExpm1;

        /***/
      },
      /* 98 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var aFunction = __webpack_require__(25);

        var PromiseCapability = function (C) {
          var resolve, reject;
          this.promise = new C(function ($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined)
              throw TypeError("Bad Promise constructor");
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aFunction(resolve);
          this.reject = aFunction(reject);
        };

        // 25.4.1.5 NewPromiseCapability(C)
        module.exports.f = function (C) {
          return new PromiseCapability(C);
        };

        /***/
      },
      /* 99 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var isForced = __webpack_require__(70);
        var redefine = __webpack_require__(23);
        var InternalMetadataModule = __webpack_require__(55);
        var iterate = __webpack_require__(47);
        var anInstance = __webpack_require__(49);
        var isObject = __webpack_require__(4);
        var fails = __webpack_require__(2);
        var checkCorrectnessOfIteration = __webpack_require__(86);
        var setToStringTag = __webpack_require__(36);
        var inheritIfRequired = __webpack_require__(96);

        module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
          var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
          var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
          var ADDER = IS_MAP ? "set" : "add";
          var NativeConstructor = global[CONSTRUCTOR_NAME];
          var NativePrototype =
            NativeConstructor && NativeConstructor.prototype;
          var Constructor = NativeConstructor;
          var exported = {};

          var fixMethod = function (KEY) {
            var nativeMethod = NativePrototype[KEY];
            redefine(
              NativePrototype,
              KEY,
              KEY == "add"
                ? function add(value) {
                    nativeMethod.call(this, value === 0 ? 0 : value);
                    return this;
                  }
                : KEY == "delete"
                ? function (key) {
                    return IS_WEAK && !isObject(key)
                      ? false
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : KEY == "get"
                ? function get(key) {
                    return IS_WEAK && !isObject(key)
                      ? undefined
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : KEY == "has"
                ? function has(key) {
                    return IS_WEAK && !isObject(key)
                      ? false
                      : nativeMethod.call(this, key === 0 ? 0 : key);
                  }
                : function set(key, value) {
                    nativeMethod.call(this, key === 0 ? 0 : key, value);
                    return this;
                  }
            );
          };

          var REPLACE = isForced(
            CONSTRUCTOR_NAME,
            typeof NativeConstructor != "function" ||
              !(
                IS_WEAK ||
                (NativePrototype.forEach &&
                  !fails(function () {
                    new NativeConstructor().entries().next();
                  }))
              )
          );

          if (REPLACE) {
            // create collection constructor
            Constructor = common.getConstructor(
              wrapper,
              CONSTRUCTOR_NAME,
              IS_MAP,
              ADDER
            );
            InternalMetadataModule.REQUIRED = true;
          } else if (isForced(CONSTRUCTOR_NAME, true)) {
            var instance = new Constructor();
            // early implementations not supports chaining
            var HASNT_CHAINING =
              instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
            // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
            var THROWS_ON_PRIMITIVES = fails(function () {
              instance.has(1);
            });
            // most early implementations doesn't supports iterables, most modern - not close it correctly
            // eslint-disable-next-line no-new -- required for testing
            var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (
              iterable
            ) {
              new NativeConstructor(iterable);
            });
            // for early implementations -0 and +0 not the same
            var BUGGY_ZERO =
              !IS_WEAK &&
              fails(function () {
                // V8 ~ Chromium 42- fails only with 5+ elements
                var $instance = new NativeConstructor();
                var index = 5;
                while (index--) $instance[ADDER](index, index);
                return !$instance.has(-0);
              });

            if (!ACCEPT_ITERABLES) {
              Constructor = wrapper(function (dummy, iterable) {
                anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
                var that = inheritIfRequired(
                  new NativeConstructor(),
                  dummy,
                  Constructor
                );
                if (iterable != undefined)
                  iterate(iterable, that[ADDER], {
                    that: that,
                    AS_ENTRIES: IS_MAP,
                  });
                return that;
              });
              Constructor.prototype = NativePrototype;
              NativePrototype.constructor = Constructor;
            }

            if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
              fixMethod("delete");
              fixMethod("has");
              IS_MAP && fixMethod("get");
            }

            if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

            // weak collections should not contains .clear method
            if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
          }

          exported[CONSTRUCTOR_NAME] = Constructor;
          $(
            { global: true, forced: Constructor != NativeConstructor },
            exported
          );

          setToStringTag(Constructor, CONSTRUCTOR_NAME);

          if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

          return Constructor;
        };

        /***/
      },
      /* 100 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(3);
        var DESCRIPTORS = __webpack_require__(7);
        var NATIVE_ARRAY_BUFFER = __webpack_require__(140);
        var createNonEnumerableProperty = __webpack_require__(22);
        var redefineAll = __webpack_require__(65);
        var fails = __webpack_require__(2);
        var anInstance = __webpack_require__(49);
        var toInteger = __webpack_require__(32);
        var toLength = __webpack_require__(10);
        var toIndex = __webpack_require__(228);
        var IEEE754 = __webpack_require__(390);
        var getPrototypeOf = __webpack_require__(33);
        var setPrototypeOf = __webpack_require__(46);
        var getOwnPropertyNames = __webpack_require__(52).f;
        var defineProperty = __webpack_require__(12).f;
        var arrayFill = __webpack_require__(120);
        var setToStringTag = __webpack_require__(36);
        var InternalStateModule = __webpack_require__(24);

        var getInternalState = InternalStateModule.get;
        var setInternalState = InternalStateModule.set;
        var ARRAY_BUFFER = "ArrayBuffer";
        var DATA_VIEW = "DataView";
        var PROTOTYPE = "prototype";
        var WRONG_LENGTH = "Wrong length";
        var WRONG_INDEX = "Wrong index";
        var NativeArrayBuffer = global[ARRAY_BUFFER];
        var $ArrayBuffer = NativeArrayBuffer;
        var $DataView = global[DATA_VIEW];
        var $DataViewPrototype = $DataView && $DataView[PROTOTYPE];
        var ObjectPrototype = Object.prototype;
        var RangeError = global.RangeError;

        var packIEEE754 = IEEE754.pack;
        var unpackIEEE754 = IEEE754.unpack;

        var packInt8 = function (number) {
          return [number & 0xff];
        };

        var packInt16 = function (number) {
          return [number & 0xff, (number >> 8) & 0xff];
        };

        var packInt32 = function (number) {
          return [
            number & 0xff,
            (number >> 8) & 0xff,
            (number >> 16) & 0xff,
            (number >> 24) & 0xff,
          ];
        };

        var unpackInt32 = function (buffer) {
          return (
            (buffer[3] << 24) | (buffer[2] << 16) | (buffer[1] << 8) | buffer[0]
          );
        };

        var packFloat32 = function (number) {
          return packIEEE754(number, 23, 4);
        };

        var packFloat64 = function (number) {
          return packIEEE754(number, 52, 8);
        };

        var addGetter = function (Constructor, key) {
          defineProperty(Constructor[PROTOTYPE], key, {
            get: function () {
              return getInternalState(this)[key];
            },
          });
        };

        var get = function (view, count, index, isLittleEndian) {
          var intIndex = toIndex(index);
          var store = getInternalState(view);
          if (intIndex + count > store.byteLength)
            throw RangeError(WRONG_INDEX);
          var bytes = getInternalState(store.buffer).bytes;
          var start = intIndex + store.byteOffset;
          var pack = bytes.slice(start, start + count);
          return isLittleEndian ? pack : pack.reverse();
        };

        var set = function (
          view,
          count,
          index,
          conversion,
          value,
          isLittleEndian
        ) {
          var intIndex = toIndex(index);
          var store = getInternalState(view);
          if (intIndex + count > store.byteLength)
            throw RangeError(WRONG_INDEX);
          var bytes = getInternalState(store.buffer).bytes;
          var start = intIndex + store.byteOffset;
          var pack = conversion(+value);
          for (var i = 0; i < count; i++)
            bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
        };

        if (!NATIVE_ARRAY_BUFFER) {
          $ArrayBuffer = function ArrayBuffer(length) {
            anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
            var byteLength = toIndex(length);
            setInternalState(this, {
              bytes: arrayFill.call(new Array(byteLength), 0),
              byteLength: byteLength,
            });
            if (!DESCRIPTORS) this.byteLength = byteLength;
          };

          $DataView = function DataView(buffer, byteOffset, byteLength) {
            anInstance(this, $DataView, DATA_VIEW);
            anInstance(buffer, $ArrayBuffer, DATA_VIEW);
            var bufferLength = getInternalState(buffer).byteLength;
            var offset = toInteger(byteOffset);
            if (offset < 0 || offset > bufferLength)
              throw RangeError("Wrong offset");
            byteLength =
              byteLength === undefined
                ? bufferLength - offset
                : toLength(byteLength);
            if (offset + byteLength > bufferLength)
              throw RangeError(WRONG_LENGTH);
            setInternalState(this, {
              buffer: buffer,
              byteLength: byteLength,
              byteOffset: offset,
            });
            if (!DESCRIPTORS) {
              this.buffer = buffer;
              this.byteLength = byteLength;
              this.byteOffset = offset;
            }
          };

          if (DESCRIPTORS) {
            addGetter($ArrayBuffer, "byteLength");
            addGetter($DataView, "buffer");
            addGetter($DataView, "byteLength");
            addGetter($DataView, "byteOffset");
          }

          redefineAll($DataView[PROTOTYPE], {
            getInt8: function getInt8(byteOffset) {
              return (get(this, 1, byteOffset)[0] << 24) >> 24;
            },
            getUint8: function getUint8(byteOffset) {
              return get(this, 1, byteOffset)[0];
            },
            getInt16: function getInt16(byteOffset /* , littleEndian */) {
              var bytes = get(
                this,
                2,
                byteOffset,
                arguments.length > 1 ? arguments[1] : undefined
              );
              return (((bytes[1] << 8) | bytes[0]) << 16) >> 16;
            },
            getUint16: function getUint16(byteOffset /* , littleEndian */) {
              var bytes = get(
                this,
                2,
                byteOffset,
                arguments.length > 1 ? arguments[1] : undefined
              );
              return (bytes[1] << 8) | bytes[0];
            },
            getInt32: function getInt32(byteOffset /* , littleEndian */) {
              return unpackInt32(
                get(
                  this,
                  4,
                  byteOffset,
                  arguments.length > 1 ? arguments[1] : undefined
                )
              );
            },
            getUint32: function getUint32(byteOffset /* , littleEndian */) {
              return (
                unpackInt32(
                  get(
                    this,
                    4,
                    byteOffset,
                    arguments.length > 1 ? arguments[1] : undefined
                  )
                ) >>> 0
              );
            },
            getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
              return unpackIEEE754(
                get(
                  this,
                  4,
                  byteOffset,
                  arguments.length > 1 ? arguments[1] : undefined
                ),
                23
              );
            },
            getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
              return unpackIEEE754(
                get(
                  this,
                  8,
                  byteOffset,
                  arguments.length > 1 ? arguments[1] : undefined
                ),
                52
              );
            },
            setInt8: function setInt8(byteOffset, value) {
              set(this, 1, byteOffset, packInt8, value);
            },
            setUint8: function setUint8(byteOffset, value) {
              set(this, 1, byteOffset, packInt8, value);
            },
            setInt16: function setInt16(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                2,
                byteOffset,
                packInt16,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            setUint16: function setUint16(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                2,
                byteOffset,
                packInt16,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            setInt32: function setInt32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                4,
                byteOffset,
                packInt32,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            setUint32: function setUint32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                4,
                byteOffset,
                packInt32,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            setFloat32: function setFloat32(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                4,
                byteOffset,
                packFloat32,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
            setFloat64: function setFloat64(
              byteOffset,
              value /* , littleEndian */
            ) {
              set(
                this,
                8,
                byteOffset,
                packFloat64,
                value,
                arguments.length > 2 ? arguments[2] : undefined
              );
            },
          });
        } else {
          /* eslint-disable no-new -- required for testing */
          if (
            !fails(function () {
              NativeArrayBuffer(1);
            }) ||
            !fails(function () {
              new NativeArrayBuffer(-1);
            }) ||
            fails(function () {
              new NativeArrayBuffer();
              new NativeArrayBuffer(1.5);
              new NativeArrayBuffer(NaN);
              return NativeArrayBuffer.name != ARRAY_BUFFER;
            })
          ) {
            /* eslint-enable no-new -- required for testing */
            $ArrayBuffer = function ArrayBuffer(length) {
              anInstance(this, $ArrayBuffer);
              return new NativeArrayBuffer(toIndex(length));
            };
            var ArrayBufferPrototype = ($ArrayBuffer[PROTOTYPE] =
              NativeArrayBuffer[PROTOTYPE]);
            for (
              var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key;
              keys.length > j;

            ) {
              if (!((key = keys[j++]) in $ArrayBuffer)) {
                createNonEnumerableProperty(
                  $ArrayBuffer,
                  key,
                  NativeArrayBuffer[key]
                );
              }
            }
            ArrayBufferPrototype.constructor = $ArrayBuffer;
          }

          // WebKit bug - the same parent prototype for typed arrays and data view
          if (
            setPrototypeOf &&
            getPrototypeOf($DataViewPrototype) !== ObjectPrototype
          ) {
            setPrototypeOf($DataViewPrototype, ObjectPrototype);
          }

          // iOS Safari 7.x bug
          var testView = new $DataView(new $ArrayBuffer(2));
          var nativeSetInt8 = $DataViewPrototype.setInt8;
          testView.setInt8(0, 2147483648);
          testView.setInt8(1, 2147483649);
          if (testView.getInt8(0) || !testView.getInt8(1))
            redefineAll(
              $DataViewPrototype,
              {
                setInt8: function setInt8(byteOffset, value) {
                  nativeSetInt8.call(this, byteOffset, (value << 24) >> 24);
                },
                setUint8: function setUint8(byteOffset, value) {
                  nativeSetInt8.call(this, byteOffset, (value << 24) >> 24);
                },
              },
              { unsafe: true }
            );
        }

        setToStringTag($ArrayBuffer, ARRAY_BUFFER);
        setToStringTag($DataView, DATA_VIEW);

        module.exports = {
          ArrayBuffer: $ArrayBuffer,
          DataView: $DataView,
        };

        /***/
      },
      /* 101 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var DOMIterables = __webpack_require__(232);
        var forEach = __webpack_require__(201);
        var createNonEnumerableProperty = __webpack_require__(22);

        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype;
          // some Chrome versions have non-configurable methods on DOMTokenList
          if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
            try {
              createNonEnumerableProperty(
                CollectionPrototype,
                "forEach",
                forEach
              );
            } catch (error) {
              CollectionPrototype.forEach = forEach;
            }
        }

        /***/
      },
      /* 102 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var userAgent = __webpack_require__(74);

        var slice = [].slice;
        var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

        var wrap = function (scheduler) {
          return function (handler, timeout /* , ...arguments */) {
            var boundArgs = arguments.length > 2;
            var args = boundArgs ? slice.call(arguments, 2) : undefined;
            return scheduler(
              boundArgs
                ? function () {
                    // eslint-disable-next-line no-new-func -- spec requirement
                    (typeof handler == "function"
                      ? handler
                      : Function(handler)
                    ).apply(this, args);
                  }
                : handler,
              timeout
            );
          };
        };

        // ie9- setTimeout & setInterval additional parameters fix
        // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
        $(
          { global: true, bind: true, forced: MSIE },
          {
            // `setTimeout` method
            // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
            setTimeout: wrap(global.setTimeout),
            // `setInterval` method
            // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
            setInterval: wrap(global.setInterval),
          }
        );

        /***/
      },
      /* 103 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /*
object-assign
(c) Sindre Sorhus
@license MIT
*/

        /* eslint-disable no-unused-vars */
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var propIsEnumerable = Object.prototype.propertyIsEnumerable;

        function toObject(val) {
          if (val === null || val === undefined) {
            throw new TypeError(
              "Object.assign cannot be called with null or undefined"
            );
          }

          return Object(val);
        }

        function shouldUseNative() {
          try {
            if (!Object.assign) {
              return false;
            }

            // Detect buggy property enumeration order in older V8 versions.

            // https://bugs.chromium.org/p/v8/issues/detail?id=4118
            var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
            test1[5] = "de";
            if (Object.getOwnPropertyNames(test1)[0] === "5") {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test2 = {};
            for (var i = 0; i < 10; i++) {
              test2["_" + String.fromCharCode(i)] = i;
            }
            var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
              return test2[n];
            });
            if (order2.join("") !== "0123456789") {
              return false;
            }

            // https://bugs.chromium.org/p/v8/issues/detail?id=3056
            var test3 = {};
            "abcdefghijklmnopqrst".split("").forEach(function (letter) {
              test3[letter] = letter;
            });
            if (
              Object.keys(Object.assign({}, test3)).join("") !==
              "abcdefghijklmnopqrst"
            ) {
              return false;
            }

            return true;
          } catch (err) {
            // We don't expect any of the above to throw, but better to be safe.
            return false;
          }
        }

        module.exports = shouldUseNative()
          ? Object.assign
          : function (target, source) {
              var from;
              var to = toObject(target);
              var symbols;

              for (var s = 1; s < arguments.length; s++) {
                from = Object(arguments[s]);

                for (var key in from) {
                  if (hasOwnProperty.call(from, key)) {
                    to[key] = from[key];
                  }
                }

                if (getOwnPropertySymbols) {
                  symbols = getOwnPropertySymbols(from);
                  for (var i = 0; i < symbols.length; i++) {
                    if (propIsEnumerable.call(from, symbols[i])) {
                      to[symbols[i]] = from[symbols[i]];
                    }
                  }
                }
              }

              return to;
            };

        /***/
      },
      /* 104 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var isObject = __webpack_require__(4);

        var document = global.document;
        // typeof document.createElement is 'object' in old IE
        var EXISTS = isObject(document) && isObject(document.createElement);

        module.exports = function (it) {
          return EXISTS ? document.createElement(it) : {};
        };

        /***/
      },
      /* 105 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var createNonEnumerableProperty = __webpack_require__(22);

        module.exports = function (key, value) {
          try {
            createNonEnumerableProperty(global, key, value);
          } catch (error) {
            global[key] = value;
          }
          return value;
        };

        /***/
      },
      /* 106 */
      /***/ function (module, exports, __webpack_require__) {
        var store = __webpack_require__(107);

        var functionToString = Function.toString;

        // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
        if (typeof store.inspectSource != "function") {
          store.inspectSource = function (it) {
            return functionToString.call(it);
          };
        }

        module.exports = store.inspectSource;

        /***/
      },
      /* 107 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var setGlobal = __webpack_require__(105);

        var SHARED = "__core-js_shared__";
        var store = global[SHARED] || setGlobal(SHARED, {});

        module.exports = store;

        /***/
      },
      /* 108 */
      /***/ function (module, exports, __webpack_require__) {
        var IS_PURE = __webpack_require__(31);
        var store = __webpack_require__(107);

        (module.exports = function (key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {});
        })("versions", []).push({
          version: "3.9.0",
          mode: IS_PURE ? "pure" : "global",
          copyright: "© 2021 Denis Pushkarev (zloirock.ru)",
        });

        /***/
      },
      /* 109 */
      /***/ function (module, exports, __webpack_require__) {
        var getBuiltIn = __webpack_require__(28);
        var getOwnPropertyNamesModule = __webpack_require__(52);
        var getOwnPropertySymbolsModule = __webpack_require__(111);
        var anObject = __webpack_require__(5);

        // all object keys, includes non-enumerable and symbols
        module.exports =
          getBuiltIn("Reflect", "ownKeys") ||
          function ownKeys(it) {
            var keys = getOwnPropertyNamesModule.f(anObject(it));
            var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
            return getOwnPropertySymbols
              ? keys.concat(getOwnPropertySymbols(it))
              : keys;
          };

        /***/
      },
      /* 110 */
      /***/ function (module, exports) {
        // IE8- don't enum bug keys
        module.exports = [
          "constructor",
          "hasOwnProperty",
          "isPrototypeOf",
          "propertyIsEnumerable",
          "toLocaleString",
          "toString",
          "valueOf",
        ];

        /***/
      },
      /* 111 */
      /***/ function (module, exports) {
        exports.f = Object.getOwnPropertySymbols;

        /***/
      },
      /* 112 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        module.exports =
          !!Object.getOwnPropertySymbols &&
          !fails(function () {
            // Chrome 38 Symbol has incorrect toString conversion
            /* global Symbol -- required for testing */
            return !String(Symbol());
          });

        /***/
      },
      /* 113 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);

        var TO_STRING_TAG = wellKnownSymbol("toStringTag");
        var test = {};

        test[TO_STRING_TAG] = "z";

        module.exports = String(test) === "[object z]";

        /***/
      },
      /* 114 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var definePropertyModule = __webpack_require__(12);
        var anObject = __webpack_require__(5);
        var objectKeys = __webpack_require__(76);

        // `Object.defineProperties` method
        // https://tc39.es/ecma262/#sec-object.defineproperties
        module.exports = DESCRIPTORS
          ? Object.defineProperties
          : function defineProperties(O, Properties) {
              anObject(O);
              var keys = objectKeys(Properties);
              var length = keys.length;
              var index = 0;
              var key;
              while (length > index)
                definePropertyModule.f(
                  O,
                  (key = keys[index++]),
                  Properties[key]
                );
              return O;
            };

        /***/
      },
      /* 115 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createIteratorConstructor = __webpack_require__(116);
        var getPrototypeOf = __webpack_require__(33);
        var setPrototypeOf = __webpack_require__(46);
        var setToStringTag = __webpack_require__(36);
        var createNonEnumerableProperty = __webpack_require__(22);
        var redefine = __webpack_require__(23);
        var wellKnownSymbol = __webpack_require__(8);
        var IS_PURE = __webpack_require__(31);
        var Iterators = __webpack_require__(78);
        var IteratorsCore = __webpack_require__(195);

        var IteratorPrototype = IteratorsCore.IteratorPrototype;
        var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
        var ITERATOR = wellKnownSymbol("iterator");
        var KEYS = "keys";
        var VALUES = "values";
        var ENTRIES = "entries";

        var returnThis = function () {
          return this;
        };

        module.exports = function (
          Iterable,
          NAME,
          IteratorConstructor,
          next,
          DEFAULT,
          IS_SET,
          FORCED
        ) {
          createIteratorConstructor(IteratorConstructor, NAME, next);

          var getIterationMethod = function (KIND) {
            if (KIND === DEFAULT && defaultIterator) return defaultIterator;
            if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
              return IterablePrototype[KIND];
            switch (KIND) {
              case KEYS:
                return function keys() {
                  return new IteratorConstructor(this, KIND);
                };
              case VALUES:
                return function values() {
                  return new IteratorConstructor(this, KIND);
                };
              case ENTRIES:
                return function entries() {
                  return new IteratorConstructor(this, KIND);
                };
            }
            return function () {
              return new IteratorConstructor(this);
            };
          };

          var TO_STRING_TAG = NAME + " Iterator";
          var INCORRECT_VALUES_NAME = false;
          var IterablePrototype = Iterable.prototype;
          var nativeIterator =
            IterablePrototype[ITERATOR] ||
            IterablePrototype["@@iterator"] ||
            (DEFAULT && IterablePrototype[DEFAULT]);
          var defaultIterator =
            (!BUGGY_SAFARI_ITERATORS && nativeIterator) ||
            getIterationMethod(DEFAULT);
          var anyNativeIterator =
            NAME == "Array"
              ? IterablePrototype.entries || nativeIterator
              : nativeIterator;
          var CurrentIteratorPrototype, methods, KEY;

          // fix native
          if (anyNativeIterator) {
            CurrentIteratorPrototype = getPrototypeOf(
              anyNativeIterator.call(new Iterable())
            );
            if (
              IteratorPrototype !== Object.prototype &&
              CurrentIteratorPrototype.next
            ) {
              if (
                !IS_PURE &&
                getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype
              ) {
                if (setPrototypeOf) {
                  setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                } else if (
                  typeof CurrentIteratorPrototype[ITERATOR] != "function"
                ) {
                  createNonEnumerableProperty(
                    CurrentIteratorPrototype,
                    ITERATOR,
                    returnThis
                  );
                }
              }
              // Set @@toStringTag to native iterators
              setToStringTag(
                CurrentIteratorPrototype,
                TO_STRING_TAG,
                true,
                true
              );
              if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
            }
          }

          // fix Array#{values, @@iterator}.name in V8 / FF
          if (
            DEFAULT == VALUES &&
            nativeIterator &&
            nativeIterator.name !== VALUES
          ) {
            INCORRECT_VALUES_NAME = true;
            defaultIterator = function values() {
              return nativeIterator.call(this);
            };
          }

          // define iterator
          if (
            (!IS_PURE || FORCED) &&
            IterablePrototype[ITERATOR] !== defaultIterator
          ) {
            createNonEnumerableProperty(
              IterablePrototype,
              ITERATOR,
              defaultIterator
            );
          }
          Iterators[NAME] = defaultIterator;

          // export additional methods
          if (DEFAULT) {
            methods = {
              values: getIterationMethod(VALUES),
              keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
              entries: getIterationMethod(ENTRIES),
            };
            if (FORCED)
              for (KEY in methods) {
                if (
                  BUGGY_SAFARI_ITERATORS ||
                  INCORRECT_VALUES_NAME ||
                  !(KEY in IterablePrototype)
                ) {
                  redefine(IterablePrototype, KEY, methods[KEY]);
                }
              }
            else
              $(
                {
                  target: NAME,
                  proto: true,
                  forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME,
                },
                methods
              );
          }

          return methods;
        };

        /***/
      },
      /* 116 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var IteratorPrototype = __webpack_require__(195).IteratorPrototype;
        var create = __webpack_require__(37);
        var createPropertyDescriptor = __webpack_require__(39);
        var setToStringTag = __webpack_require__(36);
        var Iterators = __webpack_require__(78);

        var returnThis = function () {
          return this;
        };

        module.exports = function (IteratorConstructor, NAME, next) {
          var TO_STRING_TAG = NAME + " Iterator";
          IteratorConstructor.prototype = create(IteratorPrototype, {
            next: createPropertyDescriptor(1, next),
          });
          setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
          Iterators[TO_STRING_TAG] = returnThis;
          return IteratorConstructor;
        };

        /***/
      },
      /* 117 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);

        module.exports = !fails(function () {
          function F() {
            /* empty */
          }
          F.prototype.constructor = null;
          return Object.getPrototypeOf(new F()) !== F.prototype;
        });

        /***/
      },
      /* 118 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var from = __webpack_require__(197);
        var checkCorrectnessOfIteration = __webpack_require__(86);

        var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (
          iterable
        ) {
          Array.from(iterable);
        });

        // `Array.from` method
        // https://tc39.es/ecma262/#sec-array.from
        $(
          { target: "Array", stat: true, forced: INCORRECT_ITERATION },
          {
            from: from,
          }
        );

        /***/
      },
      /* 119 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);
        var Iterators = __webpack_require__(78);

        var ITERATOR = wellKnownSymbol("iterator");
        var ArrayPrototype = Array.prototype;

        // check on default Array iterator
        module.exports = function (it) {
          return (
            it !== undefined &&
            (Iterators.Array === it || ArrayPrototype[ITERATOR] === it)
          );
        };

        /***/
      },
      /* 120 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toObject = __webpack_require__(13);
        var toAbsoluteIndex = __webpack_require__(44);
        var toLength = __webpack_require__(10);

        // `Array.prototype.fill` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.fill
        module.exports = function fill(value /* , start = 0, end = @length */) {
          var O = toObject(this);
          var length = toLength(O.length);
          var argumentsLength = arguments.length;
          var index = toAbsoluteIndex(
            argumentsLength > 1 ? arguments[1] : undefined,
            length
          );
          var end = argumentsLength > 2 ? arguments[2] : undefined;
          var endPos =
            end === undefined ? length : toAbsoluteIndex(end, length);
          while (endPos > index) O[index++] = value;
          return O;
        };

        /***/
      },
      /* 121 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $filter = __webpack_require__(17).filter;
        var arrayMethodHasSpeciesSupport = __webpack_require__(72);

        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");

        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        // with adding support of @@species
        $(
          { target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT },
          {
            filter: function filter(callbackfn /* , thisArg */) {
              return $filter(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 122 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $includes = __webpack_require__(69).includes;
        var addToUnscopables = __webpack_require__(48);

        // `Array.prototype.includes` method
        // https://tc39.es/ecma262/#sec-array.prototype.includes
        $(
          { target: "Array", proto: true },
          {
            includes: function includes(el /* , fromIndex = 0 */) {
              return $includes(
                this,
                el,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("includes");

        /***/
      },
      /* 123 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var aFunction = __webpack_require__(25);
        var toObject = __webpack_require__(13);
        var fails = __webpack_require__(2);
        var arrayMethodIsStrict = __webpack_require__(41);

        var test = [];
        var nativeSort = test.sort;

        // IE8-
        var FAILS_ON_UNDEFINED = fails(function () {
          test.sort(undefined);
        });
        // V8 bug
        var FAILS_ON_NULL = fails(function () {
          test.sort(null);
        });
        // Old WebKit
        var STRICT_METHOD = arrayMethodIsStrict("sort");

        var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD;

        // `Array.prototype.sort` method
        // https://tc39.es/ecma262/#sec-array.prototype.sort
        $(
          { target: "Array", proto: true, forced: FORCED },
          {
            sort: function sort(comparefn) {
              return comparefn === undefined
                ? nativeSort.call(toObject(this))
                : nativeSort.call(toObject(this), aFunction(comparefn));
            },
          }
        );

        /***/
      },
      /* 124 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var $values = __webpack_require__(209).values;

        // `Object.values` method
        // https://tc39.es/ecma262/#sec-object.values
        $(
          { target: "Object", stat: true },
          {
            values: function values(O) {
              return $values(O);
            },
          }
        );

        /***/
      },
      /* 125 */
      /***/ function (module, exports, __webpack_require__) {
        var isRegExp = __webpack_require__(81);

        module.exports = function (it) {
          if (isRegExp(it)) {
            throw TypeError("The method doesn't accept regular expressions");
          }
          return it;
        };

        /***/
      },
      /* 126 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);

        var MATCH = wellKnownSymbol("match");

        module.exports = function (METHOD_NAME) {
          var regexp = /./;
          try {
            "/./"[METHOD_NAME](regexp);
          } catch (error1) {
            try {
              regexp[MATCH] = false;
              return "/./"[METHOD_NAME](regexp);
            } catch (error2) {
              /* empty */
            }
          }
          return false;
        };

        /***/
      },
      /* 127 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var notARegExp = __webpack_require__(125);
        var requireObjectCoercible = __webpack_require__(21);
        var correctIsRegExpLogic = __webpack_require__(126);

        // `String.prototype.includes` method
        // https://tc39.es/ecma262/#sec-string.prototype.includes
        $(
          {
            target: "String",
            proto: true,
            forced: !correctIsRegExpLogic("includes"),
          },
          {
            includes: function includes(searchString /* , position = 0 */) {
              return !!~String(requireObjectCoercible(this)).indexOf(
                notARegExp(searchString),
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 128 */
      /***/ function (module, exports, __webpack_require__) {
        // https://github.com/tc39/proposal-string-pad-start-end
        var toLength = __webpack_require__(10);
        var repeat = __webpack_require__(129);
        var requireObjectCoercible = __webpack_require__(21);

        var ceil = Math.ceil;

        // `String.prototype.{ padStart, padEnd }` methods implementation
        var createMethod = function (IS_END) {
          return function ($this, maxLength, fillString) {
            var S = String(requireObjectCoercible($this));
            var stringLength = S.length;
            var fillStr = fillString === undefined ? " " : String(fillString);
            var intMaxLength = toLength(maxLength);
            var fillLen, stringFiller;
            if (intMaxLength <= stringLength || fillStr == "") return S;
            fillLen = intMaxLength - stringLength;
            stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));
            if (stringFiller.length > fillLen)
              stringFiller = stringFiller.slice(0, fillLen);
            return IS_END ? S + stringFiller : stringFiller + S;
          };
        };

        module.exports = {
          // `String.prototype.padStart` method
          // https://tc39.es/ecma262/#sec-string.prototype.padstart
          start: createMethod(false),
          // `String.prototype.padEnd` method
          // https://tc39.es/ecma262/#sec-string.prototype.padend
          end: createMethod(true),
        };

        /***/
      },
      /* 129 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toInteger = __webpack_require__(32);
        var requireObjectCoercible = __webpack_require__(21);

        // `String.prototype.repeat` method implementation
        // https://tc39.es/ecma262/#sec-string.prototype.repeat
        module.exports =
          "".repeat ||
          function repeat(count) {
            var str = String(requireObjectCoercible(this));
            var result = "";
            var n = toInteger(count);
            if (n < 0 || n == Infinity)
              throw RangeError("Wrong number of repetitions");
            for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
            return result;
          };

        /***/
      },
      /* 130 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fixRegExpWellKnownSymbolLogic = __webpack_require__(90);
        var isRegExp = __webpack_require__(81);
        var anObject = __webpack_require__(5);
        var requireObjectCoercible = __webpack_require__(21);
        var speciesConstructor = __webpack_require__(42);
        var advanceStringIndex = __webpack_require__(93);
        var toLength = __webpack_require__(10);
        var callRegExpExec = __webpack_require__(94);
        var regexpExec = __webpack_require__(91);
        var fails = __webpack_require__(2);

        var arrayPush = [].push;
        var min = Math.min;
        var MAX_UINT32 = 0xffffffff;

        // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
        var SUPPORTS_Y = !fails(function () {
          return !RegExp(MAX_UINT32, "y");
        });

        // @@split logic
        fixRegExpWellKnownSymbolLogic(
          "split",
          2,
          function (SPLIT, nativeSplit, maybeCallNative) {
            var internalSplit;
            if (
              "abbc".split(/(b)*/)[1] == "c" ||
              // eslint-disable-next-line regexp/no-empty-group -- required for testing
              "test".split(/(?:)/, -1).length != 4 ||
              "ab".split(/(?:ab)*/).length != 2 ||
              ".".split(/(.?)(.?)/).length != 4 ||
              // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing
              ".".split(/()()/).length > 1 ||
              "".split(/.?/).length
            ) {
              // based on es5-shim implementation, need to rework it
              internalSplit = function (separator, limit) {
                var string = String(requireObjectCoercible(this));
                var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
                if (lim === 0) return [];
                if (separator === undefined) return [string];
                // If `separator` is not a regex, use native split
                if (!isRegExp(separator)) {
                  return nativeSplit.call(string, separator, lim);
                }
                var output = [];
                var flags =
                  (separator.ignoreCase ? "i" : "") +
                  (separator.multiline ? "m" : "") +
                  (separator.unicode ? "u" : "") +
                  (separator.sticky ? "y" : "");
                var lastLastIndex = 0;
                // Make `global` and avoid `lastIndex` issues by working with a copy
                var separatorCopy = new RegExp(separator.source, flags + "g");
                var match, lastIndex, lastLength;
                while ((match = regexpExec.call(separatorCopy, string))) {
                  lastIndex = separatorCopy.lastIndex;
                  if (lastIndex > lastLastIndex) {
                    output.push(string.slice(lastLastIndex, match.index));
                    if (match.length > 1 && match.index < string.length)
                      arrayPush.apply(output, match.slice(1));
                    lastLength = match[0].length;
                    lastLastIndex = lastIndex;
                    if (output.length >= lim) break;
                  }
                  if (separatorCopy.lastIndex === match.index)
                    separatorCopy.lastIndex++; // Avoid an infinite loop
                }
                if (lastLastIndex === string.length) {
                  if (lastLength || !separatorCopy.test("")) output.push("");
                } else output.push(string.slice(lastLastIndex));
                return output.length > lim ? output.slice(0, lim) : output;
              };
              // Chakra, V8
            } else if ("0".split(undefined, 0).length) {
              internalSplit = function (separator, limit) {
                return separator === undefined && limit === 0
                  ? []
                  : nativeSplit.call(this, separator, limit);
              };
            } else internalSplit = nativeSplit;

            return [
              // `String.prototype.split` method
              // https://tc39.es/ecma262/#sec-string.prototype.split
              function split(separator, limit) {
                var O = requireObjectCoercible(this);
                var splitter =
                  separator == undefined ? undefined : separator[SPLIT];
                return splitter !== undefined
                  ? splitter.call(separator, O, limit)
                  : internalSplit.call(String(O), separator, limit);
              },
              // `RegExp.prototype[@@split]` method
              // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
              //
              // NOTE: This cannot be properly polyfilled in engines that don't support
              // the 'y' flag.
              function (regexp, limit) {
                var res = maybeCallNative(
                  internalSplit,
                  regexp,
                  this,
                  limit,
                  internalSplit !== nativeSplit
                );
                if (res.done) return res.value;

                var rx = anObject(regexp);
                var S = String(this);
                var C = speciesConstructor(rx, RegExp);

                var unicodeMatching = rx.unicode;
                var flags =
                  (rx.ignoreCase ? "i" : "") +
                  (rx.multiline ? "m" : "") +
                  (rx.unicode ? "u" : "") +
                  (SUPPORTS_Y ? "y" : "g");

                // ^(? + rx + ) is needed, in combination with some S slicing, to
                // simulate the 'y' flag.
                var splitter = new C(
                  SUPPORTS_Y ? rx : "^(?:" + rx.source + ")",
                  flags
                );
                var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
                if (lim === 0) return [];
                if (S.length === 0)
                  return callRegExpExec(splitter, S) === null ? [S] : [];
                var p = 0;
                var q = 0;
                var A = [];
                while (q < S.length) {
                  splitter.lastIndex = SUPPORTS_Y ? q : 0;
                  var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
                  var e;
                  if (
                    z === null ||
                    (e = min(
                      toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)),
                      S.length
                    )) === p
                  ) {
                    q = advanceStringIndex(S, q, unicodeMatching);
                  } else {
                    A.push(S.slice(p, q));
                    if (A.length === lim) return A;
                    for (var i = 1; i <= z.length - 1; i++) {
                      A.push(z[i]);
                      if (A.length === lim) return A;
                    }
                    q = p = e;
                  }
                }
                A.push(S.slice(p));
                return A;
              },
            ];
          },
          !SUPPORTS_Y
        );

        /***/
      },
      /* 131 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);
        var whitespaces = __webpack_require__(95);

        var non = "\u200B\u0085\u180E";

        // check that a method works with the correct list
        // of whitespaces and has a correct name
        module.exports = function (METHOD_NAME) {
          return fails(function () {
            return (
              !!whitespaces[METHOD_NAME]() ||
              non[METHOD_NAME]() != non ||
              whitespaces[METHOD_NAME].name !== METHOD_NAME
            );
          });
        };

        /***/
      },
      /* 132 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var redefine = __webpack_require__(23);
        var anObject = __webpack_require__(5);
        var fails = __webpack_require__(2);
        var flags = __webpack_require__(63);

        var TO_STRING = "toString";
        var RegExpPrototype = RegExp.prototype;
        var nativeToString = RegExpPrototype[TO_STRING];

        var NOT_GENERIC = fails(function () {
          return nativeToString.call({ source: "a", flags: "b" }) != "/a/b";
        });
        // FF44- RegExp#toString has a wrong name
        var INCORRECT_NAME = nativeToString.name != TO_STRING;

        // `RegExp.prototype.toString` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.tostring
        if (NOT_GENERIC || INCORRECT_NAME) {
          redefine(
            RegExp.prototype,
            TO_STRING,
            function toString() {
              var R = anObject(this);
              var p = String(R.source);
              var rf = R.flags;
              var f = String(
                rf === undefined &&
                  R instanceof RegExp &&
                  !("flags" in RegExpPrototype)
                  ? flags.call(R)
                  : rf
              );
              return "/" + p + "/" + f;
            },
            { unsafe: true }
          );
        }

        /***/
      },
      /* 133 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var parseIntImplementation = __webpack_require__(216);

        // `parseInt` method
        // https://tc39.es/ecma262/#sec-parseint-string-radix
        $(
          { global: true, forced: parseInt != parseIntImplementation },
          {
            parseInt: parseIntImplementation,
          }
        );

        /***/
      },
      /* 134 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var parseFloatImplementation = __webpack_require__(217);

        // `parseFloat` method
        // https://tc39.es/ecma262/#sec-parsefloat-string
        $(
          { global: true, forced: parseFloat != parseFloatImplementation },
          {
            parseFloat: parseFloatImplementation,
          }
        );

        /***/
      },
      /* 135 */
      /***/ function (module, exports) {
        // `Math.sign` method implementation
        // https://tc39.es/ecma262/#sec-math.sign
        module.exports =
          Math.sign ||
          function sign(x) {
            // eslint-disable-next-line no-self-compare -- NaN check
            return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
          };

        /***/
      },
      /* 136 */
      /***/ function (module, exports, __webpack_require__) {
        var redefine = __webpack_require__(23);

        var DatePrototype = Date.prototype;
        var INVALID_DATE = "Invalid Date";
        var TO_STRING = "toString";
        var nativeDateToString = DatePrototype[TO_STRING];
        var getTime = DatePrototype.getTime;

        // `Date.prototype.toString` method
        // https://tc39.es/ecma262/#sec-date.prototype.tostring
        if (new Date(NaN) + "" != INVALID_DATE) {
          redefine(DatePrototype, TO_STRING, function toString() {
            var value = getTime.call(this);
            // eslint-disable-next-line no-self-compare -- NaN check
            return value === value
              ? nativeDateToString.call(this)
              : INVALID_DATE;
          });
        }

        /***/
      },
      /* 137 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var IS_PURE = __webpack_require__(31);
        var global = __webpack_require__(3);
        var getBuiltIn = __webpack_require__(28);
        var NativePromise = __webpack_require__(222);
        var redefine = __webpack_require__(23);
        var redefineAll = __webpack_require__(65);
        var setToStringTag = __webpack_require__(36);
        var setSpecies = __webpack_require__(61);
        var isObject = __webpack_require__(4);
        var aFunction = __webpack_require__(25);
        var anInstance = __webpack_require__(49);
        var inspectSource = __webpack_require__(106);
        var iterate = __webpack_require__(47);
        var checkCorrectnessOfIteration = __webpack_require__(86);
        var speciesConstructor = __webpack_require__(42);
        var task = __webpack_require__(138).set;
        var microtask = __webpack_require__(224);
        var promiseResolve = __webpack_require__(225);
        var hostReportErrors = __webpack_require__(381);
        var newPromiseCapabilityModule = __webpack_require__(98);
        var perform = __webpack_require__(139);
        var InternalStateModule = __webpack_require__(24);
        var isForced = __webpack_require__(70);
        var wellKnownSymbol = __webpack_require__(8);
        var IS_NODE = __webpack_require__(60);
        var V8_VERSION = __webpack_require__(73);

        var SPECIES = wellKnownSymbol("species");
        var PROMISE = "Promise";
        var getInternalState = InternalStateModule.get;
        var setInternalState = InternalStateModule.set;
        var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
        var PromiseConstructor = NativePromise;
        var TypeError = global.TypeError;
        var document = global.document;
        var process = global.process;
        var $fetch = getBuiltIn("fetch");
        var newPromiseCapability = newPromiseCapabilityModule.f;
        var newGenericPromiseCapability = newPromiseCapability;
        var DISPATCH_EVENT = !!(
          document &&
          document.createEvent &&
          global.dispatchEvent
        );
        var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == "function";
        var UNHANDLED_REJECTION = "unhandledrejection";
        var REJECTION_HANDLED = "rejectionhandled";
        var PENDING = 0;
        var FULFILLED = 1;
        var REJECTED = 2;
        var HANDLED = 1;
        var UNHANDLED = 2;
        var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

        var FORCED = isForced(PROMISE, function () {
          var GLOBAL_CORE_JS_PROMISE =
            inspectSource(PromiseConstructor) !== String(PromiseConstructor);
          if (!GLOBAL_CORE_JS_PROMISE) {
            // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
            // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
            // We can't detect it synchronously, so just check versions
            if (V8_VERSION === 66) return true;
            // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
            if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;
          }
          // We need Promise#finally in the pure version for preventing prototype pollution
          if (IS_PURE && !PromiseConstructor.prototype["finally"]) return true;
          // We can't use @@species feature detection in V8 since it causes
          // deoptimization and performance degradation
          // https://github.com/zloirock/core-js/issues/679
          if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor))
            return false;
          // Detect correctness of subclassing with @@species support
          var promise = PromiseConstructor.resolve(1);
          var FakePromise = function (exec) {
            exec(
              function () {
                /* empty */
              },
              function () {
                /* empty */
              }
            );
          };
          var constructor = (promise.constructor = {});
          constructor[SPECIES] = FakePromise;
          return !(
            promise.then(function () {
              /* empty */
            }) instanceof FakePromise
          );
        });

        var INCORRECT_ITERATION =
          FORCED ||
          !checkCorrectnessOfIteration(function (iterable) {
            PromiseConstructor.all(iterable)["catch"](function () {
              /* empty */
            });
          });

        // helpers
        var isThenable = function (it) {
          var then;
          return isObject(it) && typeof (then = it.then) == "function"
            ? then
            : false;
        };

        var notify = function (state, isReject) {
          if (state.notified) return;
          state.notified = true;
          var chain = state.reactions;
          microtask(function () {
            var value = state.value;
            var ok = state.state == FULFILLED;
            var index = 0;
            // variable length - can't use forEach
            while (chain.length > index) {
              var reaction = chain[index++];
              var handler = ok ? reaction.ok : reaction.fail;
              var resolve = reaction.resolve;
              var reject = reaction.reject;
              var domain = reaction.domain;
              var result, then, exited;
              try {
                if (handler) {
                  if (!ok) {
                    if (state.rejection === UNHANDLED) onHandleUnhandled(state);
                    state.rejection = HANDLED;
                  }
                  if (handler === true) result = value;
                  else {
                    if (domain) domain.enter();
                    result = handler(value); // can throw
                    if (domain) {
                      domain.exit();
                      exited = true;
                    }
                  }
                  if (result === reaction.promise) {
                    reject(TypeError("Promise-chain cycle"));
                  } else if ((then = isThenable(result))) {
                    then.call(result, resolve, reject);
                  } else resolve(result);
                } else reject(value);
              } catch (error) {
                if (domain && !exited) domain.exit();
                reject(error);
              }
            }
            state.reactions = [];
            state.notified = false;
            if (isReject && !state.rejection) onUnhandled(state);
          });
        };

        var dispatchEvent = function (name, promise, reason) {
          var event, handler;
          if (DISPATCH_EVENT) {
            event = document.createEvent("Event");
            event.promise = promise;
            event.reason = reason;
            event.initEvent(name, false, true);
            global.dispatchEvent(event);
          } else event = { promise: promise, reason: reason };
          if (!NATIVE_REJECTION_EVENT && (handler = global["on" + name]))
            handler(event);
          else if (name === UNHANDLED_REJECTION)
            hostReportErrors("Unhandled promise rejection", reason);
        };

        var onUnhandled = function (state) {
          task.call(global, function () {
            var promise = state.facade;
            var value = state.value;
            var IS_UNHANDLED = isUnhandled(state);
            var result;
            if (IS_UNHANDLED) {
              result = perform(function () {
                if (IS_NODE) {
                  process.emit("unhandledRejection", value, promise);
                } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
              });
              // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              state.rejection =
                IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
              if (result.error) throw result.value;
            }
          });
        };

        var isUnhandled = function (state) {
          return state.rejection !== HANDLED && !state.parent;
        };

        var onHandleUnhandled = function (state) {
          task.call(global, function () {
            var promise = state.facade;
            if (IS_NODE) {
              process.emit("rejectionHandled", promise);
            } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
          });
        };

        var bind = function (fn, state, unwrap) {
          return function (value) {
            fn(state, value, unwrap);
          };
        };

        var internalReject = function (state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          state.value = value;
          state.state = REJECTED;
          notify(state, true);
        };

        var internalResolve = function (state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          try {
            if (state.facade === value)
              throw TypeError("Promise can't be resolved itself");
            var then = isThenable(value);
            if (then) {
              microtask(function () {
                var wrapper = { done: false };
                try {
                  then.call(
                    value,
                    bind(internalResolve, wrapper, state),
                    bind(internalReject, wrapper, state)
                  );
                } catch (error) {
                  internalReject(wrapper, error, state);
                }
              });
            } else {
              state.value = value;
              state.state = FULFILLED;
              notify(state, false);
            }
          } catch (error) {
            internalReject({ done: false }, error, state);
          }
        };

        // constructor polyfill
        if (FORCED) {
          // 25.4.3.1 Promise(executor)
          PromiseConstructor = function Promise(executor) {
            anInstance(this, PromiseConstructor, PROMISE);
            aFunction(executor);
            Internal.call(this);
            var state = getInternalState(this);
            try {
              executor(
                bind(internalResolve, state),
                bind(internalReject, state)
              );
            } catch (error) {
              internalReject(state, error);
            }
          };
          // eslint-disable-next-line no-unused-vars -- required for `.length`
          Internal = function Promise(executor) {
            setInternalState(this, {
              type: PROMISE,
              done: false,
              notified: false,
              parent: false,
              reactions: [],
              rejection: false,
              state: PENDING,
              value: undefined,
            });
          };
          Internal.prototype = redefineAll(PromiseConstructor.prototype, {
            // `Promise.prototype.then` method
            // https://tc39.es/ecma262/#sec-promise.prototype.then
            then: function then(onFulfilled, onRejected) {
              var state = getInternalPromiseState(this);
              var reaction = newPromiseCapability(
                speciesConstructor(this, PromiseConstructor)
              );
              reaction.ok =
                typeof onFulfilled == "function" ? onFulfilled : true;
              reaction.fail = typeof onRejected == "function" && onRejected;
              reaction.domain = IS_NODE ? process.domain : undefined;
              state.parent = true;
              state.reactions.push(reaction);
              if (state.state != PENDING) notify(state, false);
              return reaction.promise;
            },
            // `Promise.prototype.catch` method
            // https://tc39.es/ecma262/#sec-promise.prototype.catch
            catch: function (onRejected) {
              return this.then(undefined, onRejected);
            },
          });
          OwnPromiseCapability = function () {
            var promise = new Internal();
            var state = getInternalState(promise);
            this.promise = promise;
            this.resolve = bind(internalResolve, state);
            this.reject = bind(internalReject, state);
          };
          newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
            return C === PromiseConstructor || C === PromiseWrapper
              ? new OwnPromiseCapability(C)
              : newGenericPromiseCapability(C);
          };

          if (!IS_PURE && typeof NativePromise == "function") {
            nativeThen = NativePromise.prototype.then;

            // wrap native Promise#then for native async functions
            redefine(
              NativePromise.prototype,
              "then",
              function then(onFulfilled, onRejected) {
                var that = this;
                return new PromiseConstructor(function (resolve, reject) {
                  nativeThen.call(that, resolve, reject);
                }).then(onFulfilled, onRejected);
                // https://github.com/zloirock/core-js/issues/640
              },
              { unsafe: true }
            );

            // wrap fetch result
            if (typeof $fetch == "function")
              $(
                { global: true, enumerable: true, forced: true },
                {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  fetch: function fetch(input /* , init */) {
                    return promiseResolve(
                      PromiseConstructor,
                      $fetch.apply(global, arguments)
                    );
                  },
                }
              );
          }
        }

        $(
          { global: true, wrap: true, forced: FORCED },
          {
            Promise: PromiseConstructor,
          }
        );

        setToStringTag(PromiseConstructor, PROMISE, false, true);
        setSpecies(PROMISE);

        PromiseWrapper = getBuiltIn(PROMISE);

        // statics
        $(
          { target: PROMISE, stat: true, forced: FORCED },
          {
            // `Promise.reject` method
            // https://tc39.es/ecma262/#sec-promise.reject
            reject: function reject(r) {
              var capability = newPromiseCapability(this);
              capability.reject.call(undefined, r);
              return capability.promise;
            },
          }
        );

        $(
          { target: PROMISE, stat: true, forced: IS_PURE || FORCED },
          {
            // `Promise.resolve` method
            // https://tc39.es/ecma262/#sec-promise.resolve
            resolve: function resolve(x) {
              return promiseResolve(
                IS_PURE && this === PromiseWrapper ? PromiseConstructor : this,
                x
              );
            },
          }
        );

        $(
          { target: PROMISE, stat: true, forced: INCORRECT_ITERATION },
          {
            // `Promise.all` method
            // https://tc39.es/ecma262/#sec-promise.all
            all: function all(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function () {
                var $promiseResolve = aFunction(C.resolve);
                var values = [];
                var counter = 0;
                var remaining = 1;
                iterate(iterable, function (promise) {
                  var index = counter++;
                  var alreadyCalled = false;
                  values.push(undefined);
                  remaining++;
                  $promiseResolve.call(C, promise).then(function (value) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[index] = value;
                    --remaining || resolve(values);
                  }, reject);
                });
                --remaining || resolve(values);
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
            // `Promise.race` method
            // https://tc39.es/ecma262/#sec-promise.race
            race: function race(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var reject = capability.reject;
              var result = perform(function () {
                var $promiseResolve = aFunction(C.resolve);
                iterate(iterable, function (promise) {
                  $promiseResolve
                    .call(C, promise)
                    .then(capability.resolve, reject);
                });
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
          }
        );

        /***/
      },
      /* 138 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var fails = __webpack_require__(2);
        var bind = __webpack_require__(45);
        var html = __webpack_require__(175);
        var createElement = __webpack_require__(104);
        var IS_IOS = __webpack_require__(223);
        var IS_NODE = __webpack_require__(60);

        var location = global.location;
        var set = global.setImmediate;
        var clear = global.clearImmediate;
        var process = global.process;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = "onreadystatechange";
        var defer, channel, port;

        var run = function (id) {
          // eslint-disable-next-line no-prototype-builtins -- safe
          if (queue.hasOwnProperty(id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };

        var runner = function (id) {
          return function () {
            run(id);
          };
        };

        var listener = function (event) {
          run(event.data);
        };

        var post = function (id) {
          // old engines have not location.origin
          global.postMessage(id + "", location.protocol + "//" + location.host);
        };

        // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!set || !clear) {
          set = function setImmediate(fn) {
            var args = [];
            var i = 1;
            while (arguments.length > i) args.push(arguments[i++]);
            queue[++counter] = function () {
              // eslint-disable-next-line no-new-func -- spec requirement
              (typeof fn == "function" ? fn : Function(fn)).apply(
                undefined,
                args
              );
            };
            defer(counter);
            return counter;
          };
          clear = function clearImmediate(id) {
            delete queue[id];
          };
          // Node.js 0.8-
          if (IS_NODE) {
            defer = function (id) {
              process.nextTick(runner(id));
            };
            // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function (id) {
              Dispatch.now(runner(id));
            };
            // Browsers with MessageChannel, includes WebWorkers
            // except iOS - https://github.com/zloirock/core-js/issues/624
          } else if (MessageChannel && !IS_IOS) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = listener;
            defer = bind(port.postMessage, port, 1);
            // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (
            global.addEventListener &&
            typeof postMessage == "function" &&
            !global.importScripts &&
            location &&
            location.protocol !== "file:" &&
            !fails(post)
          ) {
            defer = post;
            global.addEventListener("message", listener, false);
            // IE8-
          } else if (ONREADYSTATECHANGE in createElement("script")) {
            defer = function (id) {
              html.appendChild(createElement("script"))[
                ONREADYSTATECHANGE
              ] = function () {
                html.removeChild(this);
                run(id);
              };
            };
            // Rest old browsers
          } else {
            defer = function (id) {
              setTimeout(runner(id), 0);
            };
          }
        }

        module.exports = {
          set: set,
          clear: clear,
        };

        /***/
      },
      /* 139 */
      /***/ function (module, exports) {
        module.exports = function (exec) {
          try {
            return { error: false, value: exec() };
          } catch (error) {
            return { error: true, value: error };
          }
        };

        /***/
      },
      /* 140 */
      /***/ function (module, exports) {
        module.exports =
          typeof ArrayBuffer !== "undefined" && typeof DataView !== "undefined";

        /***/
      },
      /* 141 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var ArrayBufferModule = __webpack_require__(100);
        var anObject = __webpack_require__(5);
        var toAbsoluteIndex = __webpack_require__(44);
        var toLength = __webpack_require__(10);
        var speciesConstructor = __webpack_require__(42);

        var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
        var DataView = ArrayBufferModule.DataView;
        var nativeArrayBufferSlice = ArrayBuffer.prototype.slice;

        var INCORRECT_SLICE = fails(function () {
          return !new ArrayBuffer(2).slice(1, undefined).byteLength;
        });

        // `ArrayBuffer.prototype.slice` method
        // https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
        $(
          {
            target: "ArrayBuffer",
            proto: true,
            unsafe: true,
            forced: INCORRECT_SLICE,
          },
          {
            slice: function slice(start, end) {
              if (nativeArrayBufferSlice !== undefined && end === undefined) {
                return nativeArrayBufferSlice.call(anObject(this), start); // FF fix
              }
              var length = anObject(this).byteLength;
              var first = toAbsoluteIndex(start, length);
              var fin = toAbsoluteIndex(
                end === undefined ? length : end,
                length
              );
              var result = new (speciesConstructor(this, ArrayBuffer))(
                toLength(fin - first)
              );
              var viewSource = new DataView(this);
              var viewTarget = new DataView(result);
              var index = 0;
              while (first < fin) {
                viewTarget.setUint8(index++, viewSource.getUint8(first++));
              }
              return result;
            },
          }
        );

        /***/
      },
      /* 142 */
      /***/ function (module, exports, __webpack_require__) {
        /* eslint-disable no-new -- required for testing */
        var global = __webpack_require__(3);
        var fails = __webpack_require__(2);
        var checkCorrectnessOfIteration = __webpack_require__(86);
        var NATIVE_ARRAY_BUFFER_VIEWS = __webpack_require__(9)
          .NATIVE_ARRAY_BUFFER_VIEWS;

        var ArrayBuffer = global.ArrayBuffer;
        var Int8Array = global.Int8Array;

        module.exports =
          !NATIVE_ARRAY_BUFFER_VIEWS ||
          !fails(function () {
            Int8Array(1);
          }) ||
          !fails(function () {
            new Int8Array(-1);
          }) ||
          !checkCorrectnessOfIteration(function (iterable) {
            new Int8Array();
            new Int8Array(null);
            new Int8Array(1.5);
            new Int8Array(iterable);
          }, true) ||
          fails(function () {
            // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
            return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
          });

        /***/
      },
      /* 143 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Uint8Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Uint8", function (init) {
          return function Uint8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 144 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $copyWithin = __webpack_require__(199);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.copyWithin` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
        exportTypedArrayMethod("copyWithin", function copyWithin(
          target,
          start /* , end */
        ) {
          return $copyWithin.call(
            aTypedArray(this),
            target,
            start,
            arguments.length > 2 ? arguments[2] : undefined
          );
        });

        /***/
      },
      /* 145 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $every = __webpack_require__(17).every;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.every` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
        exportTypedArrayMethod("every", function every(
          callbackfn /* , thisArg */
        ) {
          return $every(
            aTypedArray(this),
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 146 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $fill = __webpack_require__(120);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.fill` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        exportTypedArrayMethod("fill", function fill(value /* , start, end */) {
          return $fill.apply(aTypedArray(this), arguments);
        });

        /***/
      },
      /* 147 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $filter = __webpack_require__(17).filter;
        var fromSpeciesAndList = __webpack_require__(403);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.filter` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
        exportTypedArrayMethod("filter", function filter(
          callbackfn /* , thisArg */
        ) {
          var list = $filter(
            aTypedArray(this),
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
          return fromSpeciesAndList(this, list);
        });

        /***/
      },
      /* 148 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $find = __webpack_require__(17).find;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.find` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
        exportTypedArrayMethod("find", function find(
          predicate /* , thisArg */
        ) {
          return $find(
            aTypedArray(this),
            predicate,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 149 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $findIndex = __webpack_require__(17).findIndex;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
        exportTypedArrayMethod("findIndex", function findIndex(
          predicate /* , thisArg */
        ) {
          return $findIndex(
            aTypedArray(this),
            predicate,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 150 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $forEach = __webpack_require__(17).forEach;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
        exportTypedArrayMethod("forEach", function forEach(
          callbackfn /* , thisArg */
        ) {
          $forEach(
            aTypedArray(this),
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 151 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $includes = __webpack_require__(69).includes;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.includes` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
        exportTypedArrayMethod("includes", function includes(
          searchElement /* , fromIndex */
        ) {
          return $includes(
            aTypedArray(this),
            searchElement,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 152 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $indexOf = __webpack_require__(69).indexOf;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
        exportTypedArrayMethod("indexOf", function indexOf(
          searchElement /* , fromIndex */
        ) {
          return $indexOf(
            aTypedArray(this),
            searchElement,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 153 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(3);
        var ArrayBufferViewCore = __webpack_require__(9);
        var ArrayIterators = __webpack_require__(62);
        var wellKnownSymbol = __webpack_require__(8);

        var ITERATOR = wellKnownSymbol("iterator");
        var Uint8Array = global.Uint8Array;
        var arrayValues = ArrayIterators.values;
        var arrayKeys = ArrayIterators.keys;
        var arrayEntries = ArrayIterators.entries;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var nativeTypedArrayIterator =
          Uint8Array && Uint8Array.prototype[ITERATOR];

        var CORRECT_ITER_NAME =
          !!nativeTypedArrayIterator &&
          (nativeTypedArrayIterator.name == "values" ||
            nativeTypedArrayIterator.name == undefined);

        var typedArrayValues = function values() {
          return arrayValues.call(aTypedArray(this));
        };

        // `%TypedArray%.prototype.entries` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
        exportTypedArrayMethod("entries", function entries() {
          return arrayEntries.call(aTypedArray(this));
        });
        // `%TypedArray%.prototype.keys` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
        exportTypedArrayMethod("keys", function keys() {
          return arrayKeys.call(aTypedArray(this));
        });
        // `%TypedArray%.prototype.values` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
        exportTypedArrayMethod("values", typedArrayValues, !CORRECT_ITER_NAME);
        // `%TypedArray%.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
        exportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);

        /***/
      },
      /* 154 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $join = [].join;

        // `%TypedArray%.prototype.join` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        exportTypedArrayMethod("join", function join(separator) {
          return $join.apply(aTypedArray(this), arguments);
        });

        /***/
      },
      /* 155 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $lastIndexOf = __webpack_require__(203);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.lastIndexOf` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
        // eslint-disable-next-line no-unused-vars -- required for `.length`
        exportTypedArrayMethod("lastIndexOf", function lastIndexOf(
          searchElement /* , fromIndex */
        ) {
          return $lastIndexOf.apply(aTypedArray(this), arguments);
        });

        /***/
      },
      /* 156 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $map = __webpack_require__(17).map;
        var speciesConstructor = __webpack_require__(42);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.map` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
        exportTypedArrayMethod("map", function map(mapfn /* , thisArg */) {
          return $map(
            aTypedArray(this),
            mapfn,
            arguments.length > 1 ? arguments[1] : undefined,
            function (O, length) {
              return new (aTypedArrayConstructor(
                speciesConstructor(O, O.constructor)
              ))(length);
            }
          );
        });

        /***/
      },
      /* 157 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $reduce = __webpack_require__(88).left;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.reduce` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
        exportTypedArrayMethod("reduce", function reduce(
          callbackfn /* , initialValue */
        ) {
          return $reduce(
            aTypedArray(this),
            callbackfn,
            arguments.length,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 158 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $reduceRight = __webpack_require__(88).right;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.reduceRicht` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
        exportTypedArrayMethod("reduceRight", function reduceRight(
          callbackfn /* , initialValue */
        ) {
          return $reduceRight(
            aTypedArray(this),
            callbackfn,
            arguments.length,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 159 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var floor = Math.floor;

        // `%TypedArray%.prototype.reverse` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
        exportTypedArrayMethod("reverse", function reverse() {
          var that = this;
          var length = aTypedArray(that).length;
          var middle = floor(length / 2);
          var index = 0;
          var value;
          while (index < middle) {
            value = that[index];
            that[index++] = that[--length];
            that[length] = value;
          }
          return that;
        });

        /***/
      },
      /* 160 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var toLength = __webpack_require__(10);
        var toOffset = __webpack_require__(229);
        var toObject = __webpack_require__(13);
        var fails = __webpack_require__(2);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        var FORCED = fails(function () {
          /* global Int8Array -- safe */
          new Int8Array(1).set({});
        });

        // `%TypedArray%.prototype.set` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
        exportTypedArrayMethod(
          "set",
          function set(arrayLike /* , offset */) {
            aTypedArray(this);
            var offset = toOffset(
              arguments.length > 1 ? arguments[1] : undefined,
              1
            );
            var length = this.length;
            var src = toObject(arrayLike);
            var len = toLength(src.length);
            var index = 0;
            if (len + offset > length) throw RangeError("Wrong length");
            while (index < len) this[offset + index] = src[index++];
          },
          FORCED
        );

        /***/
      },
      /* 161 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var speciesConstructor = __webpack_require__(42);
        var fails = __webpack_require__(2);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $slice = [].slice;

        var FORCED = fails(function () {
          /* global Int8Array -- safe */
          new Int8Array(1).slice();
        });

        // `%TypedArray%.prototype.slice` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
        exportTypedArrayMethod(
          "slice",
          function slice(start, end) {
            var list = $slice.call(aTypedArray(this), start, end);
            var C = speciesConstructor(this, this.constructor);
            var index = 0;
            var length = list.length;
            var result = new (aTypedArrayConstructor(C))(length);
            while (length > index) result[index] = list[index++];
            return result;
          },
          FORCED
        );

        /***/
      },
      /* 162 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var $some = __webpack_require__(17).some;

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.some` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
        exportTypedArrayMethod("some", function some(
          callbackfn /* , thisArg */
        ) {
          return $some(
            aTypedArray(this),
            callbackfn,
            arguments.length > 1 ? arguments[1] : undefined
          );
        });

        /***/
      },
      /* 163 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $sort = [].sort;

        // `%TypedArray%.prototype.sort` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
        exportTypedArrayMethod("sort", function sort(comparefn) {
          return $sort.call(aTypedArray(this), comparefn);
        });

        /***/
      },
      /* 164 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var toLength = __webpack_require__(10);
        var toAbsoluteIndex = __webpack_require__(44);
        var speciesConstructor = __webpack_require__(42);

        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.subarray` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
        exportTypedArrayMethod("subarray", function subarray(begin, end) {
          var O = aTypedArray(this);
          var length = O.length;
          var beginIndex = toAbsoluteIndex(begin, length);
          return new (speciesConstructor(O, O.constructor))(
            O.buffer,
            O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
            toLength(
              (end === undefined ? length : toAbsoluteIndex(end, length)) -
                beginIndex
            )
          );
        });

        /***/
      },
      /* 165 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(3);
        var ArrayBufferViewCore = __webpack_require__(9);
        var fails = __webpack_require__(2);

        var Int8Array = global.Int8Array;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $toLocaleString = [].toLocaleString;
        var $slice = [].slice;

        // iOS Safari 6.x fails here
        var TO_LOCALE_STRING_BUG =
          !!Int8Array &&
          fails(function () {
            $toLocaleString.call(new Int8Array(1));
          });

        var FORCED =
          fails(function () {
            return (
              [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString()
            );
          }) ||
          !fails(function () {
            Int8Array.prototype.toLocaleString.call([1, 2]);
          });

        // `%TypedArray%.prototype.toLocaleString` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
        exportTypedArrayMethod(
          "toLocaleString",
          function toLocaleString() {
            return $toLocaleString.apply(
              TO_LOCALE_STRING_BUG
                ? $slice.call(aTypedArray(this))
                : aTypedArray(this),
              arguments
            );
          },
          FORCED
        );

        /***/
      },
      /* 166 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var exportTypedArrayMethod = __webpack_require__(9)
          .exportTypedArrayMethod;
        var fails = __webpack_require__(2);
        var global = __webpack_require__(3);

        var Uint8Array = global.Uint8Array;
        var Uint8ArrayPrototype = (Uint8Array && Uint8Array.prototype) || {};
        var arrayToString = [].toString;
        var arrayJoin = [].join;

        if (
          fails(function () {
            arrayToString.call({});
          })
        ) {
          arrayToString = function toString() {
            return arrayJoin.call(this);
          };
        }

        var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

        // `%TypedArray%.prototype.toString` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
        exportTypedArrayMethod("toString", arrayToString, IS_NOT_ARRAY_METHOD);

        /***/
      },
      ,
      /* 167 */ /* 168 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var asap = __webpack_require__(251);

        function noop() {}

        // States:
        //
        // 0 - pending
        // 1 - fulfilled with _value
        // 2 - rejected with _value
        // 3 - adopted the state of another promise, _value
        //
        // once the state is no longer pending (0) it is immutable

        // All `_` prefixed properties will be reduced to `_{random number}`
        // at build time to obfuscate them and discourage their use.
        // We don't use symbols or Object.defineProperty to fully hide them
        // because the performance isn't good enough.

        // to avoid using try/catch inside critical functions, we
        // extract them to here.
        var LAST_ERROR = null;
        var IS_ERROR = {};
        function getThen(obj) {
          try {
            return obj.then;
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }

        function tryCallOne(fn, a) {
          try {
            return fn(a);
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }
        function tryCallTwo(fn, a, b) {
          try {
            fn(a, b);
          } catch (ex) {
            LAST_ERROR = ex;
            return IS_ERROR;
          }
        }

        module.exports = Promise;

        function Promise(fn) {
          if (typeof this !== "object") {
            throw new TypeError("Promises must be constructed via new");
          }
          if (typeof fn !== "function") {
            throw new TypeError(
              "Promise constructor's argument is not a function"
            );
          }
          this._U = 0;
          this._V = 0;
          this._W = null;
          this._X = null;
          if (fn === noop) return;
          doResolve(fn, this);
        }
        Promise._Y = null;
        Promise._Z = null;
        Promise._0 = noop;

        Promise.prototype.then = function (onFulfilled, onRejected) {
          if (this.constructor !== Promise) {
            return safeThen(this, onFulfilled, onRejected);
          }
          var res = new Promise(noop);
          handle(this, new Handler(onFulfilled, onRejected, res));
          return res;
        };

        function safeThen(self, onFulfilled, onRejected) {
          return new self.constructor(function (resolve, reject) {
            var res = new Promise(noop);
            res.then(resolve, reject);
            handle(self, new Handler(onFulfilled, onRejected, res));
          });
        }
        function handle(self, deferred) {
          while (self._V === 3) {
            self = self._W;
          }
          if (Promise._Y) {
            Promise._Y(self);
          }
          if (self._V === 0) {
            if (self._U === 0) {
              self._U = 1;
              self._X = deferred;
              return;
            }
            if (self._U === 1) {
              self._U = 2;
              self._X = [self._X, deferred];
              return;
            }
            self._X.push(deferred);
            return;
          }
          handleResolved(self, deferred);
        }

        function handleResolved(self, deferred) {
          asap(function () {
            var cb = self._V === 1 ? deferred.onFulfilled : deferred.onRejected;
            if (cb === null) {
              if (self._V === 1) {
                resolve(deferred.promise, self._W);
              } else {
                reject(deferred.promise, self._W);
              }
              return;
            }
            var ret = tryCallOne(cb, self._W);
            if (ret === IS_ERROR) {
              reject(deferred.promise, LAST_ERROR);
            } else {
              resolve(deferred.promise, ret);
            }
          });
        }
        function resolve(self, newValue) {
          // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
          if (newValue === self) {
            return reject(
              self,
              new TypeError("A promise cannot be resolved with itself.")
            );
          }
          if (
            newValue &&
            (typeof newValue === "object" || typeof newValue === "function")
          ) {
            var then = getThen(newValue);
            if (then === IS_ERROR) {
              return reject(self, LAST_ERROR);
            }
            if (then === self.then && newValue instanceof Promise) {
              self._V = 3;
              self._W = newValue;
              finale(self);
              return;
            } else if (typeof then === "function") {
              doResolve(then.bind(newValue), self);
              return;
            }
          }
          self._V = 1;
          self._W = newValue;
          finale(self);
        }

        function reject(self, newValue) {
          self._V = 2;
          self._W = newValue;
          if (Promise._Z) {
            Promise._Z(self, newValue);
          }
          finale(self);
        }
        function finale(self) {
          if (self._U === 1) {
            handle(self, self._X);
            self._X = null;
          }
          if (self._U === 2) {
            for (var i = 0; i < self._X.length; i++) {
              handle(self, self._X[i]);
            }
            self._X = null;
          }
        }

        function Handler(onFulfilled, onRejected, promise) {
          this.onFulfilled =
            typeof onFulfilled === "function" ? onFulfilled : null;
          this.onRejected =
            typeof onRejected === "function" ? onRejected : null;
          this.promise = promise;
        }

        /**
         * Take a potentially misbehaving resolver function and make sure
         * onFulfilled and onRejected are only called once.
         *
         * Makes no guarantees about asynchrony.
         */
        function doResolve(fn, promise) {
          var done = false;
          var res = tryCallTwo(
            fn,
            function (value) {
              if (done) return;
              done = true;
              resolve(promise, value);
            },
            function (reason) {
              if (done) return;
              done = true;
              reject(promise, reason);
            }
          );
          if (!done && res === IS_ERROR) {
            done = true;
            reject(promise, LAST_ERROR);
          }
        }

        /***/
      },
      /* 169 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var fails = __webpack_require__(2);
        var createElement = __webpack_require__(104);

        // Thank's IE8 for his funny defineProperty
        module.exports =
          !DESCRIPTORS &&
          !fails(function () {
            return (
              Object.defineProperty(createElement("div"), "a", {
                get: function () {
                  return 7;
                },
              }).a != 7
            );
          });

        /***/
      },
      /* 170 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var inspectSource = __webpack_require__(106);

        var WeakMap = global.WeakMap;

        module.exports =
          typeof WeakMap === "function" &&
          /native code/.test(inspectSource(WeakMap));

        /***/
      },
      /* 171 */
      /***/ function (module, exports, __webpack_require__) {
        var has = __webpack_require__(14);
        var ownKeys = __webpack_require__(109);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var definePropertyModule = __webpack_require__(12);

        module.exports = function (target, source) {
          var keys = ownKeys(source);
          var defineProperty = definePropertyModule.f;
          var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (!has(target, key))
              defineProperty(
                target,
                key,
                getOwnPropertyDescriptor(source, key)
              );
          }
        };

        /***/
      },
      /* 172 */
      /***/ function (module, exports, __webpack_require__) {
        var has = __webpack_require__(14);
        var toIndexedObject = __webpack_require__(27);
        var indexOf = __webpack_require__(69).indexOf;
        var hiddenKeys = __webpack_require__(68);

        module.exports = function (object, names) {
          var O = toIndexedObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O)
            !has(hiddenKeys, key) && has(O, key) && result.push(key);
          // Don't enum bug & hidden keys
          while (names.length > i)
            if (has(O, (key = names[i++]))) {
              ~indexOf(result, key) || result.push(key);
            }
          return result;
        };

        /***/
      },
      /* 173 */
      /***/ function (module, exports, __webpack_require__) {
        var NATIVE_SYMBOL = __webpack_require__(112);

        module.exports =
          NATIVE_SYMBOL &&
          /* global Symbol -- safe */
          !Symbol.sham &&
          typeof Symbol.iterator == "symbol";

        /***/
      },
      /* 174 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var getBuiltIn = __webpack_require__(28);
        var IS_PURE = __webpack_require__(31);
        var DESCRIPTORS = __webpack_require__(7);
        var NATIVE_SYMBOL = __webpack_require__(112);
        var USE_SYMBOL_AS_UID = __webpack_require__(173);
        var fails = __webpack_require__(2);
        var has = __webpack_require__(14);
        var isArray = __webpack_require__(53);
        var isObject = __webpack_require__(4);
        var anObject = __webpack_require__(5);
        var toObject = __webpack_require__(13);
        var toIndexedObject = __webpack_require__(27);
        var toPrimitive = __webpack_require__(35);
        var createPropertyDescriptor = __webpack_require__(39);
        var nativeObjectCreate = __webpack_require__(37);
        var objectKeys = __webpack_require__(76);
        var getOwnPropertyNamesModule = __webpack_require__(52);
        var getOwnPropertyNamesExternal = __webpack_require__(176);
        var getOwnPropertySymbolsModule = __webpack_require__(111);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var definePropertyModule = __webpack_require__(12);
        var propertyIsEnumerableModule = __webpack_require__(83);
        var createNonEnumerableProperty = __webpack_require__(22);
        var redefine = __webpack_require__(23);
        var shared = __webpack_require__(108);
        var sharedKey = __webpack_require__(84);
        var hiddenKeys = __webpack_require__(68);
        var uid = __webpack_require__(67);
        var wellKnownSymbol = __webpack_require__(8);
        var wrappedWellKnownSymbolModule = __webpack_require__(177);
        var defineWellKnownSymbol = __webpack_require__(15);
        var setToStringTag = __webpack_require__(36);
        var InternalStateModule = __webpack_require__(24);
        var $forEach = __webpack_require__(17).forEach;

        var HIDDEN = sharedKey("hidden");
        var SYMBOL = "Symbol";
        var PROTOTYPE = "prototype";
        var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(SYMBOL);
        var ObjectPrototype = Object[PROTOTYPE];
        var $Symbol = global.Symbol;
        var $stringify = getBuiltIn("JSON", "stringify");
        var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
        var nativeDefineProperty = definePropertyModule.f;
        var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
        var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
        var AllSymbols = shared("symbols");
        var ObjectPrototypeSymbols = shared("op-symbols");
        var StringToSymbolRegistry = shared("string-to-symbol-registry");
        var SymbolToStringRegistry = shared("symbol-to-string-registry");
        var WellKnownSymbolsStore = shared("wks");
        var QObject = global.QObject;
        // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var USE_SETTER =
          !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

        // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDescriptor =
          DESCRIPTORS &&
          fails(function () {
            return (
              nativeObjectCreate(
                nativeDefineProperty({}, "a", {
                  get: function () {
                    return nativeDefineProperty(this, "a", { value: 7 }).a;
                  },
                })
              ).a != 7
            );
          })
            ? function (O, P, Attributes) {
                var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(
                  ObjectPrototype,
                  P
                );
                if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
                nativeDefineProperty(O, P, Attributes);
                if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
                  nativeDefineProperty(
                    ObjectPrototype,
                    P,
                    ObjectPrototypeDescriptor
                  );
                }
              }
            : nativeDefineProperty;

        var wrap = function (tag, description) {
          var symbol = (AllSymbols[tag] = nativeObjectCreate(
            $Symbol[PROTOTYPE]
          ));
          setInternalState(symbol, {
            type: SYMBOL,
            tag: tag,
            description: description,
          });
          if (!DESCRIPTORS) symbol.description = description;
          return symbol;
        };

        var isSymbol = USE_SYMBOL_AS_UID
          ? function (it) {
              return typeof it == "symbol";
            }
          : function (it) {
              return Object(it) instanceof $Symbol;
            };

        var $defineProperty = function defineProperty(O, P, Attributes) {
          if (O === ObjectPrototype)
            $defineProperty(ObjectPrototypeSymbols, P, Attributes);
          anObject(O);
          var key = toPrimitive(P, true);
          anObject(Attributes);
          if (has(AllSymbols, key)) {
            if (!Attributes.enumerable) {
              if (!has(O, HIDDEN))
                nativeDefineProperty(
                  O,
                  HIDDEN,
                  createPropertyDescriptor(1, {})
                );
              O[HIDDEN][key] = true;
            } else {
              if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
              Attributes = nativeObjectCreate(Attributes, {
                enumerable: createPropertyDescriptor(0, false),
              });
            }
            return setSymbolDescriptor(O, key, Attributes);
          }
          return nativeDefineProperty(O, key, Attributes);
        };

        var $defineProperties = function defineProperties(O, Properties) {
          anObject(O);
          var properties = toIndexedObject(Properties);
          var keys = objectKeys(properties).concat(
            $getOwnPropertySymbols(properties)
          );
          $forEach(keys, function (key) {
            if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key))
              $defineProperty(O, key, properties[key]);
          });
          return O;
        };

        var $create = function create(O, Properties) {
          return Properties === undefined
            ? nativeObjectCreate(O)
            : $defineProperties(nativeObjectCreate(O), Properties);
        };

        var $propertyIsEnumerable = function propertyIsEnumerable(V) {
          var P = toPrimitive(V, true);
          var enumerable = nativePropertyIsEnumerable.call(this, P);
          if (
            this === ObjectPrototype &&
            has(AllSymbols, P) &&
            !has(ObjectPrototypeSymbols, P)
          )
            return false;
          return enumerable ||
            !has(this, P) ||
            !has(AllSymbols, P) ||
            (has(this, HIDDEN) && this[HIDDEN][P])
            ? enumerable
            : true;
        };

        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(
          O,
          P
        ) {
          var it = toIndexedObject(O);
          var key = toPrimitive(P, true);
          if (
            it === ObjectPrototype &&
            has(AllSymbols, key) &&
            !has(ObjectPrototypeSymbols, key)
          )
            return;
          var descriptor = nativeGetOwnPropertyDescriptor(it, key);
          if (
            descriptor &&
            has(AllSymbols, key) &&
            !(has(it, HIDDEN) && it[HIDDEN][key])
          ) {
            descriptor.enumerable = true;
          }
          return descriptor;
        };

        var $getOwnPropertyNames = function getOwnPropertyNames(O) {
          var names = nativeGetOwnPropertyNames(toIndexedObject(O));
          var result = [];
          $forEach(names, function (key) {
            if (!has(AllSymbols, key) && !has(hiddenKeys, key))
              result.push(key);
          });
          return result;
        };

        var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
          var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
          var names = nativeGetOwnPropertyNames(
            IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O)
          );
          var result = [];
          $forEach(names, function (key) {
            if (
              has(AllSymbols, key) &&
              (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))
            ) {
              result.push(AllSymbols[key]);
            }
          });
          return result;
        };

        // `Symbol` constructor
        // https://tc39.es/ecma262/#sec-symbol-constructor
        if (!NATIVE_SYMBOL) {
          $Symbol = function Symbol() {
            if (this instanceof $Symbol)
              throw TypeError("Symbol is not a constructor");
            var description =
              !arguments.length || arguments[0] === undefined
                ? undefined
                : String(arguments[0]);
            var tag = uid(description);
            var setter = function (value) {
              if (this === ObjectPrototype)
                setter.call(ObjectPrototypeSymbols, value);
              if (has(this, HIDDEN) && has(this[HIDDEN], tag))
                this[HIDDEN][tag] = false;
              setSymbolDescriptor(
                this,
                tag,
                createPropertyDescriptor(1, value)
              );
            };
            if (DESCRIPTORS && USE_SETTER)
              setSymbolDescriptor(ObjectPrototype, tag, {
                configurable: true,
                set: setter,
              });
            return wrap(tag, description);
          };

          redefine($Symbol[PROTOTYPE], "toString", function toString() {
            return getInternalState(this).tag;
          });

          redefine($Symbol, "withoutSetter", function (description) {
            return wrap(uid(description), description);
          });

          propertyIsEnumerableModule.f = $propertyIsEnumerable;
          definePropertyModule.f = $defineProperty;
          getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
          getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
          getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

          wrappedWellKnownSymbolModule.f = function (name) {
            return wrap(wellKnownSymbol(name), name);
          };

          if (DESCRIPTORS) {
            // https://github.com/tc39/proposal-Symbol-description
            nativeDefineProperty($Symbol[PROTOTYPE], "description", {
              configurable: true,
              get: function description() {
                return getInternalState(this).description;
              },
            });
            if (!IS_PURE) {
              redefine(
                ObjectPrototype,
                "propertyIsEnumerable",
                $propertyIsEnumerable,
                { unsafe: true }
              );
            }
          }
        }

        $(
          {
            global: true,
            wrap: true,
            forced: !NATIVE_SYMBOL,
            sham: !NATIVE_SYMBOL,
          },
          {
            Symbol: $Symbol,
          }
        );

        $forEach(objectKeys(WellKnownSymbolsStore), function (name) {
          defineWellKnownSymbol(name);
        });

        $(
          { target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL },
          {
            // `Symbol.for` method
            // https://tc39.es/ecma262/#sec-symbol.for
            for: function (key) {
              var string = String(key);
              if (has(StringToSymbolRegistry, string))
                return StringToSymbolRegistry[string];
              var symbol = $Symbol(string);
              StringToSymbolRegistry[string] = symbol;
              SymbolToStringRegistry[symbol] = string;
              return symbol;
            },
            // `Symbol.keyFor` method
            // https://tc39.es/ecma262/#sec-symbol.keyfor
            keyFor: function keyFor(sym) {
              if (!isSymbol(sym)) throw TypeError(sym + " is not a symbol");
              if (has(SymbolToStringRegistry, sym))
                return SymbolToStringRegistry[sym];
            },
            useSetter: function () {
              USE_SETTER = true;
            },
            useSimple: function () {
              USE_SETTER = false;
            },
          }
        );

        $(
          {
            target: "Object",
            stat: true,
            forced: !NATIVE_SYMBOL,
            sham: !DESCRIPTORS,
          },
          {
            // `Object.create` method
            // https://tc39.es/ecma262/#sec-object.create
            create: $create,
            // `Object.defineProperty` method
            // https://tc39.es/ecma262/#sec-object.defineproperty
            defineProperty: $defineProperty,
            // `Object.defineProperties` method
            // https://tc39.es/ecma262/#sec-object.defineproperties
            defineProperties: $defineProperties,
            // `Object.getOwnPropertyDescriptor` method
            // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
            getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
          }
        );

        $(
          { target: "Object", stat: true, forced: !NATIVE_SYMBOL },
          {
            // `Object.getOwnPropertyNames` method
            // https://tc39.es/ecma262/#sec-object.getownpropertynames
            getOwnPropertyNames: $getOwnPropertyNames,
            // `Object.getOwnPropertySymbols` method
            // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
            getOwnPropertySymbols: $getOwnPropertySymbols,
          }
        );

        // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
        // https://bugs.chromium.org/p/v8/issues/detail?id=3443
        $(
          {
            target: "Object",
            stat: true,
            forced: fails(function () {
              getOwnPropertySymbolsModule.f(1);
            }),
          },
          {
            getOwnPropertySymbols: function getOwnPropertySymbols(it) {
              return getOwnPropertySymbolsModule.f(toObject(it));
            },
          }
        );

        // `JSON.stringify` method behavior with symbols
        // https://tc39.es/ecma262/#sec-json.stringify
        if ($stringify) {
          var FORCED_JSON_STRINGIFY =
            !NATIVE_SYMBOL ||
            fails(function () {
              var symbol = $Symbol();
              // MS Edge converts symbol values to JSON as {}
              return (
                $stringify([symbol]) != "[null]" ||
                // WebKit converts symbol values to JSON as null
                $stringify({ a: symbol }) != "{}" ||
                // V8 throws on boxed symbols
                $stringify(Object(symbol)) != "{}"
              );
            });

          $(
            { target: "JSON", stat: true, forced: FORCED_JSON_STRINGIFY },
            {
              // eslint-disable-next-line no-unused-vars -- required for `.length`
              stringify: function stringify(it, replacer, space) {
                var args = [it];
                var index = 1;
                var $replacer;
                while (arguments.length > index) args.push(arguments[index++]);
                $replacer = replacer;
                if ((!isObject(replacer) && it === undefined) || isSymbol(it))
                  return; // IE8 returns string on undefined
                if (!isArray(replacer))
                  replacer = function (key, value) {
                    if (typeof $replacer == "function")
                      value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                  };
                args[1] = replacer;
                return $stringify.apply(null, args);
              },
            }
          );
        }

        // `Symbol.prototype[@@toPrimitive]` method
        // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
        if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
          createNonEnumerableProperty(
            $Symbol[PROTOTYPE],
            TO_PRIMITIVE,
            $Symbol[PROTOTYPE].valueOf
          );
        }
        // `Symbol.prototype[@@toStringTag]` property
        // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
        setToStringTag($Symbol, SYMBOL);

        hiddenKeys[HIDDEN] = true;

        /***/
      },
      /* 175 */
      /***/ function (module, exports, __webpack_require__) {
        var getBuiltIn = __webpack_require__(28);

        module.exports = getBuiltIn("document", "documentElement");

        /***/
      },
      /* 176 */
      /***/ function (module, exports, __webpack_require__) {
        var toIndexedObject = __webpack_require__(27);
        var nativeGetOwnPropertyNames = __webpack_require__(52).f;

        var toString = {}.toString;

        var windowNames =
          typeof window == "object" && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [];

        var getWindowNames = function (it) {
          try {
            return nativeGetOwnPropertyNames(it);
          } catch (error) {
            return windowNames.slice();
          }
        };

        // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        module.exports.f = function getOwnPropertyNames(it) {
          return windowNames && toString.call(it) == "[object Window]"
            ? getWindowNames(it)
            : nativeGetOwnPropertyNames(toIndexedObject(it));
        };

        /***/
      },
      /* 177 */
      /***/ function (module, exports, __webpack_require__) {
        var wellKnownSymbol = __webpack_require__(8);

        exports.f = wellKnownSymbol;

        /***/
      },
      /* 178 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.asyncIterator` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.asynciterator
        defineWellKnownSymbol("asyncIterator");

        /***/
      },
      /* 179 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        // `Symbol.prototype.description` getter
        // https://tc39.es/ecma262/#sec-symbol.prototype.description

        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var global = __webpack_require__(3);
        var has = __webpack_require__(14);
        var isObject = __webpack_require__(4);
        var defineProperty = __webpack_require__(12).f;
        var copyConstructorProperties = __webpack_require__(171);

        var NativeSymbol = global.Symbol;

        if (
          DESCRIPTORS &&
          typeof NativeSymbol == "function" &&
          (!("description" in NativeSymbol.prototype) ||
            // Safari 12 bug
            NativeSymbol().description !== undefined)
        ) {
          var EmptyStringDescriptionStore = {};
          // wrap Symbol constructor for correct work with undefined description
          var SymbolWrapper = function Symbol() {
            var description =
              arguments.length < 1 || arguments[0] === undefined
                ? undefined
                : String(arguments[0]);
            var result =
              this instanceof SymbolWrapper
                ? new NativeSymbol(description)
                : // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
                description === undefined
                ? NativeSymbol()
                : NativeSymbol(description);
            if (description === "") EmptyStringDescriptionStore[result] = true;
            return result;
          };
          copyConstructorProperties(SymbolWrapper, NativeSymbol);
          var symbolPrototype = (SymbolWrapper.prototype =
            NativeSymbol.prototype);
          symbolPrototype.constructor = SymbolWrapper;

          var symbolToString = symbolPrototype.toString;
          var native = String(NativeSymbol("test")) == "Symbol(test)";
          var regexp = /^Symbol\((.*)\)[^)]+$/;
          defineProperty(symbolPrototype, "description", {
            configurable: true,
            get: function description() {
              var symbol = isObject(this) ? this.valueOf() : this;
              var string = symbolToString.call(symbol);
              if (has(EmptyStringDescriptionStore, symbol)) return "";
              var desc = native
                ? string.slice(7, -1)
                : string.replace(regexp, "$1");
              return desc === "" ? undefined : desc;
            },
          });

          $(
            { global: true, forced: true },
            {
              Symbol: SymbolWrapper,
            }
          );
        }

        /***/
      },
      /* 180 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.hasInstance` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.hasinstance
        defineWellKnownSymbol("hasInstance");

        /***/
      },
      /* 181 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.isConcatSpreadable` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
        defineWellKnownSymbol("isConcatSpreadable");

        /***/
      },
      /* 182 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.iterator` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.iterator
        defineWellKnownSymbol("iterator");

        /***/
      },
      /* 183 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.match` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.match
        defineWellKnownSymbol("match");

        /***/
      },
      /* 184 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.matchAll` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.matchall
        defineWellKnownSymbol("matchAll");

        /***/
      },
      /* 185 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.replace` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.replace
        defineWellKnownSymbol("replace");

        /***/
      },
      /* 186 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.search` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.search
        defineWellKnownSymbol("search");

        /***/
      },
      /* 187 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.species` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.species
        defineWellKnownSymbol("species");

        /***/
      },
      /* 188 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.split` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.split
        defineWellKnownSymbol("split");

        /***/
      },
      /* 189 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.toPrimitive` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.toprimitive
        defineWellKnownSymbol("toPrimitive");

        /***/
      },
      /* 190 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.toStringTag` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.tostringtag
        defineWellKnownSymbol("toStringTag");

        /***/
      },
      /* 191 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.unscopables` well-known symbol
        // https://tc39.es/ecma262/#sec-symbol.unscopables
        defineWellKnownSymbol("unscopables");

        /***/
      },
      /* 192 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var setToStringTag = __webpack_require__(36);

        // JSON[@@toStringTag] property
        // https://tc39.es/ecma262/#sec-json-@@tostringtag
        setToStringTag(global.JSON, "JSON", true);

        /***/
      },
      /* 193 */
      /***/ function (module, exports, __webpack_require__) {
        var setToStringTag = __webpack_require__(36);

        // Math[@@toStringTag] property
        // https://tc39.es/ecma262/#sec-math-@@tostringtag
        setToStringTag(Math, "Math", true);

        /***/
      },
      /* 194 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var setToStringTag = __webpack_require__(36);

        $({ global: true }, { Reflect: {} });

        // Reflect[@@toStringTag] property
        // https://tc39.es/ecma262/#sec-reflect-@@tostringtag
        setToStringTag(global.Reflect, "Reflect", true);

        /***/
      },
      /* 195 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fails = __webpack_require__(2);
        var getPrototypeOf = __webpack_require__(33);
        var createNonEnumerableProperty = __webpack_require__(22);
        var has = __webpack_require__(14);
        var wellKnownSymbol = __webpack_require__(8);
        var IS_PURE = __webpack_require__(31);

        var ITERATOR = wellKnownSymbol("iterator");
        var BUGGY_SAFARI_ITERATORS = false;

        var returnThis = function () {
          return this;
        };

        // `%IteratorPrototype%` object
        // https://tc39.es/ecma262/#sec-%iteratorprototype%-object
        var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

        if ([].keys) {
          arrayIterator = [].keys();
          // Safari 8 has buggy iterators w/o `next`
          if (!("next" in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
          else {
            PrototypeOfArrayIteratorPrototype = getPrototypeOf(
              getPrototypeOf(arrayIterator)
            );
            if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
              IteratorPrototype = PrototypeOfArrayIteratorPrototype;
          }
        }

        var NEW_ITERATOR_PROTOTYPE =
          IteratorPrototype == undefined ||
          fails(function () {
            var test = {};
            // FF44- legacy iterators case
            return IteratorPrototype[ITERATOR].call(test) !== test;
          });

        if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

        // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        if (
          (!IS_PURE || NEW_ITERATOR_PROTOTYPE) &&
          !has(IteratorPrototype, ITERATOR)
        ) {
          createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
        }

        module.exports = {
          IteratorPrototype: IteratorPrototype,
          BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS,
        };

        /***/
      },
      /* 196 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);

        module.exports = function (it) {
          if (!isObject(it) && it !== null) {
            throw TypeError("Can't set " + String(it) + " as a prototype");
          }
          return it;
        };

        /***/
      },
      /* 197 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var bind = __webpack_require__(45);
        var toObject = __webpack_require__(13);
        var callWithSafeIterationClosing = __webpack_require__(264);
        var isArrayIteratorMethod = __webpack_require__(119);
        var toLength = __webpack_require__(10);
        var createProperty = __webpack_require__(54);
        var getIteratorMethod = __webpack_require__(79);

        // `Array.from` method implementation
        // https://tc39.es/ecma262/#sec-array.from
        module.exports = function from(
          arrayLike /* , mapfn = undefined, thisArg = undefined */
        ) {
          var O = toObject(arrayLike);
          var C = typeof this == "function" ? this : Array;
          var argumentsLength = arguments.length;
          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          var iteratorMethod = getIteratorMethod(O);
          var index = 0;
          var length, result, step, iterator, next, value;
          if (mapping)
            mapfn = bind(
              mapfn,
              argumentsLength > 2 ? arguments[2] : undefined,
              2
            );
          // if the target is not iterable or it's an array with the default iterator - use a simple case
          if (
            iteratorMethod != undefined &&
            !(C == Array && isArrayIteratorMethod(iteratorMethod))
          ) {
            iterator = iteratorMethod.call(O);
            next = iterator.next;
            result = new C();
            for (; !(step = next.call(iterator)).done; index++) {
              value = mapping
                ? callWithSafeIterationClosing(
                    iterator,
                    mapfn,
                    [step.value, index],
                    true
                  )
                : step.value;
              createProperty(result, index, value);
            }
          } else {
            length = toLength(O.length);
            result = new C(length);
            for (; length > index; index++) {
              value = mapping ? mapfn(O[index], index) : O[index];
              createProperty(result, index, value);
            }
          }
          result.length = index;
          return result;
        };

        /***/
      },
      /* 198 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);

        module.exports = function (iterator) {
          var returnMethod = iterator["return"];
          if (returnMethod !== undefined) {
            return anObject(returnMethod.call(iterator)).value;
          }
        };

        /***/
      },
      /* 199 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toObject = __webpack_require__(13);
        var toAbsoluteIndex = __webpack_require__(44);
        var toLength = __webpack_require__(10);

        var min = Math.min;

        // `Array.prototype.copyWithin` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.copywithin
        module.exports =
          [].copyWithin ||
          function copyWithin(
            target /* = 0 */,
            start /* = 0, end = @length */
          ) {
            var O = toObject(this);
            var len = toLength(O.length);
            var to = toAbsoluteIndex(target, len);
            var from = toAbsoluteIndex(start, len);
            var end = arguments.length > 2 ? arguments[2] : undefined;
            var count = min(
              (end === undefined ? len : toAbsoluteIndex(end, len)) - from,
              len - to
            );
            var inc = 1;
            if (from < to && to < from + count) {
              inc = -1;
              from += count - 1;
              to += count - 1;
            }
            while (count-- > 0) {
              if (from in O) O[to] = O[from];
              else delete O[to];
              to += inc;
              from += inc;
            }
            return O;
          };

        /***/
      },
      /* 200 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var isArray = __webpack_require__(53);
        var toLength = __webpack_require__(10);
        var bind = __webpack_require__(45);

        // `FlattenIntoArray` abstract operation
        // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
        var flattenIntoArray = function (
          target,
          original,
          source,
          sourceLen,
          start,
          depth,
          mapper,
          thisArg
        ) {
          var targetIndex = start;
          var sourceIndex = 0;
          var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
          var element;

          while (sourceIndex < sourceLen) {
            if (sourceIndex in source) {
              element = mapFn
                ? mapFn(source[sourceIndex], sourceIndex, original)
                : source[sourceIndex];

              if (depth > 0 && isArray(element)) {
                targetIndex =
                  flattenIntoArray(
                    target,
                    original,
                    element,
                    toLength(element.length),
                    targetIndex,
                    depth - 1
                  ) - 1;
              } else {
                if (targetIndex >= 0x1fffffffffffff)
                  throw TypeError("Exceed the acceptable array length");
                target[targetIndex] = element;
              }

              targetIndex++;
            }
            sourceIndex++;
          }
          return targetIndex;
        };

        module.exports = flattenIntoArray;

        /***/
      },
      /* 201 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $forEach = __webpack_require__(17).forEach;
        var arrayMethodIsStrict = __webpack_require__(41);

        var STRICT_METHOD = arrayMethodIsStrict("forEach");

        // `Array.prototype.forEach` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        module.exports = !STRICT_METHOD
          ? function forEach(callbackfn /* , thisArg */) {
              return $forEach(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            }
          : [].forEach;

        /***/
      },
      /* 202 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $indexOf = __webpack_require__(69).indexOf;
        var arrayMethodIsStrict = __webpack_require__(41);

        var nativeIndexOf = [].indexOf;

        var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
        var STRICT_METHOD = arrayMethodIsStrict("indexOf");

        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        $(
          {
            target: "Array",
            proto: true,
            forced: NEGATIVE_ZERO || !STRICT_METHOD,
          },
          {
            indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
              return NEGATIVE_ZERO
                ? // convert -0 to +0
                  nativeIndexOf.apply(this, arguments) || 0
                : $indexOf(
                    this,
                    searchElement,
                    arguments.length > 1 ? arguments[1] : undefined
                  );
            },
          }
        );

        /***/
      },
      /* 203 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var toIndexedObject = __webpack_require__(27);
        var toInteger = __webpack_require__(32);
        var toLength = __webpack_require__(10);
        var arrayMethodIsStrict = __webpack_require__(41);

        var min = Math.min;
        var nativeLastIndexOf = [].lastIndexOf;
        var NEGATIVE_ZERO =
          !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
        var STRICT_METHOD = arrayMethodIsStrict("lastIndexOf");
        var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

        // `Array.prototype.lastIndexOf` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.lastindexof
        module.exports = FORCED
          ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
              // convert -0 to +0
              if (NEGATIVE_ZERO)
                return nativeLastIndexOf.apply(this, arguments) || 0;
              var O = toIndexedObject(this);
              var length = toLength(O.length);
              var index = length - 1;
              if (arguments.length > 1)
                index = min(index, toInteger(arguments[1]));
              if (index < 0) index = length + index;
              for (; index >= 0; index--)
                if (index in O && O[index] === searchElement) return index || 0;
              return -1;
            }
          : nativeLastIndexOf;

        /***/
      },
      /* 204 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $some = __webpack_require__(17).some;
        var arrayMethodIsStrict = __webpack_require__(41);

        var STRICT_METHOD = arrayMethodIsStrict("some");

        // `Array.prototype.some` method
        // https://tc39.es/ecma262/#sec-array.prototype.some
        $(
          { target: "Array", proto: true, forced: !STRICT_METHOD },
          {
            some: function some(callbackfn /* , thisArg */) {
              return $some(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 205 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var aFunction = __webpack_require__(25);
        var isObject = __webpack_require__(4);

        var slice = [].slice;
        var factories = {};

        var construct = function (C, argsLength, args) {
          if (!(argsLength in factories)) {
            for (var list = [], i = 0; i < argsLength; i++)
              list[i] = "a[" + i + "]";
            // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only
            factories[argsLength] = Function(
              "C,a",
              "return new C(" + list.join(",") + ")"
            );
          }
          return factories[argsLength](C, args);
        };

        // `Function.prototype.bind` method implementation
        // https://tc39.es/ecma262/#sec-function.prototype.bind
        module.exports =
          Function.bind ||
          function bind(that /* , ...args */) {
            var fn = aFunction(this);
            var partArgs = slice.call(arguments, 1);
            var boundFunction = function bound(/* args... */) {
              var args = partArgs.concat(slice.call(arguments));
              return this instanceof boundFunction
                ? construct(fn, args.length, args)
                : fn.apply(that, args);
            };
            if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
            return boundFunction;
          };

        /***/
      },
      /* 206 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var assign = __webpack_require__(207);

        // `Object.assign` method
        // https://tc39.es/ecma262/#sec-object.assign
        $(
          { target: "Object", stat: true, forced: Object.assign !== assign },
          {
            assign: assign,
          }
        );

        /***/
      },
      /* 207 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var DESCRIPTORS = __webpack_require__(7);
        var fails = __webpack_require__(2);
        var objectKeys = __webpack_require__(76);
        var getOwnPropertySymbolsModule = __webpack_require__(111);
        var propertyIsEnumerableModule = __webpack_require__(83);
        var toObject = __webpack_require__(13);
        var IndexedObject = __webpack_require__(66);

        var nativeAssign = Object.assign;
        var defineProperty = Object.defineProperty;

        // `Object.assign` method
        // https://tc39.es/ecma262/#sec-object.assign
        module.exports =
          !nativeAssign ||
          fails(function () {
            // should have correct order of operations (Edge bug)
            if (
              DESCRIPTORS &&
              nativeAssign(
                { b: 1 },
                nativeAssign(
                  defineProperty({}, "a", {
                    enumerable: true,
                    get: function () {
                      defineProperty(this, "b", {
                        value: 3,
                        enumerable: false,
                      });
                    },
                  }),
                  { b: 2 }
                )
              ).b !== 1
            )
              return true;
            // should work with symbols and should have deterministic property order (V8 bug)
            var A = {};
            var B = {};
            /* global Symbol -- required for testing */
            var symbol = Symbol();
            var alphabet = "abcdefghijklmnopqrst";
            A[symbol] = 7;
            alphabet.split("").forEach(function (chr) {
              B[chr] = chr;
            });
            return (
              nativeAssign({}, A)[symbol] != 7 ||
              objectKeys(nativeAssign({}, B)).join("") != alphabet
            );
          })
            ? function assign(target, source) {
                // eslint-disable-line no-unused-vars -- required for `.length`
                var T = toObject(target);
                var argumentsLength = arguments.length;
                var index = 1;
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                var propertyIsEnumerable = propertyIsEnumerableModule.f;
                while (argumentsLength > index) {
                  var S = IndexedObject(arguments[index++]);
                  var keys = getOwnPropertySymbols
                    ? objectKeys(S).concat(getOwnPropertySymbols(S))
                    : objectKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) {
                    key = keys[j++];
                    if (!DESCRIPTORS || propertyIsEnumerable.call(S, key))
                      T[key] = S[key];
                  }
                }
                return T;
              }
            : nativeAssign;

        /***/
      },
      /* 208 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var create = __webpack_require__(37);

        // `Object.create` method
        // https://tc39.es/ecma262/#sec-object.create
        $(
          { target: "Object", stat: true, sham: !DESCRIPTORS },
          {
            create: create,
          }
        );

        /***/
      },
      /* 209 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var objectKeys = __webpack_require__(76);
        var toIndexedObject = __webpack_require__(27);
        var propertyIsEnumerable = __webpack_require__(83).f;

        // `Object.{ entries, values }` methods implementation
        var createMethod = function (TO_ENTRIES) {
          return function (it) {
            var O = toIndexedObject(it);
            var keys = objectKeys(O);
            var length = keys.length;
            var i = 0;
            var result = [];
            var key;
            while (length > i) {
              key = keys[i++];
              if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
                result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
              }
            }
            return result;
          };
        };

        module.exports = {
          // `Object.entries` method
          // https://tc39.es/ecma262/#sec-object.entries
          entries: createMethod(true),
          // `Object.values` method
          // https://tc39.es/ecma262/#sec-object.values
          values: createMethod(false),
        };

        /***/
      },
      /* 210 */
      /***/ function (module, exports) {
        // `SameValue` abstract operation
        // https://tc39.es/ecma262/#sec-samevalue
        module.exports =
          Object.is ||
          function is(x, y) {
            // eslint-disable-next-line no-self-compare -- NaN check
            return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
          };

        /***/
      },
      /* 211 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var toObject = __webpack_require__(13);
        var nativeKeys = __webpack_require__(76);
        var fails = __webpack_require__(2);

        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeKeys(1);
        });

        // `Object.keys` method
        // https://tc39.es/ecma262/#sec-object.keys
        $(
          { target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES },
          {
            keys: function keys(it) {
              return nativeKeys(toObject(it));
            },
          }
        );

        /***/
      },
      /* 212 */
      /***/ function (module, exports, __webpack_require__) {
        // https://github.com/zloirock/core-js/issues/280
        var userAgent = __webpack_require__(74);

        // eslint-disable-next-line unicorn/no-unsafe-regex -- safe
        module.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(
          userAgent
        );

        /***/
      },
      /* 213 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fixRegExpWellKnownSymbolLogic = __webpack_require__(90);
        var anObject = __webpack_require__(5);
        var toLength = __webpack_require__(10);
        var toInteger = __webpack_require__(32);
        var requireObjectCoercible = __webpack_require__(21);
        var advanceStringIndex = __webpack_require__(93);
        var getSubstitution = __webpack_require__(214);
        var regExpExec = __webpack_require__(94);

        var max = Math.max;
        var min = Math.min;

        var maybeToString = function (it) {
          return it === undefined ? it : String(it);
        };

        // @@replace logic
        fixRegExpWellKnownSymbolLogic(
          "replace",
          2,
          function (REPLACE, nativeReplace, maybeCallNative, reason) {
            var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE =
              reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;
            var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;
            var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE
              ? "$"
              : "$0";

            return [
              // `String.prototype.replace` method
              // https://tc39.es/ecma262/#sec-string.prototype.replace
              function replace(searchValue, replaceValue) {
                var O = requireObjectCoercible(this);
                var replacer =
                  searchValue == undefined ? undefined : searchValue[REPLACE];
                return replacer !== undefined
                  ? replacer.call(searchValue, O, replaceValue)
                  : nativeReplace.call(String(O), searchValue, replaceValue);
              },
              // `RegExp.prototype[@@replace]` method
              // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
              function (regexp, replaceValue) {
                if (
                  (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE &&
                    REPLACE_KEEPS_$0) ||
                  (typeof replaceValue === "string" &&
                    replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)
                ) {
                  var res = maybeCallNative(
                    nativeReplace,
                    regexp,
                    this,
                    replaceValue
                  );
                  if (res.done) return res.value;
                }

                var rx = anObject(regexp);
                var S = String(this);

                var functionalReplace = typeof replaceValue === "function";
                if (!functionalReplace) replaceValue = String(replaceValue);

                var global = rx.global;
                if (global) {
                  var fullUnicode = rx.unicode;
                  rx.lastIndex = 0;
                }
                var results = [];
                while (true) {
                  var result = regExpExec(rx, S);
                  if (result === null) break;

                  results.push(result);
                  if (!global) break;

                  var matchStr = String(result[0]);
                  if (matchStr === "")
                    rx.lastIndex = advanceStringIndex(
                      S,
                      toLength(rx.lastIndex),
                      fullUnicode
                    );
                }

                var accumulatedResult = "";
                var nextSourcePosition = 0;
                for (var i = 0; i < results.length; i++) {
                  result = results[i];

                  var matched = String(result[0]);
                  var position = max(min(toInteger(result.index), S.length), 0);
                  var captures = [];
                  // NOTE: This is equivalent to
                  //   captures = result.slice(1).map(maybeToString)
                  // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
                  // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
                  // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
                  for (var j = 1; j < result.length; j++)
                    captures.push(maybeToString(result[j]));
                  var namedCaptures = result.groups;
                  if (functionalReplace) {
                    var replacerArgs = [matched].concat(captures, position, S);
                    if (namedCaptures !== undefined)
                      replacerArgs.push(namedCaptures);
                    var replacement = String(
                      replaceValue.apply(undefined, replacerArgs)
                    );
                  } else {
                    replacement = getSubstitution(
                      matched,
                      S,
                      position,
                      captures,
                      namedCaptures,
                      replaceValue
                    );
                  }
                  if (position >= nextSourcePosition) {
                    accumulatedResult +=
                      S.slice(nextSourcePosition, position) + replacement;
                    nextSourcePosition = position + matched.length;
                  }
                }
                return accumulatedResult + S.slice(nextSourcePosition);
              },
            ];
          }
        );

        /***/
      },
      /* 214 */
      /***/ function (module, exports, __webpack_require__) {
        var toObject = __webpack_require__(13);

        var floor = Math.floor;
        var replace = "".replace;
        var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
        var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

        // https://tc39.es/ecma262/#sec-getsubstitution
        module.exports = function (
          matched,
          str,
          position,
          captures,
          namedCaptures,
          replacement
        ) {
          var tailPos = position + matched.length;
          var m = captures.length;
          var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
          if (namedCaptures !== undefined) {
            namedCaptures = toObject(namedCaptures);
            symbols = SUBSTITUTION_SYMBOLS;
          }
          return replace.call(replacement, symbols, function (match, ch) {
            var capture;
            switch (ch.charAt(0)) {
              case "$":
                return "$";
              case "&":
                return matched;
              case "`":
                return str.slice(0, position);
              case "'":
                return str.slice(tailPos);
              case "<":
                capture = namedCaptures[ch.slice(1, -1)];
                break;
              default:
                // \d\d?
                var n = +ch;
                if (n === 0) return match;
                if (n > m) {
                  var f = floor(n / 10);
                  if (f === 0) return match;
                  if (f <= m)
                    return captures[f - 1] === undefined
                      ? ch.charAt(1)
                      : captures[f - 1] + ch.charAt(1);
                  return match;
                }
                capture = captures[n - 1];
            }
            return capture === undefined ? "" : capture;
          });
        };

        /***/
      },
      /* 215 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var global = __webpack_require__(3);
        var isForced = __webpack_require__(70);
        var inheritIfRequired = __webpack_require__(96);
        var defineProperty = __webpack_require__(12).f;
        var getOwnPropertyNames = __webpack_require__(52).f;
        var isRegExp = __webpack_require__(81);
        var getFlags = __webpack_require__(63);
        var stickyHelpers = __webpack_require__(92);
        var redefine = __webpack_require__(23);
        var fails = __webpack_require__(2);
        var setInternalState = __webpack_require__(24).set;
        var setSpecies = __webpack_require__(61);
        var wellKnownSymbol = __webpack_require__(8);

        var MATCH = wellKnownSymbol("match");
        var NativeRegExp = global.RegExp;
        var RegExpPrototype = NativeRegExp.prototype;
        var re1 = /a/g;
        var re2 = /a/g;

        // "new" should create a new object, old webkit bug
        var CORRECT_NEW = new NativeRegExp(re1) !== re1;

        var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

        var FORCED =
          DESCRIPTORS &&
          isForced(
            "RegExp",
            !CORRECT_NEW ||
              UNSUPPORTED_Y ||
              fails(function () {
                re2[MATCH] = false;
                // RegExp constructor can alter flags and IsRegExp works correct with @@match
                return (
                  NativeRegExp(re1) != re1 ||
                  NativeRegExp(re2) == re2 ||
                  NativeRegExp(re1, "i") != "/a/i"
                );
              })
          );

        // `RegExp` constructor
        // https://tc39.es/ecma262/#sec-regexp-constructor
        if (FORCED) {
          var RegExpWrapper = function RegExp(pattern, flags) {
            var thisIsRegExp = this instanceof RegExpWrapper;
            var patternIsRegExp = isRegExp(pattern);
            var flagsAreUndefined = flags === undefined;
            var sticky;

            if (
              !thisIsRegExp &&
              patternIsRegExp &&
              pattern.constructor === RegExpWrapper &&
              flagsAreUndefined
            ) {
              return pattern;
            }

            if (CORRECT_NEW) {
              if (patternIsRegExp && !flagsAreUndefined)
                pattern = pattern.source;
            } else if (pattern instanceof RegExpWrapper) {
              if (flagsAreUndefined) flags = getFlags.call(pattern);
              pattern = pattern.source;
            }

            if (UNSUPPORTED_Y) {
              sticky = !!flags && flags.indexOf("y") > -1;
              if (sticky) flags = flags.replace(/y/g, "");
            }

            var result = inheritIfRequired(
              CORRECT_NEW
                ? new NativeRegExp(pattern, flags)
                : NativeRegExp(pattern, flags),
              thisIsRegExp ? this : RegExpPrototype,
              RegExpWrapper
            );

            if (UNSUPPORTED_Y && sticky)
              setInternalState(result, { sticky: sticky });

            return result;
          };
          var proxy = function (key) {
            key in RegExpWrapper ||
              defineProperty(RegExpWrapper, key, {
                configurable: true,
                get: function () {
                  return NativeRegExp[key];
                },
                set: function (it) {
                  NativeRegExp[key] = it;
                },
              });
          };
          var keys = getOwnPropertyNames(NativeRegExp);
          var index = 0;
          while (keys.length > index) proxy(keys[index++]);
          RegExpPrototype.constructor = RegExpWrapper;
          RegExpWrapper.prototype = RegExpPrototype;
          redefine(global, "RegExp", RegExpWrapper);
        }

        // https://tc39.es/ecma262/#sec-get-regexp-@@species
        setSpecies("RegExp");

        /***/
      },
      /* 216 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var trim = __webpack_require__(64).trim;
        var whitespaces = __webpack_require__(95);

        var $parseInt = global.parseInt;
        var hex = /^[+-]?0[Xx]/;
        var FORCED =
          $parseInt(whitespaces + "08") !== 8 ||
          $parseInt(whitespaces + "0x16") !== 22;

        // `parseInt` method
        // https://tc39.es/ecma262/#sec-parseint-string-radix
        module.exports = FORCED
          ? function parseInt(string, radix) {
              var S = trim(String(string));
              return $parseInt(S, radix >>> 0 || (hex.test(S) ? 16 : 10));
            }
          : $parseInt;

        /***/
      },
      /* 217 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var trim = __webpack_require__(64).trim;
        var whitespaces = __webpack_require__(95);

        var $parseFloat = global.parseFloat;
        var FORCED = 1 / $parseFloat(whitespaces + "-0") !== -Infinity;

        // `parseFloat` method
        // https://tc39.es/ecma262/#sec-parsefloat-string
        module.exports = FORCED
          ? function parseFloat(string) {
              var trimmedString = trim(String(string));
              var result = $parseFloat(trimmedString);
              return result === 0 && trimmedString.charAt(0) == "-"
                ? -0
                : result;
            }
          : $parseFloat;

        /***/
      },
      /* 218 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(4);

        var floor = Math.floor;

        // `Number.isInteger` method implementation
        // https://tc39.es/ecma262/#sec-number.isinteger
        module.exports = function isInteger(it) {
          return !isObject(it) && isFinite(it) && floor(it) === it;
        };

        /***/
      },
      /* 219 */
      /***/ function (module, exports, __webpack_require__) {
        var classof = __webpack_require__(40);

        // `thisNumberValue` abstract operation
        // https://tc39.es/ecma262/#sec-thisnumbervalue
        module.exports = function (value) {
          if (typeof value != "number" && classof(value) != "Number") {
            throw TypeError("Incorrect invocation");
          }
          return +value;
        };

        /***/
      },
      /* 220 */
      /***/ function (module, exports) {
        var log = Math.log;

        // `Math.log1p` method implementation
        // https://tc39.es/ecma262/#sec-math.log1p
        module.exports =
          Math.log1p ||
          function log1p(x) {
            return (x = +x) > -1e-8 && x < 1e-8 ? x - (x * x) / 2 : log(1 + x);
          };

        /***/
      },
      /* 221 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var toISOString = __webpack_require__(376);

        // `Date.prototype.toISOString` method
        // https://tc39.es/ecma262/#sec-date.prototype.toisostring
        // PhantomJS / old WebKit has a broken implementations
        $(
          {
            target: "Date",
            proto: true,
            forced: Date.prototype.toISOString !== toISOString,
          },
          {
            toISOString: toISOString,
          }
        );

        /***/
      },
      /* 222 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);

        module.exports = global.Promise;

        /***/
      },
      /* 223 */
      /***/ function (module, exports, __webpack_require__) {
        var userAgent = __webpack_require__(74);

        module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);

        /***/
      },
      /* 224 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;
        var macrotask = __webpack_require__(138).set;
        var IS_IOS = __webpack_require__(223);
        var IS_WEBOS_WEBKIT = __webpack_require__(380);
        var IS_NODE = __webpack_require__(60);

        var MutationObserver =
          global.MutationObserver || global.WebKitMutationObserver;
        var document = global.document;
        var process = global.process;
        var Promise = global.Promise;
        // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
        var queueMicrotaskDescriptor = getOwnPropertyDescriptor(
          global,
          "queueMicrotask"
        );
        var queueMicrotask =
          queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

        var flush, head, last, notify, toggle, node, promise, then;

        // modern engines have queueMicrotask method
        if (!queueMicrotask) {
          flush = function () {
            var parent, fn;
            if (IS_NODE && (parent = process.domain)) parent.exit();
            while (head) {
              fn = head.fn;
              head = head.next;
              try {
                fn();
              } catch (error) {
                if (head) notify();
                else last = undefined;
                throw error;
              }
            }
            last = undefined;
            if (parent) parent.enter();
          };

          // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
          // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
          if (
            !IS_IOS &&
            !IS_NODE &&
            !IS_WEBOS_WEBKIT &&
            MutationObserver &&
            document
          ) {
            toggle = true;
            node = document.createTextNode("");
            new MutationObserver(flush).observe(node, { characterData: true });
            notify = function () {
              node.data = toggle = !toggle;
            };
            // environments with maybe non-completely correct, but existent Promise
          } else if (Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            promise = Promise.resolve(undefined);
            then = promise.then;
            notify = function () {
              then.call(promise, flush);
            };
            // Node.js without promises
          } else if (IS_NODE) {
            notify = function () {
              process.nextTick(flush);
            };
            // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessag
            // - onreadystatechange
            // - setTimeout
          } else {
            notify = function () {
              // strange IE + webpack dev server bug - use .call(global)
              macrotask.call(global, flush);
            };
          }
        }

        module.exports =
          queueMicrotask ||
          function (fn) {
            var task = { fn: fn, next: undefined };
            if (last) last.next = task;
            if (!head) {
              head = task;
              notify();
            }
            last = task;
          };

        /***/
      },
      /* 225 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var isObject = __webpack_require__(4);
        var newPromiseCapability = __webpack_require__(98);

        module.exports = function (C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };

        /***/
      },
      /* 226 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var defineProperty = __webpack_require__(12).f;
        var create = __webpack_require__(37);
        var redefineAll = __webpack_require__(65);
        var bind = __webpack_require__(45);
        var anInstance = __webpack_require__(49);
        var iterate = __webpack_require__(47);
        var defineIterator = __webpack_require__(115);
        var setSpecies = __webpack_require__(61);
        var DESCRIPTORS = __webpack_require__(7);
        var fastKey = __webpack_require__(55).fastKey;
        var InternalStateModule = __webpack_require__(24);

        var setInternalState = InternalStateModule.set;
        var internalStateGetterFor = InternalStateModule.getterFor;

        module.exports = {
          getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
            var C = wrapper(function (that, iterable) {
              anInstance(that, C, CONSTRUCTOR_NAME);
              setInternalState(that, {
                type: CONSTRUCTOR_NAME,
                index: create(null),
                first: undefined,
                last: undefined,
                size: 0,
              });
              if (!DESCRIPTORS) that.size = 0;
              if (iterable != undefined)
                iterate(iterable, that[ADDER], {
                  that: that,
                  AS_ENTRIES: IS_MAP,
                });
            });

            var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

            var define = function (that, key, value) {
              var state = getInternalState(that);
              var entry = getEntry(that, key);
              var previous, index;
              // change existing entry
              if (entry) {
                entry.value = value;
                // create new entry
              } else {
                state.last = entry = {
                  index: (index = fastKey(key, true)),
                  key: key,
                  value: value,
                  previous: (previous = state.last),
                  next: undefined,
                  removed: false,
                };
                if (!state.first) state.first = entry;
                if (previous) previous.next = entry;
                if (DESCRIPTORS) state.size++;
                else that.size++;
                // add to index
                if (index !== "F") state.index[index] = entry;
              }
              return that;
            };

            var getEntry = function (that, key) {
              var state = getInternalState(that);
              // fast case
              var index = fastKey(key);
              var entry;
              if (index !== "F") return state.index[index];
              // frozen object case
              for (entry = state.first; entry; entry = entry.next) {
                if (entry.key == key) return entry;
              }
            };

            redefineAll(C.prototype, {
              // 23.1.3.1 Map.prototype.clear()
              // 23.2.3.2 Set.prototype.clear()
              clear: function clear() {
                var that = this;
                var state = getInternalState(that);
                var data = state.index;
                var entry = state.first;
                while (entry) {
                  entry.removed = true;
                  if (entry.previous)
                    entry.previous = entry.previous.next = undefined;
                  delete data[entry.index];
                  entry = entry.next;
                }
                state.first = state.last = undefined;
                if (DESCRIPTORS) state.size = 0;
                else that.size = 0;
              },
              // 23.1.3.3 Map.prototype.delete(key)
              // 23.2.3.4 Set.prototype.delete(value)
              delete: function (key) {
                var that = this;
                var state = getInternalState(that);
                var entry = getEntry(that, key);
                if (entry) {
                  var next = entry.next;
                  var prev = entry.previous;
                  delete state.index[entry.index];
                  entry.removed = true;
                  if (prev) prev.next = next;
                  if (next) next.previous = prev;
                  if (state.first == entry) state.first = next;
                  if (state.last == entry) state.last = prev;
                  if (DESCRIPTORS) state.size--;
                  else that.size--;
                }
                return !!entry;
              },
              // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
              // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
              forEach: function forEach(callbackfn /* , that = undefined */) {
                var state = getInternalState(this);
                var boundFunction = bind(
                  callbackfn,
                  arguments.length > 1 ? arguments[1] : undefined,
                  3
                );
                var entry;
                while ((entry = entry ? entry.next : state.first)) {
                  boundFunction(entry.value, entry.key, this);
                  // revert to the last existing entry
                  while (entry && entry.removed) entry = entry.previous;
                }
              },
              // 23.1.3.7 Map.prototype.has(key)
              // 23.2.3.7 Set.prototype.has(value)
              has: function has(key) {
                return !!getEntry(this, key);
              },
            });

            redefineAll(
              C.prototype,
              IS_MAP
                ? {
                    // 23.1.3.6 Map.prototype.get(key)
                    get: function get(key) {
                      var entry = getEntry(this, key);
                      return entry && entry.value;
                    },
                    // 23.1.3.9 Map.prototype.set(key, value)
                    set: function set(key, value) {
                      return define(this, key === 0 ? 0 : key, value);
                    },
                  }
                : {
                    // 23.2.3.1 Set.prototype.add(value)
                    add: function add(value) {
                      return define(this, (value =
                        value === 0 ? 0 : value), value);
                    },
                  }
            );
            if (DESCRIPTORS)
              defineProperty(C.prototype, "size", {
                get: function () {
                  return getInternalState(this).size;
                },
              });
            return C;
          },
          setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
            var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
            var getInternalCollectionState = internalStateGetterFor(
              CONSTRUCTOR_NAME
            );
            var getInternalIteratorState = internalStateGetterFor(
              ITERATOR_NAME
            );
            // add .keys, .values, .entries, [@@iterator]
            // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
            defineIterator(
              C,
              CONSTRUCTOR_NAME,
              function (iterated, kind) {
                setInternalState(this, {
                  type: ITERATOR_NAME,
                  target: iterated,
                  state: getInternalCollectionState(iterated),
                  kind: kind,
                  last: undefined,
                });
              },
              function () {
                var state = getInternalIteratorState(this);
                var kind = state.kind;
                var entry = state.last;
                // revert to the last existing entry
                while (entry && entry.removed) entry = entry.previous;
                // get next entry
                if (
                  !state.target ||
                  !(state.last = entry = entry ? entry.next : state.state.first)
                ) {
                  // or finish the iteration
                  state.target = undefined;
                  return { value: undefined, done: true };
                }
                // return step by kind
                if (kind == "keys") return { value: entry.key, done: false };
                if (kind == "values")
                  return { value: entry.value, done: false };
                return { value: [entry.key, entry.value], done: false };
              },
              IS_MAP ? "entries" : "values",
              !IS_MAP,
              true
            );

            // add [@@species], 23.1.2.2, 23.2.2.2
            setSpecies(CONSTRUCTOR_NAME);
          },
        };

        /***/
      },
      /* 227 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var redefineAll = __webpack_require__(65);
        var getWeakData = __webpack_require__(55).getWeakData;
        var anObject = __webpack_require__(5);
        var isObject = __webpack_require__(4);
        var anInstance = __webpack_require__(49);
        var iterate = __webpack_require__(47);
        var ArrayIterationModule = __webpack_require__(17);
        var $has = __webpack_require__(14);
        var InternalStateModule = __webpack_require__(24);

        var setInternalState = InternalStateModule.set;
        var internalStateGetterFor = InternalStateModule.getterFor;
        var find = ArrayIterationModule.find;
        var findIndex = ArrayIterationModule.findIndex;
        var id = 0;

        // fallback for uncaught frozen keys
        var uncaughtFrozenStore = function (store) {
          return store.frozen || (store.frozen = new UncaughtFrozenStore());
        };

        var UncaughtFrozenStore = function () {
          this.entries = [];
        };

        var findUncaughtFrozen = function (store, key) {
          return find(store.entries, function (it) {
            return it[0] === key;
          });
        };

        UncaughtFrozenStore.prototype = {
          get: function (key) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) return entry[1];
          },
          has: function (key) {
            return !!findUncaughtFrozen(this, key);
          },
          set: function (key, value) {
            var entry = findUncaughtFrozen(this, key);
            if (entry) entry[1] = value;
            else this.entries.push([key, value]);
          },
          delete: function (key) {
            var index = findIndex(this.entries, function (it) {
              return it[0] === key;
            });
            if (~index) this.entries.splice(index, 1);
            return !!~index;
          },
        };

        module.exports = {
          getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
            var C = wrapper(function (that, iterable) {
              anInstance(that, C, CONSTRUCTOR_NAME);
              setInternalState(that, {
                type: CONSTRUCTOR_NAME,
                id: id++,
                frozen: undefined,
              });
              if (iterable != undefined)
                iterate(iterable, that[ADDER], {
                  that: that,
                  AS_ENTRIES: IS_MAP,
                });
            });

            var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

            var define = function (that, key, value) {
              var state = getInternalState(that);
              var data = getWeakData(anObject(key), true);
              if (data === true) uncaughtFrozenStore(state).set(key, value);
              else data[state.id] = value;
              return that;
            };

            redefineAll(C.prototype, {
              // 23.3.3.2 WeakMap.prototype.delete(key)
              // 23.4.3.3 WeakSet.prototype.delete(value)
              delete: function (key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true)
                  return uncaughtFrozenStore(state)["delete"](key);
                return data && $has(data, state.id) && delete data[state.id];
              },
              // 23.3.3.4 WeakMap.prototype.has(key)
              // 23.4.3.4 WeakSet.prototype.has(value)
              has: function has(key) {
                var state = getInternalState(this);
                if (!isObject(key)) return false;
                var data = getWeakData(key);
                if (data === true) return uncaughtFrozenStore(state).has(key);
                return data && $has(data, state.id);
              },
            });

            redefineAll(
              C.prototype,
              IS_MAP
                ? {
                    // 23.3.3.3 WeakMap.prototype.get(key)
                    get: function get(key) {
                      var state = getInternalState(this);
                      if (isObject(key)) {
                        var data = getWeakData(key);
                        if (data === true)
                          return uncaughtFrozenStore(state).get(key);
                        return data ? data[state.id] : undefined;
                      }
                    },
                    // 23.3.3.5 WeakMap.prototype.set(key, value)
                    set: function set(key, value) {
                      return define(this, key, value);
                    },
                  }
                : {
                    // 23.4.3.1 WeakSet.prototype.add(value)
                    add: function add(value) {
                      return define(this, value, true);
                    },
                  }
            );

            return C;
          },
        };

        /***/
      },
      /* 228 */
      /***/ function (module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(32);
        var toLength = __webpack_require__(10);

        // `ToIndex` abstract operation
        // https://tc39.es/ecma262/#sec-toindex
        module.exports = function (it) {
          if (it === undefined) return 0;
          var number = toInteger(it);
          var length = toLength(number);
          if (number !== length) throw RangeError("Wrong length or index");
          return length;
        };

        /***/
      },
      /* 229 */
      /***/ function (module, exports, __webpack_require__) {
        var toPositiveInteger = __webpack_require__(394);

        module.exports = function (it, BYTES) {
          var offset = toPositiveInteger(it);
          if (offset % BYTES) throw RangeError("Wrong offset");
          return offset;
        };

        /***/
      },
      /* 230 */
      /***/ function (module, exports, __webpack_require__) {
        var toObject = __webpack_require__(13);
        var toLength = __webpack_require__(10);
        var getIteratorMethod = __webpack_require__(79);
        var isArrayIteratorMethod = __webpack_require__(119);
        var bind = __webpack_require__(45);
        var aTypedArrayConstructor = __webpack_require__(9)
          .aTypedArrayConstructor;

        module.exports = function from(source /* , mapfn, thisArg */) {
          var O = toObject(source);
          var argumentsLength = arguments.length;
          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          var iteratorMethod = getIteratorMethod(O);
          var i, length, result, step, iterator, next;
          if (
            iteratorMethod != undefined &&
            !isArrayIteratorMethod(iteratorMethod)
          ) {
            iterator = iteratorMethod.call(O);
            next = iterator.next;
            O = [];
            while (!(step = next.call(iterator)).done) {
              O.push(step.value);
            }
          }
          if (mapping && argumentsLength > 2) {
            mapfn = bind(mapfn, arguments[2], 2);
          }
          length = toLength(O.length);
          result = new (aTypedArrayConstructor(this))(length);
          for (i = 0; length > i; i++) {
            result[i] = mapping ? mapfn(O[i], i) : O[i];
          }
          return result;
        };

        /***/
      },
      /* 231 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(
          142
        );
        var exportTypedArrayStaticMethod = __webpack_require__(9)
          .exportTypedArrayStaticMethod;
        var typedArrayFrom = __webpack_require__(230);

        // `%TypedArray%.from` method
        // https://tc39.es/ecma262/#sec-%typedarray%.from
        exportTypedArrayStaticMethod(
          "from",
          typedArrayFrom,
          TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS
        );

        /***/
      },
      /* 232 */
      /***/ function (module, exports) {
        // iterable DOM collections
        // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
        module.exports = {
          CSSRuleList: 0,
          CSSStyleDeclaration: 0,
          CSSValueList: 0,
          ClientRectList: 0,
          DOMRectList: 0,
          DOMStringList: 0,
          DOMTokenList: 1,
          DataTransferItemList: 0,
          FileList: 0,
          HTMLAllCollection: 0,
          HTMLCollection: 0,
          HTMLFormElement: 0,
          HTMLSelectElement: 0,
          MediaList: 0,
          MimeTypeArray: 0,
          NamedNodeMap: 0,
          NodeList: 1,
          PaintRequestList: 0,
          Plugin: 0,
          PluginArray: 0,
          SVGLengthList: 0,
          SVGNumberList: 0,
          SVGPathSegList: 0,
          SVGPointList: 0,
          SVGStringList: 0,
          SVGTransformList: 0,
          SourceBufferList: 0,
          StyleSheetList: 0,
          TextTrackCueList: 0,
          TextTrackList: 0,
          TouchList: 0,
        };

        /***/
      },
      /* 233 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var DOMIterables = __webpack_require__(232);
        var ArrayIteratorMethods = __webpack_require__(62);
        var createNonEnumerableProperty = __webpack_require__(22);
        var wellKnownSymbol = __webpack_require__(8);

        var ITERATOR = wellKnownSymbol("iterator");
        var TO_STRING_TAG = wellKnownSymbol("toStringTag");
        var ArrayValues = ArrayIteratorMethods.values;

        for (var COLLECTION_NAME in DOMIterables) {
          var Collection = global[COLLECTION_NAME];
          var CollectionPrototype = Collection && Collection.prototype;
          if (CollectionPrototype) {
            // some Chrome versions have non-configurable methods on DOMTokenList
            if (CollectionPrototype[ITERATOR] !== ArrayValues)
              try {
                createNonEnumerableProperty(
                  CollectionPrototype,
                  ITERATOR,
                  ArrayValues
                );
              } catch (error) {
                CollectionPrototype[ITERATOR] = ArrayValues;
              }
            if (!CollectionPrototype[TO_STRING_TAG]) {
              createNonEnumerableProperty(
                CollectionPrototype,
                TO_STRING_TAG,
                COLLECTION_NAME
              );
            }
            if (DOMIterables[COLLECTION_NAME])
              for (var METHOD_NAME in ArrayIteratorMethods) {
                // some Chrome versions have non-configurable methods on DOMTokenList
                if (
                  CollectionPrototype[METHOD_NAME] !==
                  ArrayIteratorMethods[METHOD_NAME]
                )
                  try {
                    createNonEnumerableProperty(
                      CollectionPrototype,
                      METHOD_NAME,
                      ArrayIteratorMethods[METHOD_NAME]
                    );
                  } catch (error) {
                    CollectionPrototype[METHOD_NAME] =
                      ArrayIteratorMethods[METHOD_NAME];
                  }
              }
          }
        }

        /***/
      },
      /* 234 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
        __webpack_require__(77);
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var USE_NATIVE_URL = __webpack_require__(235);
        var global = __webpack_require__(3);
        var defineProperties = __webpack_require__(114);
        var redefine = __webpack_require__(23);
        var anInstance = __webpack_require__(49);
        var has = __webpack_require__(14);
        var assign = __webpack_require__(207);
        var arrayFrom = __webpack_require__(197);
        var codeAt = __webpack_require__(85).codeAt;
        var toASCII = __webpack_require__(420);
        var setToStringTag = __webpack_require__(36);
        var URLSearchParamsModule = __webpack_require__(236);
        var InternalStateModule = __webpack_require__(24);

        var NativeURL = global.URL;
        var URLSearchParams = URLSearchParamsModule.URLSearchParams;
        var getInternalSearchParamsState = URLSearchParamsModule.getState;
        var setInternalState = InternalStateModule.set;
        var getInternalURLState = InternalStateModule.getterFor("URL");
        var floor = Math.floor;
        var pow = Math.pow;

        var INVALID_AUTHORITY = "Invalid authority";
        var INVALID_SCHEME = "Invalid scheme";
        var INVALID_HOST = "Invalid host";
        var INVALID_PORT = "Invalid port";

        var ALPHA = /[A-Za-z]/;
        var ALPHANUMERIC = /[\d+-.A-Za-z]/;
        var DIGIT = /\d/;
        var HEX_START = /^(0x|0X)/;
        var OCT = /^[0-7]+$/;
        var DEC = /^\d+$/;
        var HEX = /^[\dA-Fa-f]+$/;
        /* eslint-disable no-control-regex -- safe */
        var FORBIDDEN_HOST_CODE_POINT = /[\u0000\t\u000A\u000D #%/:?@[\\]]/;
        var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\u0000\t\u000A\u000D #/:?@[\\]]/;
        var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g;
        var TAB_AND_NEW_LINE = /[\t\u000A\u000D]/g;
        /* eslint-enable no-control-regex -- safe */
        var EOF;

        var parseHost = function (url, input) {
          var result, codePoints, index;
          if (input.charAt(0) == "[") {
            if (input.charAt(input.length - 1) != "]") return INVALID_HOST;
            result = parseIPv6(input.slice(1, -1));
            if (!result) return INVALID_HOST;
            url.host = result;
            // opaque host
          } else if (!isSpecial(url)) {
            if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input))
              return INVALID_HOST;
            result = "";
            codePoints = arrayFrom(input);
            for (index = 0; index < codePoints.length; index++) {
              result += percentEncode(
                codePoints[index],
                C0ControlPercentEncodeSet
              );
            }
            url.host = result;
          } else {
            input = toASCII(input);
            if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
            result = parseIPv4(input);
            if (result === null) return INVALID_HOST;
            url.host = result;
          }
        };

        var parseIPv4 = function (input) {
          var parts = input.split(".");
          var partsLength, numbers, index, part, radix, number, ipv4;
          if (parts.length && parts[parts.length - 1] == "") {
            parts.pop();
          }
          partsLength = parts.length;
          if (partsLength > 4) return input;
          numbers = [];
          for (index = 0; index < partsLength; index++) {
            part = parts[index];
            if (part == "") return input;
            radix = 10;
            if (part.length > 1 && part.charAt(0) == "0") {
              radix = HEX_START.test(part) ? 16 : 8;
              part = part.slice(radix == 8 ? 1 : 2);
            }
            if (part === "") {
              number = 0;
            } else {
              if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part))
                return input;
              number = parseInt(part, radix);
            }
            numbers.push(number);
          }
          for (index = 0; index < partsLength; index++) {
            number = numbers[index];
            if (index == partsLength - 1) {
              if (number >= pow(256, 5 - partsLength)) return null;
            } else if (number > 255) return null;
          }
          ipv4 = numbers.pop();
          for (index = 0; index < numbers.length; index++) {
            ipv4 += numbers[index] * pow(256, 3 - index);
          }
          return ipv4;
        };

        // eslint-disable-next-line max-statements -- TODO
        var parseIPv6 = function (input) {
          var address = [0, 0, 0, 0, 0, 0, 0, 0];
          var pieceIndex = 0;
          var compress = null;
          var pointer = 0;
          var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

          var char = function () {
            return input.charAt(pointer);
          };

          if (char() == ":") {
            if (input.charAt(1) != ":") return;
            pointer += 2;
            pieceIndex++;
            compress = pieceIndex;
          }
          while (char()) {
            if (pieceIndex == 8) return;
            if (char() == ":") {
              if (compress !== null) return;
              pointer++;
              pieceIndex++;
              compress = pieceIndex;
              continue;
            }
            value = length = 0;
            while (length < 4 && HEX.test(char())) {
              value = value * 16 + parseInt(char(), 16);
              pointer++;
              length++;
            }
            if (char() == ".") {
              if (length == 0) return;
              pointer -= length;
              if (pieceIndex > 6) return;
              numbersSeen = 0;
              while (char()) {
                ipv4Piece = null;
                if (numbersSeen > 0) {
                  if (char() == "." && numbersSeen < 4) pointer++;
                  else return;
                }
                if (!DIGIT.test(char())) return;
                while (DIGIT.test(char())) {
                  number = parseInt(char(), 10);
                  if (ipv4Piece === null) ipv4Piece = number;
                  else if (ipv4Piece == 0) return;
                  else ipv4Piece = ipv4Piece * 10 + number;
                  if (ipv4Piece > 255) return;
                  pointer++;
                }
                address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
                numbersSeen++;
                if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
              }
              if (numbersSeen != 4) return;
              break;
            } else if (char() == ":") {
              pointer++;
              if (!char()) return;
            } else if (char()) return;
            address[pieceIndex++] = value;
          }
          if (compress !== null) {
            swaps = pieceIndex - compress;
            pieceIndex = 7;
            while (pieceIndex != 0 && swaps > 0) {
              swap = address[pieceIndex];
              address[pieceIndex--] = address[compress + swaps - 1];
              address[compress + --swaps] = swap;
            }
          } else if (pieceIndex != 8) return;
          return address;
        };

        var findLongestZeroSequence = function (ipv6) {
          var maxIndex = null;
          var maxLength = 1;
          var currStart = null;
          var currLength = 0;
          var index = 0;
          for (; index < 8; index++) {
            if (ipv6[index] !== 0) {
              if (currLength > maxLength) {
                maxIndex = currStart;
                maxLength = currLength;
              }
              currStart = null;
              currLength = 0;
            } else {
              if (currStart === null) currStart = index;
              ++currLength;
            }
          }
          if (currLength > maxLength) {
            maxIndex = currStart;
            maxLength = currLength;
          }
          return maxIndex;
        };

        var serializeHost = function (host) {
          var result, index, compress, ignore0;
          // ipv4
          if (typeof host == "number") {
            result = [];
            for (index = 0; index < 4; index++) {
              result.unshift(host % 256);
              host = floor(host / 256);
            }
            return result.join(".");
            // ipv6
          } else if (typeof host == "object") {
            result = "";
            compress = findLongestZeroSequence(host);
            for (index = 0; index < 8; index++) {
              if (ignore0 && host[index] === 0) continue;
              if (ignore0) ignore0 = false;
              if (compress === index) {
                result += index ? ":" : "::";
                ignore0 = true;
              } else {
                result += host[index].toString(16);
                if (index < 7) result += ":";
              }
            }
            return "[" + result + "]";
          }
          return host;
        };

        var C0ControlPercentEncodeSet = {};
        var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
          " ": 1,
          '"': 1,
          "<": 1,
          ">": 1,
          "`": 1,
        });
        var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
          "#": 1,
          "?": 1,
          "{": 1,
          "}": 1,
        });
        var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
          "/": 1,
          ":": 1,
          ";": 1,
          "=": 1,
          "@": 1,
          "[": 1,
          "\\": 1,
          "]": 1,
          "^": 1,
          "|": 1,
        });

        var percentEncode = function (char, set) {
          var code = codeAt(char, 0);
          return code > 0x20 && code < 0x7f && !has(set, char)
            ? char
            : encodeURIComponent(char);
        };

        var specialSchemes = {
          ftp: 21,
          file: null,
          http: 80,
          https: 443,
          ws: 80,
          wss: 443,
        };

        var isSpecial = function (url) {
          return has(specialSchemes, url.scheme);
        };

        var includesCredentials = function (url) {
          return url.username != "" || url.password != "";
        };

        var cannotHaveUsernamePasswordPort = function (url) {
          return !url.host || url.cannotBeABaseURL || url.scheme == "file";
        };

        var isWindowsDriveLetter = function (string, normalized) {
          var second;
          return (
            string.length == 2 &&
            ALPHA.test(string.charAt(0)) &&
            ((second = string.charAt(1)) == ":" ||
              (!normalized && second == "|"))
          );
        };

        var startsWithWindowsDriveLetter = function (string) {
          var third;
          return (
            string.length > 1 &&
            isWindowsDriveLetter(string.slice(0, 2)) &&
            (string.length == 2 ||
              (third = string.charAt(2)) === "/" ||
              third === "\\" ||
              third === "?" ||
              third === "#")
          );
        };

        var shortenURLsPath = function (url) {
          var path = url.path;
          var pathSize = path.length;
          if (
            pathSize &&
            (url.scheme != "file" ||
              pathSize != 1 ||
              !isWindowsDriveLetter(path[0], true))
          ) {
            path.pop();
          }
        };

        var isSingleDot = function (segment) {
          return segment === "." || segment.toLowerCase() === "%2e";
        };

        var isDoubleDot = function (segment) {
          segment = segment.toLowerCase();
          return (
            segment === ".." ||
            segment === "%2e." ||
            segment === ".%2e" ||
            segment === "%2e%2e"
          );
        };

        // States:
        var SCHEME_START = {};
        var SCHEME = {};
        var NO_SCHEME = {};
        var SPECIAL_RELATIVE_OR_AUTHORITY = {};
        var PATH_OR_AUTHORITY = {};
        var RELATIVE = {};
        var RELATIVE_SLASH = {};
        var SPECIAL_AUTHORITY_SLASHES = {};
        var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
        var AUTHORITY = {};
        var HOST = {};
        var HOSTNAME = {};
        var PORT = {};
        var FILE = {};
        var FILE_SLASH = {};
        var FILE_HOST = {};
        var PATH_START = {};
        var PATH = {};
        var CANNOT_BE_A_BASE_URL_PATH = {};
        var QUERY = {};
        var FRAGMENT = {};

        // eslint-disable-next-line max-statements -- TODO
        var parseURL = function (url, input, stateOverride, base) {
          var state = stateOverride || SCHEME_START;
          var pointer = 0;
          var buffer = "";
          var seenAt = false;
          var seenBracket = false;
          var seenPasswordToken = false;
          var codePoints, char, bufferCodePoints, failure;

          if (!stateOverride) {
            url.scheme = "";
            url.username = "";
            url.password = "";
            url.host = null;
            url.port = null;
            url.path = [];
            url.query = null;
            url.fragment = null;
            url.cannotBeABaseURL = false;
            input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, "");
          }

          input = input.replace(TAB_AND_NEW_LINE, "");

          codePoints = arrayFrom(input);

          while (pointer <= codePoints.length) {
            char = codePoints[pointer];
            switch (state) {
              case SCHEME_START:
                if (char && ALPHA.test(char)) {
                  buffer += char.toLowerCase();
                  state = SCHEME;
                } else if (!stateOverride) {
                  state = NO_SCHEME;
                  continue;
                } else return INVALID_SCHEME;
                break;

              case SCHEME:
                if (
                  char &&
                  (ALPHANUMERIC.test(char) ||
                    char == "+" ||
                    char == "-" ||
                    char == ".")
                ) {
                  buffer += char.toLowerCase();
                } else if (char == ":") {
                  if (
                    stateOverride &&
                    (isSpecial(url) != has(specialSchemes, buffer) ||
                      (buffer == "file" &&
                        (includesCredentials(url) || url.port !== null)) ||
                      (url.scheme == "file" && !url.host))
                  )
                    return;
                  url.scheme = buffer;
                  if (stateOverride) {
                    if (
                      isSpecial(url) &&
                      specialSchemes[url.scheme] == url.port
                    )
                      url.port = null;
                    return;
                  }
                  buffer = "";
                  if (url.scheme == "file") {
                    state = FILE;
                  } else if (
                    isSpecial(url) &&
                    base &&
                    base.scheme == url.scheme
                  ) {
                    state = SPECIAL_RELATIVE_OR_AUTHORITY;
                  } else if (isSpecial(url)) {
                    state = SPECIAL_AUTHORITY_SLASHES;
                  } else if (codePoints[pointer + 1] == "/") {
                    state = PATH_OR_AUTHORITY;
                    pointer++;
                  } else {
                    url.cannotBeABaseURL = true;
                    url.path.push("");
                    state = CANNOT_BE_A_BASE_URL_PATH;
                  }
                } else if (!stateOverride) {
                  buffer = "";
                  state = NO_SCHEME;
                  pointer = 0;
                  continue;
                } else return INVALID_SCHEME;
                break;

              case NO_SCHEME:
                if (!base || (base.cannotBeABaseURL && char != "#"))
                  return INVALID_SCHEME;
                if (base.cannotBeABaseURL && char == "#") {
                  url.scheme = base.scheme;
                  url.path = base.path.slice();
                  url.query = base.query;
                  url.fragment = "";
                  url.cannotBeABaseURL = true;
                  state = FRAGMENT;
                  break;
                }
                state = base.scheme == "file" ? FILE : RELATIVE;
                continue;

              case SPECIAL_RELATIVE_OR_AUTHORITY:
                if (char == "/" && codePoints[pointer + 1] == "/") {
                  state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                  pointer++;
                } else {
                  state = RELATIVE;
                  continue;
                }
                break;

              case PATH_OR_AUTHORITY:
                if (char == "/") {
                  state = AUTHORITY;
                  break;
                } else {
                  state = PATH;
                  continue;
                }

              case RELATIVE:
                url.scheme = base.scheme;
                if (char == EOF) {
                  url.username = base.username;
                  url.password = base.password;
                  url.host = base.host;
                  url.port = base.port;
                  url.path = base.path.slice();
                  url.query = base.query;
                } else if (char == "/" || (char == "\\" && isSpecial(url))) {
                  state = RELATIVE_SLASH;
                } else if (char == "?") {
                  url.username = base.username;
                  url.password = base.password;
                  url.host = base.host;
                  url.port = base.port;
                  url.path = base.path.slice();
                  url.query = "";
                  state = QUERY;
                } else if (char == "#") {
                  url.username = base.username;
                  url.password = base.password;
                  url.host = base.host;
                  url.port = base.port;
                  url.path = base.path.slice();
                  url.query = base.query;
                  url.fragment = "";
                  state = FRAGMENT;
                } else {
                  url.username = base.username;
                  url.password = base.password;
                  url.host = base.host;
                  url.port = base.port;
                  url.path = base.path.slice();
                  url.path.pop();
                  state = PATH;
                  continue;
                }
                break;

              case RELATIVE_SLASH:
                if (isSpecial(url) && (char == "/" || char == "\\")) {
                  state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                } else if (char == "/") {
                  state = AUTHORITY;
                } else {
                  url.username = base.username;
                  url.password = base.password;
                  url.host = base.host;
                  url.port = base.port;
                  state = PATH;
                  continue;
                }
                break;

              case SPECIAL_AUTHORITY_SLASHES:
                state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
                if (char != "/" || buffer.charAt(pointer + 1) != "/") continue;
                pointer++;
                break;

              case SPECIAL_AUTHORITY_IGNORE_SLASHES:
                if (char != "/" && char != "\\") {
                  state = AUTHORITY;
                  continue;
                }
                break;

              case AUTHORITY:
                if (char == "@") {
                  if (seenAt) buffer = "%40" + buffer;
                  seenAt = true;
                  bufferCodePoints = arrayFrom(buffer);
                  for (var i = 0; i < bufferCodePoints.length; i++) {
                    var codePoint = bufferCodePoints[i];
                    if (codePoint == ":" && !seenPasswordToken) {
                      seenPasswordToken = true;
                      continue;
                    }
                    var encodedCodePoints = percentEncode(
                      codePoint,
                      userinfoPercentEncodeSet
                    );
                    if (seenPasswordToken) url.password += encodedCodePoints;
                    else url.username += encodedCodePoints;
                  }
                  buffer = "";
                } else if (
                  char == EOF ||
                  char == "/" ||
                  char == "?" ||
                  char == "#" ||
                  (char == "\\" && isSpecial(url))
                ) {
                  if (seenAt && buffer == "") return INVALID_AUTHORITY;
                  pointer -= arrayFrom(buffer).length + 1;
                  buffer = "";
                  state = HOST;
                } else buffer += char;
                break;

              case HOST:
              case HOSTNAME:
                if (stateOverride && url.scheme == "file") {
                  state = FILE_HOST;
                  continue;
                } else if (char == ":" && !seenBracket) {
                  if (buffer == "") return INVALID_HOST;
                  failure = parseHost(url, buffer);
                  if (failure) return failure;
                  buffer = "";
                  state = PORT;
                  if (stateOverride == HOSTNAME) return;
                } else if (
                  char == EOF ||
                  char == "/" ||
                  char == "?" ||
                  char == "#" ||
                  (char == "\\" && isSpecial(url))
                ) {
                  if (isSpecial(url) && buffer == "") return INVALID_HOST;
                  if (
                    stateOverride &&
                    buffer == "" &&
                    (includesCredentials(url) || url.port !== null)
                  )
                    return;
                  failure = parseHost(url, buffer);
                  if (failure) return failure;
                  buffer = "";
                  state = PATH_START;
                  if (stateOverride) return;
                  continue;
                } else {
                  if (char == "[") seenBracket = true;
                  else if (char == "]") seenBracket = false;
                  buffer += char;
                }
                break;

              case PORT:
                if (DIGIT.test(char)) {
                  buffer += char;
                } else if (
                  char == EOF ||
                  char == "/" ||
                  char == "?" ||
                  char == "#" ||
                  (char == "\\" && isSpecial(url)) ||
                  stateOverride
                ) {
                  if (buffer != "") {
                    var port = parseInt(buffer, 10);
                    if (port > 0xffff) return INVALID_PORT;
                    url.port =
                      isSpecial(url) && port === specialSchemes[url.scheme]
                        ? null
                        : port;
                    buffer = "";
                  }
                  if (stateOverride) return;
                  state = PATH_START;
                  continue;
                } else return INVALID_PORT;
                break;

              case FILE:
                url.scheme = "file";
                if (char == "/" || char == "\\") state = FILE_SLASH;
                else if (base && base.scheme == "file") {
                  if (char == EOF) {
                    url.host = base.host;
                    url.path = base.path.slice();
                    url.query = base.query;
                  } else if (char == "?") {
                    url.host = base.host;
                    url.path = base.path.slice();
                    url.query = "";
                    state = QUERY;
                  } else if (char == "#") {
                    url.host = base.host;
                    url.path = base.path.slice();
                    url.query = base.query;
                    url.fragment = "";
                    state = FRAGMENT;
                  } else {
                    if (
                      !startsWithWindowsDriveLetter(
                        codePoints.slice(pointer).join("")
                      )
                    ) {
                      url.host = base.host;
                      url.path = base.path.slice();
                      shortenURLsPath(url);
                    }
                    state = PATH;
                    continue;
                  }
                } else {
                  state = PATH;
                  continue;
                }
                break;

              case FILE_SLASH:
                if (char == "/" || char == "\\") {
                  state = FILE_HOST;
                  break;
                }
                if (
                  base &&
                  base.scheme == "file" &&
                  !startsWithWindowsDriveLetter(
                    codePoints.slice(pointer).join("")
                  )
                ) {
                  if (isWindowsDriveLetter(base.path[0], true))
                    url.path.push(base.path[0]);
                  else url.host = base.host;
                }
                state = PATH;
                continue;

              case FILE_HOST:
                if (
                  char == EOF ||
                  char == "/" ||
                  char == "\\" ||
                  char == "?" ||
                  char == "#"
                ) {
                  if (!stateOverride && isWindowsDriveLetter(buffer)) {
                    state = PATH;
                  } else if (buffer == "") {
                    url.host = "";
                    if (stateOverride) return;
                    state = PATH_START;
                  } else {
                    failure = parseHost(url, buffer);
                    if (failure) return failure;
                    if (url.host == "localhost") url.host = "";
                    if (stateOverride) return;
                    buffer = "";
                    state = PATH_START;
                  }
                  continue;
                } else buffer += char;
                break;

              case PATH_START:
                if (isSpecial(url)) {
                  state = PATH;
                  if (char != "/" && char != "\\") continue;
                } else if (!stateOverride && char == "?") {
                  url.query = "";
                  state = QUERY;
                } else if (!stateOverride && char == "#") {
                  url.fragment = "";
                  state = FRAGMENT;
                } else if (char != EOF) {
                  state = PATH;
                  if (char != "/") continue;
                }
                break;

              case PATH:
                if (
                  char == EOF ||
                  char == "/" ||
                  (char == "\\" && isSpecial(url)) ||
                  (!stateOverride && (char == "?" || char == "#"))
                ) {
                  if (isDoubleDot(buffer)) {
                    shortenURLsPath(url);
                    if (char != "/" && !(char == "\\" && isSpecial(url))) {
                      url.path.push("");
                    }
                  } else if (isSingleDot(buffer)) {
                    if (char != "/" && !(char == "\\" && isSpecial(url))) {
                      url.path.push("");
                    }
                  } else {
                    if (
                      url.scheme == "file" &&
                      !url.path.length &&
                      isWindowsDriveLetter(buffer)
                    ) {
                      if (url.host) url.host = "";
                      buffer = buffer.charAt(0) + ":"; // normalize windows drive letter
                    }
                    url.path.push(buffer);
                  }
                  buffer = "";
                  if (
                    url.scheme == "file" &&
                    (char == EOF || char == "?" || char == "#")
                  ) {
                    while (url.path.length > 1 && url.path[0] === "") {
                      url.path.shift();
                    }
                  }
                  if (char == "?") {
                    url.query = "";
                    state = QUERY;
                  } else if (char == "#") {
                    url.fragment = "";
                    state = FRAGMENT;
                  }
                } else {
                  buffer += percentEncode(char, pathPercentEncodeSet);
                }
                break;

              case CANNOT_BE_A_BASE_URL_PATH:
                if (char == "?") {
                  url.query = "";
                  state = QUERY;
                } else if (char == "#") {
                  url.fragment = "";
                  state = FRAGMENT;
                } else if (char != EOF) {
                  url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);
                }
                break;

              case QUERY:
                if (!stateOverride && char == "#") {
                  url.fragment = "";
                  state = FRAGMENT;
                } else if (char != EOF) {
                  if (char == "'" && isSpecial(url)) url.query += "%27";
                  else if (char == "#") url.query += "%23";
                  else
                    url.query += percentEncode(char, C0ControlPercentEncodeSet);
                }
                break;

              case FRAGMENT:
                if (char != EOF)
                  url.fragment += percentEncode(char, fragmentPercentEncodeSet);
                break;
            }

            pointer++;
          }
        };

        // `URL` constructor
        // https://url.spec.whatwg.org/#url-class
        var URLConstructor = function URL(url /* , base */) {
          var that = anInstance(this, URLConstructor, "URL");
          var base = arguments.length > 1 ? arguments[1] : undefined;
          var urlString = String(url);
          var state = setInternalState(that, { type: "URL" });
          var baseState, failure;
          if (base !== undefined) {
            if (base instanceof URLConstructor)
              baseState = getInternalURLState(base);
            else {
              failure = parseURL((baseState = {}), String(base));
              if (failure) throw TypeError(failure);
            }
          }
          failure = parseURL(state, urlString, null, baseState);
          if (failure) throw TypeError(failure);
          var searchParams = (state.searchParams = new URLSearchParams());
          var searchParamsState = getInternalSearchParamsState(searchParams);
          searchParamsState.updateSearchParams(state.query);
          searchParamsState.updateURL = function () {
            state.query = String(searchParams) || null;
          };
          if (!DESCRIPTORS) {
            that.href = serializeURL.call(that);
            that.origin = getOrigin.call(that);
            that.protocol = getProtocol.call(that);
            that.username = getUsername.call(that);
            that.password = getPassword.call(that);
            that.host = getHost.call(that);
            that.hostname = getHostname.call(that);
            that.port = getPort.call(that);
            that.pathname = getPathname.call(that);
            that.search = getSearch.call(that);
            that.searchParams = getSearchParams.call(that);
            that.hash = getHash.call(that);
          }
        };

        var URLPrototype = URLConstructor.prototype;

        var serializeURL = function () {
          var url = getInternalURLState(this);
          var scheme = url.scheme;
          var username = url.username;
          var password = url.password;
          var host = url.host;
          var port = url.port;
          var path = url.path;
          var query = url.query;
          var fragment = url.fragment;
          var output = scheme + ":";
          if (host !== null) {
            output += "//";
            if (includesCredentials(url)) {
              output += username + (password ? ":" + password : "") + "@";
            }
            output += serializeHost(host);
            if (port !== null) output += ":" + port;
          } else if (scheme == "file") output += "//";
          output += url.cannotBeABaseURL
            ? path[0]
            : path.length
            ? "/" + path.join("/")
            : "";
          if (query !== null) output += "?" + query;
          if (fragment !== null) output += "#" + fragment;
          return output;
        };

        var getOrigin = function () {
          var url = getInternalURLState(this);
          var scheme = url.scheme;
          var port = url.port;
          if (scheme == "blob")
            try {
              return new URL(scheme.path[0]).origin;
            } catch (error) {
              return "null";
            }
          if (scheme == "file" || !isSpecial(url)) return "null";
          return (
            scheme +
            "://" +
            serializeHost(url.host) +
            (port !== null ? ":" + port : "")
          );
        };

        var getProtocol = function () {
          return getInternalURLState(this).scheme + ":";
        };

        var getUsername = function () {
          return getInternalURLState(this).username;
        };

        var getPassword = function () {
          return getInternalURLState(this).password;
        };

        var getHost = function () {
          var url = getInternalURLState(this);
          var host = url.host;
          var port = url.port;
          return host === null
            ? ""
            : port === null
            ? serializeHost(host)
            : serializeHost(host) + ":" + port;
        };

        var getHostname = function () {
          var host = getInternalURLState(this).host;
          return host === null ? "" : serializeHost(host);
        };

        var getPort = function () {
          var port = getInternalURLState(this).port;
          return port === null ? "" : String(port);
        };

        var getPathname = function () {
          var url = getInternalURLState(this);
          var path = url.path;
          return url.cannotBeABaseURL
            ? path[0]
            : path.length
            ? "/" + path.join("/")
            : "";
        };

        var getSearch = function () {
          var query = getInternalURLState(this).query;
          return query ? "?" + query : "";
        };

        var getSearchParams = function () {
          return getInternalURLState(this).searchParams;
        };

        var getHash = function () {
          var fragment = getInternalURLState(this).fragment;
          return fragment ? "#" + fragment : "";
        };

        var accessorDescriptor = function (getter, setter) {
          return {
            get: getter,
            set: setter,
            configurable: true,
            enumerable: true,
          };
        };

        if (DESCRIPTORS) {
          defineProperties(URLPrototype, {
            // `URL.prototype.href` accessors pair
            // https://url.spec.whatwg.org/#dom-url-href
            href: accessorDescriptor(serializeURL, function (href) {
              var url = getInternalURLState(this);
              var urlString = String(href);
              var failure = parseURL(url, urlString);
              if (failure) throw TypeError(failure);
              getInternalSearchParamsState(url.searchParams).updateSearchParams(
                url.query
              );
            }),
            // `URL.prototype.origin` getter
            // https://url.spec.whatwg.org/#dom-url-origin
            origin: accessorDescriptor(getOrigin),
            // `URL.prototype.protocol` accessors pair
            // https://url.spec.whatwg.org/#dom-url-protocol
            protocol: accessorDescriptor(getProtocol, function (protocol) {
              var url = getInternalURLState(this);
              parseURL(url, String(protocol) + ":", SCHEME_START);
            }),
            // `URL.prototype.username` accessors pair
            // https://url.spec.whatwg.org/#dom-url-username
            username: accessorDescriptor(getUsername, function (username) {
              var url = getInternalURLState(this);
              var codePoints = arrayFrom(String(username));
              if (cannotHaveUsernamePasswordPort(url)) return;
              url.username = "";
              for (var i = 0; i < codePoints.length; i++) {
                url.username += percentEncode(
                  codePoints[i],
                  userinfoPercentEncodeSet
                );
              }
            }),
            // `URL.prototype.password` accessors pair
            // https://url.spec.whatwg.org/#dom-url-password
            password: accessorDescriptor(getPassword, function (password) {
              var url = getInternalURLState(this);
              var codePoints = arrayFrom(String(password));
              if (cannotHaveUsernamePasswordPort(url)) return;
              url.password = "";
              for (var i = 0; i < codePoints.length; i++) {
                url.password += percentEncode(
                  codePoints[i],
                  userinfoPercentEncodeSet
                );
              }
            }),
            // `URL.prototype.host` accessors pair
            // https://url.spec.whatwg.org/#dom-url-host
            host: accessorDescriptor(getHost, function (host) {
              var url = getInternalURLState(this);
              if (url.cannotBeABaseURL) return;
              parseURL(url, String(host), HOST);
            }),
            // `URL.prototype.hostname` accessors pair
            // https://url.spec.whatwg.org/#dom-url-hostname
            hostname: accessorDescriptor(getHostname, function (hostname) {
              var url = getInternalURLState(this);
              if (url.cannotBeABaseURL) return;
              parseURL(url, String(hostname), HOSTNAME);
            }),
            // `URL.prototype.port` accessors pair
            // https://url.spec.whatwg.org/#dom-url-port
            port: accessorDescriptor(getPort, function (port) {
              var url = getInternalURLState(this);
              if (cannotHaveUsernamePasswordPort(url)) return;
              port = String(port);
              if (port == "") url.port = null;
              else parseURL(url, port, PORT);
            }),
            // `URL.prototype.pathname` accessors pair
            // https://url.spec.whatwg.org/#dom-url-pathname
            pathname: accessorDescriptor(getPathname, function (pathname) {
              var url = getInternalURLState(this);
              if (url.cannotBeABaseURL) return;
              url.path = [];
              parseURL(url, pathname + "", PATH_START);
            }),
            // `URL.prototype.search` accessors pair
            // https://url.spec.whatwg.org/#dom-url-search
            search: accessorDescriptor(getSearch, function (search) {
              var url = getInternalURLState(this);
              search = String(search);
              if (search == "") {
                url.query = null;
              } else {
                if ("?" == search.charAt(0)) search = search.slice(1);
                url.query = "";
                parseURL(url, search, QUERY);
              }
              getInternalSearchParamsState(url.searchParams).updateSearchParams(
                url.query
              );
            }),
            // `URL.prototype.searchParams` getter
            // https://url.spec.whatwg.org/#dom-url-searchparams
            searchParams: accessorDescriptor(getSearchParams),
            // `URL.prototype.hash` accessors pair
            // https://url.spec.whatwg.org/#dom-url-hash
            hash: accessorDescriptor(getHash, function (hash) {
              var url = getInternalURLState(this);
              hash = String(hash);
              if (hash == "") {
                url.fragment = null;
                return;
              }
              if ("#" == hash.charAt(0)) hash = hash.slice(1);
              url.fragment = "";
              parseURL(url, hash, FRAGMENT);
            }),
          });
        }

        // `URL.prototype.toJSON` method
        // https://url.spec.whatwg.org/#dom-url-tojson
        redefine(
          URLPrototype,
          "toJSON",
          function toJSON() {
            return serializeURL.call(this);
          },
          { enumerable: true }
        );

        // `URL.prototype.toString` method
        // https://url.spec.whatwg.org/#URL-stringification-behavior
        redefine(
          URLPrototype,
          "toString",
          function toString() {
            return serializeURL.call(this);
          },
          { enumerable: true }
        );

        if (NativeURL) {
          var nativeCreateObjectURL = NativeURL.createObjectURL;
          var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
          // `URL.createObjectURL` method
          // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
          // eslint-disable-next-line no-unused-vars -- required for `.length`
          if (nativeCreateObjectURL)
            redefine(
              URLConstructor,
              "createObjectURL",
              function createObjectURL(blob) {
                return nativeCreateObjectURL.apply(NativeURL, arguments);
              }
            );
          // `URL.revokeObjectURL` method
          // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
          // eslint-disable-next-line no-unused-vars -- required for `.length`
          if (nativeRevokeObjectURL)
            redefine(
              URLConstructor,
              "revokeObjectURL",
              function revokeObjectURL(url) {
                return nativeRevokeObjectURL.apply(NativeURL, arguments);
              }
            );
        }

        setToStringTag(URLConstructor, "URL");

        $(
          { global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS },
          {
            URL: URLConstructor,
          }
        );

        /***/
      },
      /* 235 */
      /***/ function (module, exports, __webpack_require__) {
        var fails = __webpack_require__(2);
        var wellKnownSymbol = __webpack_require__(8);
        var IS_PURE = __webpack_require__(31);

        var ITERATOR = wellKnownSymbol("iterator");

        module.exports = !fails(function () {
          var url = new URL("b?a=1&b=2&c=3", "http://a");
          var searchParams = url.searchParams;
          var result = "";
          url.pathname = "c%20d";
          searchParams.forEach(function (value, key) {
            searchParams["delete"]("b");
            result += key + value;
          });
          return (
            (IS_PURE && !url.toJSON) ||
            !searchParams.sort ||
            url.href !== "http://a/c%20d?a=1&c=3" ||
            searchParams.get("c") !== "3" ||
            String(new URLSearchParams("?a=1")) !== "a=1" ||
            !searchParams[ITERATOR] ||
            // throws in Edge
            new URL("https://a@b").username !== "a" ||
            new URLSearchParams(new URLSearchParams("a=b")).get("a") !== "b" ||
            // not punycoded in Edge
            new URL("http://тест").host !== "xn--e1aybc" ||
            // not escaped in Chrome 62-
            new URL("http://a#б").hash !== "#%D0%B1" ||
            // fails in Chrome 66-
            result !== "a1c3" ||
            // throws in Safari
            new URL("http://x", undefined).host !== "x"
          );
        });

        /***/
      },
      /* 236 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        // TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
        __webpack_require__(62);
        var $ = __webpack_require__(1);
        var getBuiltIn = __webpack_require__(28);
        var USE_NATIVE_URL = __webpack_require__(235);
        var redefine = __webpack_require__(23);
        var redefineAll = __webpack_require__(65);
        var setToStringTag = __webpack_require__(36);
        var createIteratorConstructor = __webpack_require__(116);
        var InternalStateModule = __webpack_require__(24);
        var anInstance = __webpack_require__(49);
        var hasOwn = __webpack_require__(14);
        var bind = __webpack_require__(45);
        var classof = __webpack_require__(75);
        var anObject = __webpack_require__(5);
        var isObject = __webpack_require__(4);
        var create = __webpack_require__(37);
        var createPropertyDescriptor = __webpack_require__(39);
        var getIterator = __webpack_require__(421);
        var getIteratorMethod = __webpack_require__(79);
        var wellKnownSymbol = __webpack_require__(8);

        var $fetch = getBuiltIn("fetch");
        var Headers = getBuiltIn("Headers");
        var ITERATOR = wellKnownSymbol("iterator");
        var URL_SEARCH_PARAMS = "URLSearchParams";
        var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + "Iterator";
        var setInternalState = InternalStateModule.set;
        var getInternalParamsState = InternalStateModule.getterFor(
          URL_SEARCH_PARAMS
        );
        var getInternalIteratorState = InternalStateModule.getterFor(
          URL_SEARCH_PARAMS_ITERATOR
        );

        var plus = /\+/g;
        var sequences = Array(4);

        var percentSequence = function (bytes) {
          return (
            sequences[bytes - 1] ||
            (sequences[bytes - 1] = RegExp(
              "((?:%[\\da-f]{2}){" + bytes + "})",
              "gi"
            ))
          );
        };

        var percentDecode = function (sequence) {
          try {
            return decodeURIComponent(sequence);
          } catch (error) {
            return sequence;
          }
        };

        var deserialize = function (it) {
          var result = it.replace(plus, " ");
          var bytes = 4;
          try {
            return decodeURIComponent(result);
          } catch (error) {
            while (bytes) {
              result = result.replace(percentSequence(bytes--), percentDecode);
            }
            return result;
          }
        };

        var find = /[!'()~]|%20/g;

        var replace = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+",
        };

        var replacer = function (match) {
          return replace[match];
        };

        var serialize = function (it) {
          return encodeURIComponent(it).replace(find, replacer);
        };

        var parseSearchParams = function (result, query) {
          if (query) {
            var attributes = query.split("&");
            var index = 0;
            var attribute, entry;
            while (index < attributes.length) {
              attribute = attributes[index++];
              if (attribute.length) {
                entry = attribute.split("=");
                result.push({
                  key: deserialize(entry.shift()),
                  value: deserialize(entry.join("=")),
                });
              }
            }
          }
        };

        var updateSearchParams = function (query) {
          this.entries.length = 0;
          parseSearchParams(this.entries, query);
        };

        var validateArgumentsLength = function (passed, required) {
          if (passed < required) throw TypeError("Not enough arguments");
        };

        var URLSearchParamsIterator = createIteratorConstructor(
          function Iterator(params, kind) {
            setInternalState(this, {
              type: URL_SEARCH_PARAMS_ITERATOR,
              iterator: getIterator(getInternalParamsState(params).entries),
              kind: kind,
            });
          },
          "Iterator",
          function next() {
            var state = getInternalIteratorState(this);
            var kind = state.kind;
            var step = state.iterator.next();
            var entry = step.value;
            if (!step.done) {
              step.value =
                kind === "keys"
                  ? entry.key
                  : kind === "values"
                  ? entry.value
                  : [entry.key, entry.value];
            }
            return step;
          }
        );

        // `URLSearchParams` constructor
        // https://url.spec.whatwg.org/#interface-urlsearchparams
        var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
          anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
          var init = arguments.length > 0 ? arguments[0] : undefined;
          var that = this;
          var entries = [];
          var iteratorMethod,
            iterator,
            next,
            step,
            entryIterator,
            entryNext,
            first,
            second,
            key;

          setInternalState(that, {
            type: URL_SEARCH_PARAMS,
            entries: entries,
            updateURL: function () {
              /* empty */
            },
            updateSearchParams: updateSearchParams,
          });

          if (init !== undefined) {
            if (isObject(init)) {
              iteratorMethod = getIteratorMethod(init);
              if (typeof iteratorMethod === "function") {
                iterator = iteratorMethod.call(init);
                next = iterator.next;
                while (!(step = next.call(iterator)).done) {
                  entryIterator = getIterator(anObject(step.value));
                  entryNext = entryIterator.next;
                  if (
                    (first = entryNext.call(entryIterator)).done ||
                    (second = entryNext.call(entryIterator)).done ||
                    !entryNext.call(entryIterator).done
                  )
                    throw TypeError("Expected sequence with length 2");
                  entries.push({
                    key: first.value + "",
                    value: second.value + "",
                  });
                }
              } else
                for (key in init)
                  if (hasOwn(init, key))
                    entries.push({ key: key, value: init[key] + "" });
            } else {
              parseSearchParams(
                entries,
                typeof init === "string"
                  ? init.charAt(0) === "?"
                    ? init.slice(1)
                    : init
                  : init + ""
              );
            }
          }
        };

        var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

        redefineAll(
          URLSearchParamsPrototype,
          {
            // `URLSearchParams.prototype.append` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-append
            append: function append(name, value) {
              validateArgumentsLength(arguments.length, 2);
              var state = getInternalParamsState(this);
              state.entries.push({ key: name + "", value: value + "" });
              state.updateURL();
            },
            // `URLSearchParams.prototype.delete` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
            delete: function (name) {
              validateArgumentsLength(arguments.length, 1);
              var state = getInternalParamsState(this);
              var entries = state.entries;
              var key = name + "";
              var index = 0;
              while (index < entries.length) {
                if (entries[index].key === key) entries.splice(index, 1);
                else index++;
              }
              state.updateURL();
            },
            // `URLSearchParams.prototype.get` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-get
            get: function get(name) {
              validateArgumentsLength(arguments.length, 1);
              var entries = getInternalParamsState(this).entries;
              var key = name + "";
              var index = 0;
              for (; index < entries.length; index++) {
                if (entries[index].key === key) return entries[index].value;
              }
              return null;
            },
            // `URLSearchParams.prototype.getAll` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
            getAll: function getAll(name) {
              validateArgumentsLength(arguments.length, 1);
              var entries = getInternalParamsState(this).entries;
              var key = name + "";
              var result = [];
              var index = 0;
              for (; index < entries.length; index++) {
                if (entries[index].key === key)
                  result.push(entries[index].value);
              }
              return result;
            },
            // `URLSearchParams.prototype.has` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-has
            has: function has(name) {
              validateArgumentsLength(arguments.length, 1);
              var entries = getInternalParamsState(this).entries;
              var key = name + "";
              var index = 0;
              while (index < entries.length) {
                if (entries[index++].key === key) return true;
              }
              return false;
            },
            // `URLSearchParams.prototype.set` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-set
            set: function set(name, value) {
              validateArgumentsLength(arguments.length, 1);
              var state = getInternalParamsState(this);
              var entries = state.entries;
              var found = false;
              var key = name + "";
              var val = value + "";
              var index = 0;
              var entry;
              for (; index < entries.length; index++) {
                entry = entries[index];
                if (entry.key === key) {
                  if (found) entries.splice(index--, 1);
                  else {
                    found = true;
                    entry.value = val;
                  }
                }
              }
              if (!found) entries.push({ key: key, value: val });
              state.updateURL();
            },
            // `URLSearchParams.prototype.sort` method
            // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
            sort: function sort() {
              var state = getInternalParamsState(this);
              var entries = state.entries;
              // Array#sort is not stable in some engines
              var slice = entries.slice();
              var entry, entriesIndex, sliceIndex;
              entries.length = 0;
              for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
                entry = slice[sliceIndex];
                for (
                  entriesIndex = 0;
                  entriesIndex < sliceIndex;
                  entriesIndex++
                ) {
                  if (entries[entriesIndex].key > entry.key) {
                    entries.splice(entriesIndex, 0, entry);
                    break;
                  }
                }
                if (entriesIndex === sliceIndex) entries.push(entry);
              }
              state.updateURL();
            },
            // `URLSearchParams.prototype.forEach` method
            forEach: function forEach(callback /* , thisArg */) {
              var entries = getInternalParamsState(this).entries;
              var boundFunction = bind(
                callback,
                arguments.length > 1 ? arguments[1] : undefined,
                3
              );
              var index = 0;
              var entry;
              while (index < entries.length) {
                entry = entries[index++];
                boundFunction(entry.value, entry.key, this);
              }
            },
            // `URLSearchParams.prototype.keys` method
            keys: function keys() {
              return new URLSearchParamsIterator(this, "keys");
            },
            // `URLSearchParams.prototype.values` method
            values: function values() {
              return new URLSearchParamsIterator(this, "values");
            },
            // `URLSearchParams.prototype.entries` method
            entries: function entries() {
              return new URLSearchParamsIterator(this, "entries");
            },
          },
          { enumerable: true }
        );

        // `URLSearchParams.prototype[@@iterator]` method
        redefine(
          URLSearchParamsPrototype,
          ITERATOR,
          URLSearchParamsPrototype.entries
        );

        // `URLSearchParams.prototype.toString` method
        // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
        redefine(
          URLSearchParamsPrototype,
          "toString",
          function toString() {
            var entries = getInternalParamsState(this).entries;
            var result = [];
            var index = 0;
            var entry;
            while (index < entries.length) {
              entry = entries[index++];
              result.push(serialize(entry.key) + "=" + serialize(entry.value));
            }
            return result.join("&");
          },
          { enumerable: true }
        );

        setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

        $(
          { global: true, forced: !USE_NATIVE_URL },
          {
            URLSearchParams: URLSearchParamsConstructor,
          }
        );

        // Wrap `fetch` for correct work with polyfilled `URLSearchParams`
        // https://github.com/zloirock/core-js/issues/674
        if (
          !USE_NATIVE_URL &&
          typeof $fetch == "function" &&
          typeof Headers == "function"
        ) {
          $(
            { global: true, enumerable: true, forced: true },
            {
              fetch: function fetch(input /* , init */) {
                var args = [input];
                var init, body, headers;
                if (arguments.length > 1) {
                  init = arguments[1];
                  if (isObject(init)) {
                    body = init.body;
                    if (classof(body) === URL_SEARCH_PARAMS) {
                      headers = init.headers
                        ? new Headers(init.headers)
                        : new Headers();
                      if (!headers.has("content-type")) {
                        headers.set(
                          "content-type",
                          "application/x-www-form-urlencoded;charset=UTF-8"
                        );
                      }
                      init = create(init, {
                        body: createPropertyDescriptor(0, String(body)),
                        headers: createPropertyDescriptor(0, headers),
                      });
                    }
                  }
                  args.push(init);
                }
                return $fetch.apply(this, args);
              },
            }
          );
        }

        module.exports = {
          URLSearchParams: URLSearchParamsConstructor,
          getState: getInternalParamsState,
        };

        /***/
      },
      /* 237 */
      /***/ function (module, exports) {
        /**
         * Checks if `value` is the
         * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
         * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is an object, else `false`.
         * @example
         *
         * _.isObject({});
         * // => true
         *
         * _.isObject([1, 2, 3]);
         * // => true
         *
         * _.isObject(_.noop);
         * // => true
         *
         * _.isObject(null);
         * // => false
         */
        function isObject(value) {
          var type = typeof value;
          return value != null && (type == "object" || type == "function");
        }

        module.exports = isObject;

        /***/
      },
      /* 238 */
      /***/ function (module, exports, __webpack_require__) {
        var freeGlobal = __webpack_require__(432);

        /** Detect free variable `self`. */
        var freeSelf =
          typeof self == "object" && self && self.Object === Object && self;

        /** Used as a reference to the global object. */
        var root = freeGlobal || freeSelf || Function("return this")();

        module.exports = root;

        /***/
      },
      /* 239 */
      /***/ function (module, exports, __webpack_require__) {
        var root = __webpack_require__(238);

        /** Built-in value references. */
        var Symbol = root.Symbol;

        module.exports = Symbol;

        /***/
      },
      /* 240 */
      /***/ function (module, exports) {
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        module.exports = _classCallCheck;

        /***/
      },
      /* 241 */
      /***/ function (module, exports) {
        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        module.exports = _createClass;

        /***/
      },
      /* 242 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          /**
           * A collection of shims that provide minimal functionality of the ES6 collections.
           *
           * These implementations are not meant to be used outside of the ResizeObserver
           * modules as they cover only a limited range of use cases.
           */
          /* eslint-disable require-jsdoc, valid-jsdoc */
          var MapShim = (function () {
            if (typeof Map !== "undefined") {
              return Map;
            }
            /**
             * Returns index in provided array that matches the specified key.
             *
             * @param {Array<Array>} arr
             * @param {*} key
             * @returns {number}
             */
            function getIndex(arr, key) {
              var result = -1;
              arr.some(function (entry, index) {
                if (entry[0] === key) {
                  result = index;
                  return true;
                }
                return false;
              });
              return result;
            }
            return /** @class */ (function () {
              function class_1() {
                this.__entries__ = [];
              }
              Object.defineProperty(class_1.prototype, "size", {
                /**
                 * @returns {boolean}
                 */
                get: function () {
                  return this.__entries__.length;
                },
                enumerable: true,
                configurable: true,
              });
              /**
               * @param {*} key
               * @returns {*}
               */
              class_1.prototype.get = function (key) {
                var index = getIndex(this.__entries__, key);
                var entry = this.__entries__[index];
                return entry && entry[1];
              };
              /**
               * @param {*} key
               * @param {*} value
               * @returns {void}
               */
              class_1.prototype.set = function (key, value) {
                var index = getIndex(this.__entries__, key);
                if (~index) {
                  this.__entries__[index][1] = value;
                } else {
                  this.__entries__.push([key, value]);
                }
              };
              /**
               * @param {*} key
               * @returns {void}
               */
              class_1.prototype.delete = function (key) {
                var entries = this.__entries__;
                var index = getIndex(entries, key);
                if (~index) {
                  entries.splice(index, 1);
                }
              };
              /**
               * @param {*} key
               * @returns {void}
               */
              class_1.prototype.has = function (key) {
                return !!~getIndex(this.__entries__, key);
              };
              /**
               * @returns {void}
               */
              class_1.prototype.clear = function () {
                this.__entries__.splice(0);
              };
              /**
               * @param {Function} callback
               * @param {*} [ctx=null]
               * @returns {void}
               */
              class_1.prototype.forEach = function (callback, ctx) {
                if (ctx === void 0) {
                  ctx = null;
                }
                for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
                  var entry = _a[_i];
                  callback.call(ctx, entry[1], entry[0]);
                }
              };
              return class_1;
            })();
          })();

          /**
           * Detects whether window and document objects are available in current environment.
           */
          var isBrowser =
            typeof window !== "undefined" &&
            typeof document !== "undefined" &&
            window.document === document;

          // Returns global object of a current environment.
          var global$1 = (function () {
            if (typeof global !== "undefined" && global.Math === Math) {
              return global;
            }
            if (typeof self !== "undefined" && self.Math === Math) {
              return self;
            }
            if (typeof window !== "undefined" && window.Math === Math) {
              return window;
            }
            // eslint-disable-next-line no-new-func
            return Function("return this")();
          })();

          /**
           * A shim for the requestAnimationFrame which falls back to the setTimeout if
           * first one is not supported.
           *
           * @returns {number} Requests' identifier.
           */
          var requestAnimationFrame$1 = (function () {
            if (typeof requestAnimationFrame === "function") {
              // It's required to use a bounded function because IE sometimes throws
              // an "Invalid calling object" error if rAF is invoked without the global
              // object on the left hand side.
              return requestAnimationFrame.bind(global$1);
            }
            return function (callback) {
              return setTimeout(function () {
                return callback(Date.now());
              }, 1000 / 60);
            };
          })();

          // Defines minimum timeout before adding a trailing call.
          var trailingTimeout = 2;
          /**
           * Creates a wrapper function which ensures that provided callback will be
           * invoked only once during the specified delay period.
           *
           * @param {Function} callback - Function to be invoked after the delay period.
           * @param {number} delay - Delay after which to invoke callback.
           * @returns {Function}
           */
          function throttle(callback, delay) {
            var leadingCall = false,
              trailingCall = false,
              lastCallTime = 0;
            /**
             * Invokes the original callback function and schedules new invocation if
             * the "proxy" was called during current request.
             *
             * @returns {void}
             */
            function resolvePending() {
              if (leadingCall) {
                leadingCall = false;
                callback();
              }
              if (trailingCall) {
                proxy();
              }
            }
            /**
             * Callback invoked after the specified delay. It will further postpone
             * invocation of the original function delegating it to the
             * requestAnimationFrame.
             *
             * @returns {void}
             */
            function timeoutCallback() {
              requestAnimationFrame$1(resolvePending);
            }
            /**
             * Schedules invocation of the original function.
             *
             * @returns {void}
             */
            function proxy() {
              var timeStamp = Date.now();
              if (leadingCall) {
                // Reject immediately following calls.
                if (timeStamp - lastCallTime < trailingTimeout) {
                  return;
                }
                // Schedule new call to be in invoked when the pending one is resolved.
                // This is important for "transitions" which never actually start
                // immediately so there is a chance that we might miss one if change
                // happens amids the pending invocation.
                trailingCall = true;
              } else {
                leadingCall = true;
                trailingCall = false;
                setTimeout(timeoutCallback, delay);
              }
              lastCallTime = timeStamp;
            }
            return proxy;
          }

          // Minimum delay before invoking the update of observers.
          var REFRESH_DELAY = 20;
          // A list of substrings of CSS properties used to find transition events that
          // might affect dimensions of observed elements.
          var transitionKeys = [
            "top",
            "right",
            "bottom",
            "left",
            "width",
            "height",
            "size",
            "weight",
          ];
          // Check if MutationObserver is available.
          var mutationObserverSupported =
            typeof MutationObserver !== "undefined";
          /**
           * Singleton controller class which handles updates of ResizeObserver instances.
           */
          var ResizeObserverController = /** @class */ (function () {
            /**
             * Creates a new instance of ResizeObserverController.
             *
             * @private
             */
            function ResizeObserverController() {
              /**
               * Indicates whether DOM listeners have been added.
               *
               * @private {boolean}
               */
              this.connected_ = false;
              /**
               * Tells that controller has subscribed for Mutation Events.
               *
               * @private {boolean}
               */
              this.mutationEventsAdded_ = false;
              /**
               * Keeps reference to the instance of MutationObserver.
               *
               * @private {MutationObserver}
               */
              this.mutationsObserver_ = null;
              /**
               * A list of connected observers.
               *
               * @private {Array<ResizeObserverSPI>}
               */
              this.observers_ = [];
              this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
              this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
            }
            /**
             * Adds observer to observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be added.
             * @returns {void}
             */
            ResizeObserverController.prototype.addObserver = function (
              observer
            ) {
              if (!~this.observers_.indexOf(observer)) {
                this.observers_.push(observer);
              }
              // Add listeners if they haven't been added yet.
              if (!this.connected_) {
                this.connect_();
              }
            };
            /**
             * Removes observer from observers list.
             *
             * @param {ResizeObserverSPI} observer - Observer to be removed.
             * @returns {void}
             */
            ResizeObserverController.prototype.removeObserver = function (
              observer
            ) {
              var observers = this.observers_;
              var index = observers.indexOf(observer);
              // Remove observer if it's present in registry.
              if (~index) {
                observers.splice(index, 1);
              }
              // Remove listeners if controller has no connected observers.
              if (!observers.length && this.connected_) {
                this.disconnect_();
              }
            };
            /**
             * Invokes the update of observers. It will continue running updates insofar
             * it detects changes.
             *
             * @returns {void}
             */
            ResizeObserverController.prototype.refresh = function () {
              var changesDetected = this.updateObservers_();
              // Continue running updates if changes have been detected as there might
              // be future ones caused by CSS transitions.
              if (changesDetected) {
                this.refresh();
              }
            };
            /**
             * Updates every observer from observers list and notifies them of queued
             * entries.
             *
             * @private
             * @returns {boolean} Returns "true" if any observer has detected changes in
             *      dimensions of it's elements.
             */
            ResizeObserverController.prototype.updateObservers_ = function () {
              // Collect observers that have active observations.
              var activeObservers = this.observers_.filter(function (observer) {
                return observer.gatherActive(), observer.hasActive();
              });
              // Deliver notifications in a separate cycle in order to avoid any
              // collisions between observers, e.g. when multiple instances of
              // ResizeObserver are tracking the same element and the callback of one
              // of them changes content dimensions of the observed target. Sometimes
              // this may result in notifications being blocked for the rest of observers.
              activeObservers.forEach(function (observer) {
                return observer.broadcastActive();
              });
              return activeObservers.length > 0;
            };
            /**
             * Initializes DOM listeners.
             *
             * @private
             * @returns {void}
             */
            ResizeObserverController.prototype.connect_ = function () {
              // Do nothing if running in a non-browser environment or if listeners
              // have been already added.
              if (!isBrowser || this.connected_) {
                return;
              }
              // Subscription to the "Transitionend" event is used as a workaround for
              // delayed transitions. This way it's possible to capture at least the
              // final state of an element.
              document.addEventListener("transitionend", this.onTransitionEnd_);
              window.addEventListener("resize", this.refresh);
              if (mutationObserverSupported) {
                this.mutationsObserver_ = new MutationObserver(this.refresh);
                this.mutationsObserver_.observe(document, {
                  attributes: true,
                  childList: true,
                  characterData: true,
                  subtree: true,
                });
              } else {
                document.addEventListener("DOMSubtreeModified", this.refresh);
                this.mutationEventsAdded_ = true;
              }
              this.connected_ = true;
            };
            /**
             * Removes DOM listeners.
             *
             * @private
             * @returns {void}
             */
            ResizeObserverController.prototype.disconnect_ = function () {
              // Do nothing if running in a non-browser environment or if listeners
              // have been already removed.
              if (!isBrowser || !this.connected_) {
                return;
              }
              document.removeEventListener(
                "transitionend",
                this.onTransitionEnd_
              );
              window.removeEventListener("resize", this.refresh);
              if (this.mutationsObserver_) {
                this.mutationsObserver_.disconnect();
              }
              if (this.mutationEventsAdded_) {
                document.removeEventListener(
                  "DOMSubtreeModified",
                  this.refresh
                );
              }
              this.mutationsObserver_ = null;
              this.mutationEventsAdded_ = false;
              this.connected_ = false;
            };
            /**
             * "Transitionend" event handler.
             *
             * @private
             * @param {TransitionEvent} event
             * @returns {void}
             */
            ResizeObserverController.prototype.onTransitionEnd_ = function (
              _a
            ) {
              var _b = _a.propertyName,
                propertyName = _b === void 0 ? "" : _b;
              // Detect whether transition may affect dimensions of an element.
              var isReflowProperty = transitionKeys.some(function (key) {
                return !!~propertyName.indexOf(key);
              });
              if (isReflowProperty) {
                this.refresh();
              }
            };
            /**
             * Returns instance of the ResizeObserverController.
             *
             * @returns {ResizeObserverController}
             */
            ResizeObserverController.getInstance = function () {
              if (!this.instance_) {
                this.instance_ = new ResizeObserverController();
              }
              return this.instance_;
            };
            /**
             * Holds reference to the controller's instance.
             *
             * @private {ResizeObserverController}
             */
            ResizeObserverController.instance_ = null;
            return ResizeObserverController;
          })();

          /**
           * Defines non-writable/enumerable properties of the provided target object.
           *
           * @param {Object} target - Object for which to define properties.
           * @param {Object} props - Properties to be defined.
           * @returns {Object} Target object.
           */
          var defineConfigurable = function (target, props) {
            for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {
              var key = _a[_i];
              Object.defineProperty(target, key, {
                value: props[key],
                enumerable: false,
                writable: false,
                configurable: true,
              });
            }
            return target;
          };

          /**
           * Returns the global object associated with provided element.
           *
           * @param {Object} target
           * @returns {Object}
           */
          var getWindowOf = function (target) {
            // Assume that the element is an instance of Node, which means that it
            // has the "ownerDocument" property from which we can retrieve a
            // corresponding global object.
            var ownerGlobal =
              target &&
              target.ownerDocument &&
              target.ownerDocument.defaultView;
            // Return the local global object if it's not possible extract one from
            // provided element.
            return ownerGlobal || global$1;
          };

          // Placeholder of an empty content rectangle.
          var emptyRect = createRectInit(0, 0, 0, 0);
          /**
           * Converts provided string to a number.
           *
           * @param {number|string} value
           * @returns {number}
           */
          function toFloat(value) {
            return parseFloat(value) || 0;
          }
          /**
           * Extracts borders size from provided styles.
           *
           * @param {CSSStyleDeclaration} styles
           * @param {...string} positions - Borders positions (top, right, ...)
           * @returns {number}
           */
          function getBordersSize(styles) {
            var positions = [];
            for (var _i = 1; _i < arguments.length; _i++) {
              positions[_i - 1] = arguments[_i];
            }
            return positions.reduce(function (size, position) {
              var value = styles["border-" + position + "-width"];
              return size + toFloat(value);
            }, 0);
          }
          /**
           * Extracts paddings sizes from provided styles.
           *
           * @param {CSSStyleDeclaration} styles
           * @returns {Object} Paddings box.
           */
          function getPaddings(styles) {
            var positions = ["top", "right", "bottom", "left"];
            var paddings = {};
            for (
              var _i = 0, positions_1 = positions;
              _i < positions_1.length;
              _i++
            ) {
              var position = positions_1[_i];
              var value = styles["padding-" + position];
              paddings[position] = toFloat(value);
            }
            return paddings;
          }
          /**
           * Calculates content rectangle of provided SVG element.
           *
           * @param {SVGGraphicsElement} target - Element content rectangle of which needs
           *      to be calculated.
           * @returns {DOMRectInit}
           */
          function getSVGContentRect(target) {
            var bbox = target.getBBox();
            return createRectInit(0, 0, bbox.width, bbox.height);
          }
          /**
           * Calculates content rectangle of provided HTMLElement.
           *
           * @param {HTMLElement} target - Element for which to calculate the content rectangle.
           * @returns {DOMRectInit}
           */
          function getHTMLElementContentRect(target) {
            // Client width & height properties can't be
            // used exclusively as they provide rounded values.
            var clientWidth = target.clientWidth,
              clientHeight = target.clientHeight;
            // By this condition we can catch all non-replaced inline, hidden and
            // detached elements. Though elements with width & height properties less
            // than 0.5 will be discarded as well.
            //
            // Without it we would need to implement separate methods for each of
            // those cases and it's not possible to perform a precise and performance
            // effective test for hidden elements. E.g. even jQuery's ':visible' filter
            // gives wrong results for elements with width & height less than 0.5.
            if (!clientWidth && !clientHeight) {
              return emptyRect;
            }
            var styles = getWindowOf(target).getComputedStyle(target);
            var paddings = getPaddings(styles);
            var horizPad = paddings.left + paddings.right;
            var vertPad = paddings.top + paddings.bottom;
            // Computed styles of width & height are being used because they are the
            // only dimensions available to JS that contain non-rounded values. It could
            // be possible to utilize the getBoundingClientRect if only it's data wasn't
            // affected by CSS transformations let alone paddings, borders and scroll bars.
            var width = toFloat(styles.width),
              height = toFloat(styles.height);
            // Width & height include paddings and borders when the 'border-box' box
            // model is applied (except for IE).
            if (styles.boxSizing === "border-box") {
              // Following conditions are required to handle Internet Explorer which
              // doesn't include paddings and borders to computed CSS dimensions.
              //
              // We can say that if CSS dimensions + paddings are equal to the "client"
              // properties then it's either IE, and thus we don't need to subtract
              // anything, or an element merely doesn't have paddings/borders styles.
              if (Math.round(width + horizPad) !== clientWidth) {
                width -= getBordersSize(styles, "left", "right") + horizPad;
              }
              if (Math.round(height + vertPad) !== clientHeight) {
                height -= getBordersSize(styles, "top", "bottom") + vertPad;
              }
            }
            // Following steps can't be applied to the document's root element as its
            // client[Width/Height] properties represent viewport area of the window.
            // Besides, it's as well not necessary as the <html> itself neither has
            // rendered scroll bars nor it can be clipped.
            if (!isDocumentElement(target)) {
              // In some browsers (only in Firefox, actually) CSS width & height
              // include scroll bars size which can be removed at this step as scroll
              // bars are the only difference between rounded dimensions + paddings
              // and "client" properties, though that is not always true in Chrome.
              var vertScrollbar = Math.round(width + horizPad) - clientWidth;
              var horizScrollbar = Math.round(height + vertPad) - clientHeight;
              // Chrome has a rather weird rounding of "client" properties.
              // E.g. for an element with content width of 314.2px it sometimes gives
              // the client width of 315px and for the width of 314.7px it may give
              // 314px. And it doesn't happen all the time. So just ignore this delta
              // as a non-relevant.
              if (Math.abs(vertScrollbar) !== 1) {
                width -= vertScrollbar;
              }
              if (Math.abs(horizScrollbar) !== 1) {
                height -= horizScrollbar;
              }
            }
            return createRectInit(paddings.left, paddings.top, width, height);
          }
          /**
           * Checks whether provided element is an instance of the SVGGraphicsElement.
           *
           * @param {Element} target - Element to be checked.
           * @returns {boolean}
           */
          var isSVGGraphicsElement = (function () {
            // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
            // interface.
            if (typeof SVGGraphicsElement !== "undefined") {
              return function (target) {
                return target instanceof getWindowOf(target).SVGGraphicsElement;
              };
            }
            // If it's so, then check that element is at least an instance of the
            // SVGElement and that it has the "getBBox" method.
            // eslint-disable-next-line no-extra-parens
            return function (target) {
              return (
                target instanceof getWindowOf(target).SVGElement &&
                typeof target.getBBox === "function"
              );
            };
          })();
          /**
           * Checks whether provided element is a document element (<html>).
           *
           * @param {Element} target - Element to be checked.
           * @returns {boolean}
           */
          function isDocumentElement(target) {
            return target === getWindowOf(target).document.documentElement;
          }
          /**
           * Calculates an appropriate content rectangle for provided html or svg element.
           *
           * @param {Element} target - Element content rectangle of which needs to be calculated.
           * @returns {DOMRectInit}
           */
          function getContentRect(target) {
            if (!isBrowser) {
              return emptyRect;
            }
            if (isSVGGraphicsElement(target)) {
              return getSVGContentRect(target);
            }
            return getHTMLElementContentRect(target);
          }
          /**
           * Creates rectangle with an interface of the DOMRectReadOnly.
           * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
           *
           * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
           * @returns {DOMRectReadOnly}
           */
          function createReadOnlyRect(_a) {
            var x = _a.x,
              y = _a.y,
              width = _a.width,
              height = _a.height;
            // If DOMRectReadOnly is available use it as a prototype for the rectangle.
            var Constr =
              typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
            var rect = Object.create(Constr.prototype);
            // Rectangle's properties are not writable and non-enumerable.
            defineConfigurable(rect, {
              x: x,
              y: y,
              width: width,
              height: height,
              top: y,
              right: x + width,
              bottom: height + y,
              left: x,
            });
            return rect;
          }
          /**
           * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
           * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
           *
           * @param {number} x - X coordinate.
           * @param {number} y - Y coordinate.
           * @param {number} width - Rectangle's width.
           * @param {number} height - Rectangle's height.
           * @returns {DOMRectInit}
           */
          function createRectInit(x, y, width, height) {
            return { x: x, y: y, width: width, height: height };
          }

          /**
           * Class that is responsible for computations of the content rectangle of
           * provided DOM element and for keeping track of it's changes.
           */
          var ResizeObservation = /** @class */ (function () {
            /**
             * Creates an instance of ResizeObservation.
             *
             * @param {Element} target - Element to be observed.
             */
            function ResizeObservation(target) {
              /**
               * Broadcasted width of content rectangle.
               *
               * @type {number}
               */
              this.broadcastWidth = 0;
              /**
               * Broadcasted height of content rectangle.
               *
               * @type {number}
               */
              this.broadcastHeight = 0;
              /**
               * Reference to the last observed content rectangle.
               *
               * @private {DOMRectInit}
               */
              this.contentRect_ = createRectInit(0, 0, 0, 0);
              this.target = target;
            }
            /**
             * Updates content rectangle and tells whether it's width or height properties
             * have changed since the last broadcast.
             *
             * @returns {boolean}
             */
            ResizeObservation.prototype.isActive = function () {
              var rect = getContentRect(this.target);
              this.contentRect_ = rect;
              return (
                rect.width !== this.broadcastWidth ||
                rect.height !== this.broadcastHeight
              );
            };
            /**
             * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
             * from the corresponding properties of the last observed content rectangle.
             *
             * @returns {DOMRectInit} Last observed content rectangle.
             */
            ResizeObservation.prototype.broadcastRect = function () {
              var rect = this.contentRect_;
              this.broadcastWidth = rect.width;
              this.broadcastHeight = rect.height;
              return rect;
            };
            return ResizeObservation;
          })();

          var ResizeObserverEntry = /** @class */ (function () {
            /**
             * Creates an instance of ResizeObserverEntry.
             *
             * @param {Element} target - Element that is being observed.
             * @param {DOMRectInit} rectInit - Data of the element's content rectangle.
             */
            function ResizeObserverEntry(target, rectInit) {
              var contentRect = createReadOnlyRect(rectInit);
              // According to the specification following properties are not writable
              // and are also not enumerable in the native implementation.
              //
              // Property accessors are not being used as they'd require to define a
              // private WeakMap storage which may cause memory leaks in browsers that
              // don't support this type of collections.
              defineConfigurable(this, {
                target: target,
                contentRect: contentRect,
              });
            }
            return ResizeObserverEntry;
          })();

          var ResizeObserverSPI = /** @class */ (function () {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback function that is invoked
             *      when one of the observed elements changes it's content dimensions.
             * @param {ResizeObserverController} controller - Controller instance which
             *      is responsible for the updates of observer.
             * @param {ResizeObserver} callbackCtx - Reference to the public
             *      ResizeObserver instance which will be passed to callback function.
             */
            function ResizeObserverSPI(callback, controller, callbackCtx) {
              /**
               * Collection of resize observations that have detected changes in dimensions
               * of elements.
               *
               * @private {Array<ResizeObservation>}
               */
              this.activeObservations_ = [];
              /**
               * Registry of the ResizeObservation instances.
               *
               * @private {Map<Element, ResizeObservation>}
               */
              this.observations_ = new MapShim();
              if (typeof callback !== "function") {
                throw new TypeError(
                  "The callback provided as parameter 1 is not a function."
                );
              }
              this.callback_ = callback;
              this.controller_ = controller;
              this.callbackCtx_ = callbackCtx;
            }
            /**
             * Starts observing provided element.
             *
             * @param {Element} target - Element to be observed.
             * @returns {void}
             */
            ResizeObserverSPI.prototype.observe = function (target) {
              if (!arguments.length) {
                throw new TypeError("1 argument required, but only 0 present.");
              }
              // Do nothing if current environment doesn't have the Element interface.
              if (
                typeof Element === "undefined" ||
                !(Element instanceof Object)
              ) {
                return;
              }
              if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
              }
              var observations = this.observations_;
              // Do nothing if element is already being observed.
              if (observations.has(target)) {
                return;
              }
              observations.set(target, new ResizeObservation(target));
              this.controller_.addObserver(this);
              // Force the update of observations.
              this.controller_.refresh();
            };
            /**
             * Stops observing provided element.
             *
             * @param {Element} target - Element to stop observing.
             * @returns {void}
             */
            ResizeObserverSPI.prototype.unobserve = function (target) {
              if (!arguments.length) {
                throw new TypeError("1 argument required, but only 0 present.");
              }
              // Do nothing if current environment doesn't have the Element interface.
              if (
                typeof Element === "undefined" ||
                !(Element instanceof Object)
              ) {
                return;
              }
              if (!(target instanceof getWindowOf(target).Element)) {
                throw new TypeError('parameter 1 is not of type "Element".');
              }
              var observations = this.observations_;
              // Do nothing if element is not being observed.
              if (!observations.has(target)) {
                return;
              }
              observations.delete(target);
              if (!observations.size) {
                this.controller_.removeObserver(this);
              }
            };
            /**
             * Stops observing all elements.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.disconnect = function () {
              this.clearActive();
              this.observations_.clear();
              this.controller_.removeObserver(this);
            };
            /**
             * Collects observation instances the associated element of which has changed
             * it's content rectangle.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.gatherActive = function () {
              var _this = this;
              this.clearActive();
              this.observations_.forEach(function (observation) {
                if (observation.isActive()) {
                  _this.activeObservations_.push(observation);
                }
              });
            };
            /**
             * Invokes initial callback function with a list of ResizeObserverEntry
             * instances collected from active resize observations.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.broadcastActive = function () {
              // Do nothing if observer doesn't have active observations.
              if (!this.hasActive()) {
                return;
              }
              var ctx = this.callbackCtx_;
              // Create ResizeObserverEntry instance for every active observation.
              var entries = this.activeObservations_.map(function (
                observation
              ) {
                return new ResizeObserverEntry(
                  observation.target,
                  observation.broadcastRect()
                );
              });
              this.callback_.call(ctx, entries, ctx);
              this.clearActive();
            };
            /**
             * Clears the collection of active observations.
             *
             * @returns {void}
             */
            ResizeObserverSPI.prototype.clearActive = function () {
              this.activeObservations_.splice(0);
            };
            /**
             * Tells whether observer has active observations.
             *
             * @returns {boolean}
             */
            ResizeObserverSPI.prototype.hasActive = function () {
              return this.activeObservations_.length > 0;
            };
            return ResizeObserverSPI;
          })();

          // Registry of internal observers. If WeakMap is not available use current shim
          // for the Map collection as it has all required methods and because WeakMap
          // can't be fully polyfilled anyway.
          var observers =
            typeof WeakMap !== "undefined" ? new WeakMap() : new MapShim();
          /**
           * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
           * exposing only those methods and properties that are defined in the spec.
           */
          var ResizeObserver = /** @class */ (function () {
            /**
             * Creates a new instance of ResizeObserver.
             *
             * @param {ResizeObserverCallback} callback - Callback that is invoked when
             *      dimensions of the observed elements change.
             */
            function ResizeObserver(callback) {
              if (!(this instanceof ResizeObserver)) {
                throw new TypeError("Cannot call a class as a function.");
              }
              if (!arguments.length) {
                throw new TypeError("1 argument required, but only 0 present.");
              }
              var controller = ResizeObserverController.getInstance();
              var observer = new ResizeObserverSPI(callback, controller, this);
              observers.set(this, observer);
            }
            return ResizeObserver;
          })();
          // Expose public methods of ResizeObserver.
          ["observe", "unobserve", "disconnect"].forEach(function (method) {
            ResizeObserver.prototype[method] = function () {
              var _a;
              return (_a = observers.get(this))[method].apply(_a, arguments);
            };
          });

          var index = (function () {
            // Export existing implementation if available.
            if (typeof global$1.ResizeObserver !== "undefined") {
              return global$1.ResizeObserver;
            }
            return ResizeObserver;
          })();

          /* harmony default export */ __webpack_exports__["a"] = index;

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 243 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(237),
          now = __webpack_require__(431),
          toNumber = __webpack_require__(433);

        /** Error message constants. */
        var FUNC_ERROR_TEXT = "Expected a function";

        /* Built-in method references for those with the same name as other `lodash` methods. */
        var nativeMax = Math.max,
          nativeMin = Math.min;

        /**
         * Creates a debounced function that delays invoking `func` until after `wait`
         * milliseconds have elapsed since the last time the debounced function was
         * invoked. The debounced function comes with a `cancel` method to cancel
         * delayed `func` invocations and a `flush` method to immediately invoke them.
         * Provide `options` to indicate whether `func` should be invoked on the
         * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
         * with the last arguments provided to the debounced function. Subsequent
         * calls to the debounced function return the result of the last `func`
         * invocation.
         *
         * **Note:** If `leading` and `trailing` options are `true`, `func` is
         * invoked on the trailing edge of the timeout only if the debounced function
         * is invoked more than once during the `wait` timeout.
         *
         * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
         * until to the next tick, similar to `setTimeout` with a timeout of `0`.
         *
         * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
         * for details over the differences between `_.debounce` and `_.throttle`.
         *
         * @static
         * @memberOf _
         * @since 0.1.0
         * @category Function
         * @param {Function} func The function to debounce.
         * @param {number} [wait=0] The number of milliseconds to delay.
         * @param {Object} [options={}] The options object.
         * @param {boolean} [options.leading=false]
         *  Specify invoking on the leading edge of the timeout.
         * @param {number} [options.maxWait]
         *  The maximum time `func` is allowed to be delayed before it's invoked.
         * @param {boolean} [options.trailing=true]
         *  Specify invoking on the trailing edge of the timeout.
         * @returns {Function} Returns the new debounced function.
         * @example
         *
         * // Avoid costly calculations while the window size is in flux.
         * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
         *
         * // Invoke `sendMail` when clicked, debouncing subsequent calls.
         * jQuery(element).on('click', _.debounce(sendMail, 300, {
         *   'leading': true,
         *   'trailing': false
         * }));
         *
         * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
         * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
         * var source = new EventSource('/stream');
         * jQuery(source).on('message', debounced);
         *
         * // Cancel the trailing debounced invocation.
         * jQuery(window).on('popstate', debounced.cancel);
         */
        function debounce(func, wait, options) {
          var lastArgs,
            lastThis,
            maxWait,
            result,
            timerId,
            lastCallTime,
            lastInvokeTime = 0,
            leading = false,
            maxing = false,
            trailing = true;

          if (typeof func != "function") {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          wait = toNumber(wait) || 0;
          if (isObject(options)) {
            leading = !!options.leading;
            maxing = "maxWait" in options;
            maxWait = maxing
              ? nativeMax(toNumber(options.maxWait) || 0, wait)
              : maxWait;
            trailing = "trailing" in options ? !!options.trailing : trailing;
          }

          function invokeFunc(time) {
            var args = lastArgs,
              thisArg = lastThis;

            lastArgs = lastThis = undefined;
            lastInvokeTime = time;
            result = func.apply(thisArg, args);
            return result;
          }

          function leadingEdge(time) {
            // Reset any `maxWait` timer.
            lastInvokeTime = time;
            // Start the timer for the trailing edge.
            timerId = setTimeout(timerExpired, wait);
            // Invoke the leading edge.
            return leading ? invokeFunc(time) : result;
          }

          function remainingWait(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime,
              timeWaiting = wait - timeSinceLastCall;

            return maxing
              ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
              : timeWaiting;
          }

          function shouldInvoke(time) {
            var timeSinceLastCall = time - lastCallTime,
              timeSinceLastInvoke = time - lastInvokeTime;

            // Either this is the first call, activity has stopped and we're at the
            // trailing edge, the system time has gone backwards and we're treating
            // it as the trailing edge, or we've hit the `maxWait` limit.
            return (
              lastCallTime === undefined ||
              timeSinceLastCall >= wait ||
              timeSinceLastCall < 0 ||
              (maxing && timeSinceLastInvoke >= maxWait)
            );
          }

          function timerExpired() {
            var time = now();
            if (shouldInvoke(time)) {
              return trailingEdge(time);
            }
            // Restart the timer.
            timerId = setTimeout(timerExpired, remainingWait(time));
          }

          function trailingEdge(time) {
            timerId = undefined;

            // Only invoke if we have `lastArgs` which means `func` has been
            // debounced at least once.
            if (trailing && lastArgs) {
              return invokeFunc(time);
            }
            lastArgs = lastThis = undefined;
            return result;
          }

          function cancel() {
            if (timerId !== undefined) {
              clearTimeout(timerId);
            }
            lastInvokeTime = 0;
            lastArgs = lastCallTime = lastThis = timerId = undefined;
          }

          function flush() {
            return timerId === undefined ? result : trailingEdge(now());
          }

          function debounced() {
            var time = now(),
              isInvoking = shouldInvoke(time);

            lastArgs = arguments;
            lastThis = this;
            lastCallTime = time;

            if (isInvoking) {
              if (timerId === undefined) {
                return leadingEdge(lastCallTime);
              }
              if (maxing) {
                // Handle invocations in a tight loop.
                clearTimeout(timerId);
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
              }
            }
            if (timerId === undefined) {
              timerId = setTimeout(timerExpired, wait);
            }
            return result;
          }
          debounced.cancel = cancel;
          debounced.flush = flush;
          return debounced;
        }

        module.exports = debounce;

        /***/
      },
      /* 244 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var reactIs = __webpack_require__(439);

        /**
         * Copyright 2015, Yahoo! Inc.
         * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
         */
        var REACT_STATICS = {
          childContextTypes: true,
          contextType: true,
          contextTypes: true,
          defaultProps: true,
          displayName: true,
          getDefaultProps: true,
          getDerivedStateFromError: true,
          getDerivedStateFromProps: true,
          mixins: true,
          propTypes: true,
          type: true,
        };
        var KNOWN_STATICS = {
          name: true,
          length: true,
          prototype: true,
          caller: true,
          callee: true,
          arguments: true,
          arity: true,
        };
        var FORWARD_REF_STATICS = {
          $$typeof: true,
          render: true,
          defaultProps: true,
          displayName: true,
          propTypes: true,
        };
        var MEMO_STATICS = {
          $$typeof: true,
          compare: true,
          defaultProps: true,
          displayName: true,
          propTypes: true,
          type: true,
        };
        var TYPE_STATICS = {};
        TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
        TYPE_STATICS[reactIs.Memo] = MEMO_STATICS;

        function getStatics(component) {
          // React v16.11 and below
          if (reactIs.isMemo(component)) {
            return MEMO_STATICS;
          } // React v16.12 and above

          return TYPE_STATICS[component["$$typeof"]] || REACT_STATICS;
        }

        var defineProperty = Object.defineProperty;
        var getOwnPropertyNames = Object.getOwnPropertyNames;
        var getOwnPropertySymbols = Object.getOwnPropertySymbols;
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var getPrototypeOf = Object.getPrototypeOf;
        var objectPrototype = Object.prototype;
        function hoistNonReactStatics(
          targetComponent,
          sourceComponent,
          blacklist
        ) {
          if (typeof sourceComponent !== "string") {
            // don't hoist over string (html) components
            if (objectPrototype) {
              var inheritedComponent = getPrototypeOf(sourceComponent);

              if (
                inheritedComponent &&
                inheritedComponent !== objectPrototype
              ) {
                hoistNonReactStatics(
                  targetComponent,
                  inheritedComponent,
                  blacklist
                );
              }
            }

            var keys = getOwnPropertyNames(sourceComponent);

            if (getOwnPropertySymbols) {
              keys = keys.concat(getOwnPropertySymbols(sourceComponent));
            }

            var targetStatics = getStatics(targetComponent);
            var sourceStatics = getStatics(sourceComponent);

            for (var i = 0; i < keys.length; ++i) {
              var key = keys[i];

              if (
                !KNOWN_STATICS[key] &&
                !(blacklist && blacklist[key]) &&
                !(sourceStatics && sourceStatics[key]) &&
                !(targetStatics && targetStatics[key])
              ) {
                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

                try {
                  // Avoid failures from read-only properties
                  defineProperty(targetComponent, key, descriptor);
                } catch (e) {}
              }
            }
          }

          return targetComponent;
        }

        module.exports = hoistNonReactStatics;

        /***/
      },
      /* 245 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          /**!
           * @fileOverview Kickass library to create and place poppers near their reference elements.
           * @version 1.16.1-lts
           * @license
           * Copyright (c) 2016 Federico Zivolo and contributors
           *
           * Permission is hereby granted, free of charge, to any person obtaining a copy
           * of this software and associated documentation files (the "Software"), to deal
           * in the Software without restriction, including without limitation the rights
           * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
           * copies of the Software, and to permit persons to whom the Software is
           * furnished to do so, subject to the following conditions:
           *
           * The above copyright notice and this permission notice shall be included in all
           * copies or substantial portions of the Software.
           *
           * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
           * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
           * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
           * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
           * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
           * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
           * SOFTWARE.
           */
          var isBrowser =
            typeof window !== "undefined" &&
            typeof document !== "undefined" &&
            typeof navigator !== "undefined";

          var timeoutDuration = (function () {
            var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"];
            for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
              if (
                isBrowser &&
                navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0
              ) {
                return 1;
              }
            }
            return 0;
          })();

          function microtaskDebounce(fn) {
            var called = false;
            return function () {
              if (called) {
                return;
              }
              called = true;
              window.Promise.resolve().then(function () {
                called = false;
                fn();
              });
            };
          }

          function taskDebounce(fn) {
            var scheduled = false;
            return function () {
              if (!scheduled) {
                scheduled = true;
                setTimeout(function () {
                  scheduled = false;
                  fn();
                }, timeoutDuration);
              }
            };
          }

          var supportsMicroTasks = isBrowser && window.Promise;

          /**
           * Create a debounced version of a method, that's asynchronously deferred
           * but called in the minimum time possible.
           *
           * @method
           * @memberof Popper.Utils
           * @argument {Function} fn
           * @returns {Function}
           */
          var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

          /**
           * Check if the given variable is a function
           * @method
           * @memberof Popper.Utils
           * @argument {Any} functionToCheck - variable to check
           * @returns {Boolean} answer to: is a function?
           */
          function isFunction(functionToCheck) {
            var getType = {};
            return (
              functionToCheck &&
              getType.toString.call(functionToCheck) === "[object Function]"
            );
          }

          /**
           * Get CSS computed property of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Eement} element
           * @argument {String} property
           */
          function getStyleComputedProperty(element, property) {
            if (element.nodeType !== 1) {
              return [];
            }
            // NOTE: 1 DOM access here
            var window = element.ownerDocument.defaultView;
            var css = window.getComputedStyle(element, null);
            return property ? css[property] : css;
          }

          /**
           * Returns the parentNode or the host of the element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} parent
           */
          function getParentNode(element) {
            if (element.nodeName === "HTML") {
              return element;
            }
            return element.parentNode || element.host;
          }

          /**
           * Returns the scrolling parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} scroll parent
           */
          function getScrollParent(element) {
            // Return body, `getScroll` will take care to get the correct `scrollTop` from it
            if (!element) {
              return document.body;
            }

            switch (element.nodeName) {
              case "HTML":
              case "BODY":
                return element.ownerDocument.body;
              case "#document":
                return element.body;
            }

            // Firefox want us to check `-x` and `-y` variations as well

            var _getStyleComputedProp = getStyleComputedProperty(element),
              overflow = _getStyleComputedProp.overflow,
              overflowX = _getStyleComputedProp.overflowX,
              overflowY = _getStyleComputedProp.overflowY;

            if (
              /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)
            ) {
              return element;
            }

            return getScrollParent(getParentNode(element));
          }

          /**
           * Returns the reference node of the reference object, or the reference object itself.
           * @method
           * @memberof Popper.Utils
           * @param {Element|Object} reference - the reference element (the popper will be relative to this)
           * @returns {Element} parent
           */
          function getReferenceNode(reference) {
            return reference && reference.referenceNode
              ? reference.referenceNode
              : reference;
          }

          var isIE11 =
            isBrowser &&
            !!(window.MSInputMethodContext && document.documentMode);
          var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

          /**
           * Determines if the browser is Internet Explorer
           * @method
           * @memberof Popper.Utils
           * @param {Number} version to check
           * @returns {Boolean} isIE
           */
          function isIE(version) {
            if (version === 11) {
              return isIE11;
            }
            if (version === 10) {
              return isIE10;
            }
            return isIE11 || isIE10;
          }

          /**
           * Returns the offset parent of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} offset parent
           */
          function getOffsetParent(element) {
            if (!element) {
              return document.documentElement;
            }

            var noOffsetParent = isIE(10) ? document.body : null;

            // NOTE: 1 DOM access here
            var offsetParent = element.offsetParent || null;
            // Skip hidden elements which don't have an offsetParent
            while (
              offsetParent === noOffsetParent &&
              element.nextElementSibling
            ) {
              offsetParent = (element = element.nextElementSibling)
                .offsetParent;
            }

            var nodeName = offsetParent && offsetParent.nodeName;

            if (!nodeName || nodeName === "BODY" || nodeName === "HTML") {
              return element
                ? element.ownerDocument.documentElement
                : document.documentElement;
            }

            // .offsetParent will return the closest TH, TD or TABLE in case
            // no offsetParent is present, I hate this job...
            if (
              ["TH", "TD", "TABLE"].indexOf(offsetParent.nodeName) !== -1 &&
              getStyleComputedProperty(offsetParent, "position") === "static"
            ) {
              return getOffsetParent(offsetParent);
            }

            return offsetParent;
          }

          function isOffsetContainer(element) {
            var nodeName = element.nodeName;

            if (nodeName === "BODY") {
              return false;
            }
            return (
              nodeName === "HTML" ||
              getOffsetParent(element.firstElementChild) === element
            );
          }

          /**
           * Finds the root node (document, shadowDOM root) of the given element
           * @method
           * @memberof Popper.Utils
           * @argument {Element} node
           * @returns {Element} root node
           */
          function getRoot(node) {
            if (node.parentNode !== null) {
              return getRoot(node.parentNode);
            }

            return node;
          }

          /**
           * Finds the offset parent common to the two provided nodes
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element1
           * @argument {Element} element2
           * @returns {Element} common offset parent
           */
          function findCommonOffsetParent(element1, element2) {
            // This check is needed to avoid errors in case one of the elements isn't defined for any reason
            if (
              !element1 ||
              !element1.nodeType ||
              !element2 ||
              !element2.nodeType
            ) {
              return document.documentElement;
            }

            // Here we make sure to give as "start" the element that comes first in the DOM
            var order =
              element1.compareDocumentPosition(element2) &
              Node.DOCUMENT_POSITION_FOLLOWING;
            var start = order ? element1 : element2;
            var end = order ? element2 : element1;

            // Get common ancestor container
            var range = document.createRange();
            range.setStart(start, 0);
            range.setEnd(end, 0);
            var commonAncestorContainer = range.commonAncestorContainer;

            // Both nodes are inside #document

            if (
              (element1 !== commonAncestorContainer &&
                element2 !== commonAncestorContainer) ||
              start.contains(end)
            ) {
              if (isOffsetContainer(commonAncestorContainer)) {
                return commonAncestorContainer;
              }

              return getOffsetParent(commonAncestorContainer);
            }

            // one of the nodes is inside shadowDOM, find which one
            var element1root = getRoot(element1);
            if (element1root.host) {
              return findCommonOffsetParent(element1root.host, element2);
            } else {
              return findCommonOffsetParent(element1, getRoot(element2).host);
            }
          }

          /**
           * Gets the scroll value of the given element in the given side (top and left)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {String} side `top` or `left`
           * @returns {number} amount of scrolled pixels
           */
          function getScroll(element) {
            var side =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : "top";

            var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
            var nodeName = element.nodeName;

            if (nodeName === "BODY" || nodeName === "HTML") {
              var html = element.ownerDocument.documentElement;
              var scrollingElement =
                element.ownerDocument.scrollingElement || html;
              return scrollingElement[upperSide];
            }

            return element[upperSide];
          }

          /*
           * Sum or subtract the element scroll values (left and top) from a given rect object
           * @method
           * @memberof Popper.Utils
           * @param {Object} rect - Rect object you want to change
           * @param {HTMLElement} element - The element from the function reads the scroll values
           * @param {Boolean} subtract - set to true if you want to subtract the scroll values
           * @return {Object} rect - The modifier rect object
           */
          function includeScroll(rect, element) {
            var subtract =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : false;

            var scrollTop = getScroll(element, "top");
            var scrollLeft = getScroll(element, "left");
            var modifier = subtract ? -1 : 1;
            rect.top += scrollTop * modifier;
            rect.bottom += scrollTop * modifier;
            rect.left += scrollLeft * modifier;
            rect.right += scrollLeft * modifier;
            return rect;
          }

          /*
           * Helper to detect borders of a given element
           * @method
           * @memberof Popper.Utils
           * @param {CSSStyleDeclaration} styles
           * Result of `getStyleComputedProperty` on the given element
           * @param {String} axis - `x` or `y`
           * @return {number} borders - The borders size of the given axis
           */

          function getBordersSize(styles, axis) {
            var sideA = axis === "x" ? "Left" : "Top";
            var sideB = sideA === "Left" ? "Right" : "Bottom";

            return (
              parseFloat(styles["border" + sideA + "Width"]) +
              parseFloat(styles["border" + sideB + "Width"])
            );
          }

          function getSize(axis, body, html, computedStyle) {
            return Math.max(
              body["offset" + axis],
              body["scroll" + axis],
              html["client" + axis],
              html["offset" + axis],
              html["scroll" + axis],
              isIE(10)
                ? parseInt(html["offset" + axis]) +
                    parseInt(
                      computedStyle[
                        "margin" + (axis === "Height" ? "Top" : "Left")
                      ]
                    ) +
                    parseInt(
                      computedStyle[
                        "margin" + (axis === "Height" ? "Bottom" : "Right")
                      ]
                    )
                : 0
            );
          }

          function getWindowSizes(document) {
            var body = document.body;
            var html = document.documentElement;
            var computedStyle = isIE(10) && getComputedStyle(html);

            return {
              height: getSize("Height", body, html, computedStyle),
              width: getSize("Width", body, html, computedStyle),
            };
          }

          var classCallCheck = function (instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          };

          var createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var defineProperty = function (obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
              });
            } else {
              obj[key] = value;
            }

            return obj;
          };

          var _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          /**
           * Given element offsets, generate an output similar to getBoundingClientRect
           * @method
           * @memberof Popper.Utils
           * @argument {Object} offsets
           * @returns {Object} ClientRect like output
           */
          function getClientRect(offsets) {
            return _extends({}, offsets, {
              right: offsets.left + offsets.width,
              bottom: offsets.top + offsets.height,
            });
          }

          /**
           * Get bounding client rect of given element
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} element
           * @return {Object} client rect
           */
          function getBoundingClientRect(element) {
            var rect = {};

            // IE10 10 FIX: Please, don't ask, the element isn't
            // considered in DOM in some circumstances...
            // This isn't reproducible in IE10 compatibility mode of IE11
            try {
              if (isIE(10)) {
                rect = element.getBoundingClientRect();
                var scrollTop = getScroll(element, "top");
                var scrollLeft = getScroll(element, "left");
                rect.top += scrollTop;
                rect.left += scrollLeft;
                rect.bottom += scrollTop;
                rect.right += scrollLeft;
              } else {
                rect = element.getBoundingClientRect();
              }
            } catch (e) {}

            var result = {
              left: rect.left,
              top: rect.top,
              width: rect.right - rect.left,
              height: rect.bottom - rect.top,
            };

            // subtract scrollbar size from sizes
            var sizes =
              element.nodeName === "HTML"
                ? getWindowSizes(element.ownerDocument)
                : {};
            var width = sizes.width || element.clientWidth || result.width;
            var height = sizes.height || element.clientHeight || result.height;

            var horizScrollbar = element.offsetWidth - width;
            var vertScrollbar = element.offsetHeight - height;

            // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
            // we make this check conditional for performance reasons
            if (horizScrollbar || vertScrollbar) {
              var styles = getStyleComputedProperty(element);
              horizScrollbar -= getBordersSize(styles, "x");
              vertScrollbar -= getBordersSize(styles, "y");

              result.width -= horizScrollbar;
              result.height -= vertScrollbar;
            }

            return getClientRect(result);
          }

          function getOffsetRectRelativeToArbitraryNode(children, parent) {
            var fixedPosition =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : false;

            var isIE10 = isIE(10);
            var isHTML = parent.nodeName === "HTML";
            var childrenRect = getBoundingClientRect(children);
            var parentRect = getBoundingClientRect(parent);
            var scrollParent = getScrollParent(children);

            var styles = getStyleComputedProperty(parent);
            var borderTopWidth = parseFloat(styles.borderTopWidth);
            var borderLeftWidth = parseFloat(styles.borderLeftWidth);

            // In cases where the parent is fixed, we must ignore negative scroll in offset calc
            if (fixedPosition && isHTML) {
              parentRect.top = Math.max(parentRect.top, 0);
              parentRect.left = Math.max(parentRect.left, 0);
            }
            var offsets = getClientRect({
              top: childrenRect.top - parentRect.top - borderTopWidth,
              left: childrenRect.left - parentRect.left - borderLeftWidth,
              width: childrenRect.width,
              height: childrenRect.height,
            });
            offsets.marginTop = 0;
            offsets.marginLeft = 0;

            // Subtract margins of documentElement in case it's being used as parent
            // we do this only on HTML because it's the only element that behaves
            // differently when margins are applied to it. The margins are included in
            // the box of the documentElement, in the other cases not.
            if (!isIE10 && isHTML) {
              var marginTop = parseFloat(styles.marginTop);
              var marginLeft = parseFloat(styles.marginLeft);

              offsets.top -= borderTopWidth - marginTop;
              offsets.bottom -= borderTopWidth - marginTop;
              offsets.left -= borderLeftWidth - marginLeft;
              offsets.right -= borderLeftWidth - marginLeft;

              // Attach marginTop and marginLeft because in some circumstances we may need them
              offsets.marginTop = marginTop;
              offsets.marginLeft = marginLeft;
            }

            if (
              isIE10 && !fixedPosition
                ? parent.contains(scrollParent)
                : parent === scrollParent && scrollParent.nodeName !== "BODY"
            ) {
              offsets = includeScroll(offsets, parent);
            }

            return offsets;
          }

          function getViewportOffsetRectRelativeToArtbitraryNode(element) {
            var excludeScroll =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            var html = element.ownerDocument.documentElement;
            var relativeOffset = getOffsetRectRelativeToArbitraryNode(
              element,
              html
            );
            var width = Math.max(html.clientWidth, window.innerWidth || 0);
            var height = Math.max(html.clientHeight, window.innerHeight || 0);

            var scrollTop = !excludeScroll ? getScroll(html) : 0;
            var scrollLeft = !excludeScroll ? getScroll(html, "left") : 0;

            var offset = {
              top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
              left:
                scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
              width: width,
              height: height,
            };

            return getClientRect(offset);
          }

          /**
           * Check if the given element is fixed or is inside a fixed parent
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @argument {Element} customContainer
           * @returns {Boolean} answer to "isFixed?"
           */
          function isFixed(element) {
            var nodeName = element.nodeName;
            if (nodeName === "BODY" || nodeName === "HTML") {
              return false;
            }
            if (getStyleComputedProperty(element, "position") === "fixed") {
              return true;
            }
            var parentNode = getParentNode(element);
            if (!parentNode) {
              return false;
            }
            return isFixed(parentNode);
          }

          /**
           * Finds the first parent of an element that has a transformed property defined
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Element} first transformed parent or documentElement
           */

          function getFixedPositionOffsetParent(element) {
            // This check is needed to avoid errors in case one of the elements isn't defined for any reason
            if (!element || !element.parentElement || isIE()) {
              return document.documentElement;
            }
            var el = element.parentElement;
            while (el && getStyleComputedProperty(el, "transform") === "none") {
              el = el.parentElement;
            }
            return el || document.documentElement;
          }

          /**
           * Computed the boundaries limits and return them
           * @method
           * @memberof Popper.Utils
           * @param {HTMLElement} popper
           * @param {HTMLElement} reference
           * @param {number} padding
           * @param {HTMLElement} boundariesElement - Element used to define the boundaries
           * @param {Boolean} fixedPosition - Is in fixed position mode
           * @returns {Object} Coordinates of the boundaries
           */
          function getBoundaries(
            popper,
            reference,
            padding,
            boundariesElement
          ) {
            var fixedPosition =
              arguments.length > 4 && arguments[4] !== undefined
                ? arguments[4]
                : false;

            // NOTE: 1 DOM access here

            var boundaries = { top: 0, left: 0 };
            var offsetParent = fixedPosition
              ? getFixedPositionOffsetParent(popper)
              : findCommonOffsetParent(popper, getReferenceNode(reference));

            // Handle viewport case
            if (boundariesElement === "viewport") {
              boundaries = getViewportOffsetRectRelativeToArtbitraryNode(
                offsetParent,
                fixedPosition
              );
            } else {
              // Handle other cases based on DOM element used as boundaries
              var boundariesNode = void 0;
              if (boundariesElement === "scrollParent") {
                boundariesNode = getScrollParent(getParentNode(reference));
                if (boundariesNode.nodeName === "BODY") {
                  boundariesNode = popper.ownerDocument.documentElement;
                }
              } else if (boundariesElement === "window") {
                boundariesNode = popper.ownerDocument.documentElement;
              } else {
                boundariesNode = boundariesElement;
              }

              var offsets = getOffsetRectRelativeToArbitraryNode(
                boundariesNode,
                offsetParent,
                fixedPosition
              );

              // In case of HTML, we need a different computation
              if (
                boundariesNode.nodeName === "HTML" &&
                !isFixed(offsetParent)
              ) {
                var _getWindowSizes = getWindowSizes(popper.ownerDocument),
                  height = _getWindowSizes.height,
                  width = _getWindowSizes.width;

                boundaries.top += offsets.top - offsets.marginTop;
                boundaries.bottom = height + offsets.top;
                boundaries.left += offsets.left - offsets.marginLeft;
                boundaries.right = width + offsets.left;
              } else {
                // for all the other DOM elements, this one is good
                boundaries = offsets;
              }
            }

            // Add paddings
            padding = padding || 0;
            var isPaddingNumber = typeof padding === "number";
            boundaries.left += isPaddingNumber ? padding : padding.left || 0;
            boundaries.top += isPaddingNumber ? padding : padding.top || 0;
            boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
            boundaries.bottom -= isPaddingNumber
              ? padding
              : padding.bottom || 0;

            return boundaries;
          }

          function getArea(_ref) {
            var width = _ref.width,
              height = _ref.height;

            return width * height;
          }

          /**
           * Utility used to transform the `auto` placement to the placement with more
           * available space.
           * @method
           * @memberof Popper.Utils
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeAutoPlacement(
            placement,
            refRect,
            popper,
            reference,
            boundariesElement
          ) {
            var padding =
              arguments.length > 5 && arguments[5] !== undefined
                ? arguments[5]
                : 0;

            if (placement.indexOf("auto") === -1) {
              return placement;
            }

            var boundaries = getBoundaries(
              popper,
              reference,
              padding,
              boundariesElement
            );

            var rects = {
              top: {
                width: boundaries.width,
                height: refRect.top - boundaries.top,
              },
              right: {
                width: boundaries.right - refRect.right,
                height: boundaries.height,
              },
              bottom: {
                width: boundaries.width,
                height: boundaries.bottom - refRect.bottom,
              },
              left: {
                width: refRect.left - boundaries.left,
                height: boundaries.height,
              },
            };

            var sortedAreas = Object.keys(rects)
              .map(function (key) {
                return _extends(
                  {
                    key: key,
                  },
                  rects[key],
                  {
                    area: getArea(rects[key]),
                  }
                );
              })
              .sort(function (a, b) {
                return b.area - a.area;
              });

            var filteredAreas = sortedAreas.filter(function (_ref2) {
              var width = _ref2.width,
                height = _ref2.height;
              return (
                width >= popper.clientWidth && height >= popper.clientHeight
              );
            });

            var computedPlacement =
              filteredAreas.length > 0
                ? filteredAreas[0].key
                : sortedAreas[0].key;

            var variation = placement.split("-")[1];

            return computedPlacement + (variation ? "-" + variation : "");
          }

          /**
           * Get offsets to the reference element
           * @method
           * @memberof Popper.Utils
           * @param {Object} state
           * @param {Element} popper - the popper element
           * @param {Element} reference - the reference element (the popper will be relative to this)
           * @param {Element} fixedPosition - is in fixed position mode
           * @returns {Object} An object containing the offsets which will be applied to the popper
           */
          function getReferenceOffsets(state, popper, reference) {
            var fixedPosition =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : null;

            var commonOffsetParent = fixedPosition
              ? getFixedPositionOffsetParent(popper)
              : findCommonOffsetParent(popper, getReferenceNode(reference));
            return getOffsetRectRelativeToArbitraryNode(
              reference,
              commonOffsetParent,
              fixedPosition
            );
          }

          /**
           * Get the outer sizes of the given element (offset size + margins)
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element
           * @returns {Object} object containing width and height properties
           */
          function getOuterSizes(element) {
            var window = element.ownerDocument.defaultView;
            var styles = window.getComputedStyle(element);
            var x =
              parseFloat(styles.marginTop || 0) +
              parseFloat(styles.marginBottom || 0);
            var y =
              parseFloat(styles.marginLeft || 0) +
              parseFloat(styles.marginRight || 0);
            var result = {
              width: element.offsetWidth + y,
              height: element.offsetHeight + x,
            };
            return result;
          }

          /**
           * Get the opposite placement of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement
           * @returns {String} flipped placement
           */
          function getOppositePlacement(placement) {
            var hash = {
              left: "right",
              right: "left",
              bottom: "top",
              top: "bottom",
            };
            return placement.replace(
              /left|right|bottom|top/g,
              function (matched) {
                return hash[matched];
              }
            );
          }

          /**
           * Get offsets to the popper
           * @method
           * @memberof Popper.Utils
           * @param {Object} position - CSS position the Popper will get applied
           * @param {HTMLElement} popper - the popper element
           * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
           * @param {String} placement - one of the valid placement options
           * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
           */
          function getPopperOffsets(popper, referenceOffsets, placement) {
            placement = placement.split("-")[0];

            // Get popper node sizes
            var popperRect = getOuterSizes(popper);

            // Add position, width and height to our offsets object
            var popperOffsets = {
              width: popperRect.width,
              height: popperRect.height,
            };

            // depending by the popper placement we have to compute its offsets slightly differently
            var isHoriz = ["right", "left"].indexOf(placement) !== -1;
            var mainSide = isHoriz ? "top" : "left";
            var secondarySide = isHoriz ? "left" : "top";
            var measurement = isHoriz ? "height" : "width";
            var secondaryMeasurement = !isHoriz ? "height" : "width";

            popperOffsets[mainSide] =
              referenceOffsets[mainSide] +
              referenceOffsets[measurement] / 2 -
              popperRect[measurement] / 2;
            if (placement === secondarySide) {
              popperOffsets[secondarySide] =
                referenceOffsets[secondarySide] -
                popperRect[secondaryMeasurement];
            } else {
              popperOffsets[secondarySide] =
                referenceOffsets[getOppositePlacement(secondarySide)];
            }

            return popperOffsets;
          }

          /**
           * Mimics the `find` method of Array
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function find(arr, check) {
            // use native find if supported
            if (Array.prototype.find) {
              return arr.find(check);
            }

            // use `filter` to obtain the same behavior of `find`
            return arr.filter(check)[0];
          }

          /**
           * Return the index of the matching object
           * @method
           * @memberof Popper.Utils
           * @argument {Array} arr
           * @argument prop
           * @argument value
           * @returns index or -1
           */
          function findIndex(arr, prop, value) {
            // use native findIndex if supported
            if (Array.prototype.findIndex) {
              return arr.findIndex(function (cur) {
                return cur[prop] === value;
              });
            }

            // use `find` + `indexOf` if `findIndex` isn't supported
            var match = find(arr, function (obj) {
              return obj[prop] === value;
            });
            return arr.indexOf(match);
          }

          /**
           * Loop trough the list of modifiers and run them in order,
           * each of them will then edit the data object.
           * @method
           * @memberof Popper.Utils
           * @param {dataObject} data
           * @param {Array} modifiers
           * @param {String} ends - Optional modifier name used as stopper
           * @returns {dataObject}
           */
          function runModifiers(modifiers, data, ends) {
            var modifiersToRun =
              ends === undefined
                ? modifiers
                : modifiers.slice(0, findIndex(modifiers, "name", ends));

            modifiersToRun.forEach(function (modifier) {
              if (modifier["function"]) {
                // eslint-disable-line dot-notation
                console.warn(
                  "`modifier.function` is deprecated, use `modifier.fn`!"
                );
              }
              var fn = modifier["function"] || modifier.fn; // eslint-disable-line dot-notation
              if (modifier.enabled && isFunction(fn)) {
                // Add properties to offsets to make them a complete clientRect object
                // we do this before each modifier to make sure the previous one doesn't
                // mess with these values
                data.offsets.popper = getClientRect(data.offsets.popper);
                data.offsets.reference = getClientRect(data.offsets.reference);

                data = fn(data, modifier);
              }
            });

            return data;
          }

          /**
           * Updates the position of the popper, computing the new offsets and applying
           * the new style.<br />
           * Prefer `scheduleUpdate` over `update` because of performance reasons.
           * @method
           * @memberof Popper
           */
          function update() {
            // if popper is destroyed, don't perform any further update
            if (this.state.isDestroyed) {
              return;
            }

            var data = {
              instance: this,
              styles: {},
              arrowStyles: {},
              attributes: {},
              flipped: false,
              offsets: {},
            };

            // compute reference element offsets
            data.offsets.reference = getReferenceOffsets(
              this.state,
              this.popper,
              this.reference,
              this.options.positionFixed
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            data.placement = computeAutoPlacement(
              this.options.placement,
              data.offsets.reference,
              this.popper,
              this.reference,
              this.options.modifiers.flip.boundariesElement,
              this.options.modifiers.flip.padding
            );

            // store the computed placement inside `originalPlacement`
            data.originalPlacement = data.placement;

            data.positionFixed = this.options.positionFixed;

            // compute the popper offsets
            data.offsets.popper = getPopperOffsets(
              this.popper,
              data.offsets.reference,
              data.placement
            );

            data.offsets.popper.position = this.options.positionFixed
              ? "fixed"
              : "absolute";

            // run the modifiers
            data = runModifiers(this.modifiers, data);

            // the first `update` will call `onCreate` callback
            // the other ones will call `onUpdate` callback
            if (!this.state.isCreated) {
              this.state.isCreated = true;
              this.options.onCreate(data);
            } else {
              this.options.onUpdate(data);
            }
          }

          /**
           * Helper used to know if the given modifier is enabled.
           * @method
           * @memberof Popper.Utils
           * @returns {Boolean}
           */
          function isModifierEnabled(modifiers, modifierName) {
            return modifiers.some(function (_ref) {
              var name = _ref.name,
                enabled = _ref.enabled;
              return enabled && name === modifierName;
            });
          }

          /**
           * Get the prefixed supported property name
           * @method
           * @memberof Popper.Utils
           * @argument {String} property (camelCase)
           * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
           */
          function getSupportedPropertyName(property) {
            var prefixes = [false, "ms", "Webkit", "Moz", "O"];
            var upperProp =
              property.charAt(0).toUpperCase() + property.slice(1);

            for (var i = 0; i < prefixes.length; i++) {
              var prefix = prefixes[i];
              var toCheck = prefix ? "" + prefix + upperProp : property;
              if (typeof document.body.style[toCheck] !== "undefined") {
                return toCheck;
              }
            }
            return null;
          }

          /**
           * Destroys the popper.
           * @method
           * @memberof Popper
           */
          function destroy() {
            this.state.isDestroyed = true;

            // touch DOM only if `applyStyle` modifier is enabled
            if (isModifierEnabled(this.modifiers, "applyStyle")) {
              this.popper.removeAttribute("x-placement");
              this.popper.style.position = "";
              this.popper.style.top = "";
              this.popper.style.left = "";
              this.popper.style.right = "";
              this.popper.style.bottom = "";
              this.popper.style.willChange = "";
              this.popper.style[getSupportedPropertyName("transform")] = "";
            }

            this.disableEventListeners();

            // remove the popper if user explicitly asked for the deletion on destroy
            // do not use `remove` because IE11 doesn't support it
            if (this.options.removeOnDestroy) {
              this.popper.parentNode.removeChild(this.popper);
            }
            return this;
          }

          /**
           * Get the window associated with the element
           * @argument {Element} element
           * @returns {Window}
           */
          function getWindow(element) {
            var ownerDocument = element.ownerDocument;
            return ownerDocument ? ownerDocument.defaultView : window;
          }

          function attachToScrollParents(
            scrollParent,
            event,
            callback,
            scrollParents
          ) {
            var isBody = scrollParent.nodeName === "BODY";
            var target = isBody
              ? scrollParent.ownerDocument.defaultView
              : scrollParent;
            target.addEventListener(event, callback, { passive: true });

            if (!isBody) {
              attachToScrollParents(
                getScrollParent(target.parentNode),
                event,
                callback,
                scrollParents
              );
            }
            scrollParents.push(target);
          }

          /**
           * Setup needed event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function setupEventListeners(reference, options, state, updateBound) {
            // Resize event listener on window
            state.updateBound = updateBound;
            getWindow(reference).addEventListener("resize", state.updateBound, {
              passive: true,
            });

            // Scroll event listener on scroll parents
            var scrollElement = getScrollParent(reference);
            attachToScrollParents(
              scrollElement,
              "scroll",
              state.updateBound,
              state.scrollParents
            );
            state.scrollElement = scrollElement;
            state.eventsEnabled = true;

            return state;
          }

          /**
           * It will add resize/scroll events and start recalculating
           * position of the popper element when they are triggered.
           * @method
           * @memberof Popper
           */
          function enableEventListeners() {
            if (!this.state.eventsEnabled) {
              this.state = setupEventListeners(
                this.reference,
                this.options,
                this.state,
                this.scheduleUpdate
              );
            }
          }

          /**
           * Remove event listeners used to update the popper position
           * @method
           * @memberof Popper.Utils
           * @private
           */
          function removeEventListeners(reference, state) {
            // Remove resize event listener on window
            getWindow(reference).removeEventListener(
              "resize",
              state.updateBound
            );

            // Remove scroll event listener on scroll parents
            state.scrollParents.forEach(function (target) {
              target.removeEventListener("scroll", state.updateBound);
            });

            // Reset state
            state.updateBound = null;
            state.scrollParents = [];
            state.scrollElement = null;
            state.eventsEnabled = false;
            return state;
          }

          /**
           * It will remove resize/scroll events and won't recalculate popper position
           * when they are triggered. It also won't trigger `onUpdate` callback anymore,
           * unless you call `update` method manually.
           * @method
           * @memberof Popper
           */
          function disableEventListeners() {
            if (this.state.eventsEnabled) {
              cancelAnimationFrame(this.scheduleUpdate);
              this.state = removeEventListeners(this.reference, this.state);
            }
          }

          /**
           * Tells if a given input is a number
           * @method
           * @memberof Popper.Utils
           * @param {*} input to check
           * @return {Boolean}
           */
          function isNumeric(n) {
            return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
          }

          /**
           * Set the style to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the style to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setStyles(element, styles) {
            Object.keys(styles).forEach(function (prop) {
              var unit = "";
              // add unit if the value is numeric and is one of the following
              if (
                ["width", "height", "top", "right", "bottom", "left"].indexOf(
                  prop
                ) !== -1 &&
                isNumeric(styles[prop])
              ) {
                unit = "px";
              }
              element.style[prop] = styles[prop] + unit;
            });
          }

          /**
           * Set the attributes to the given popper
           * @method
           * @memberof Popper.Utils
           * @argument {Element} element - Element to apply the attributes to
           * @argument {Object} styles
           * Object with a list of properties and values which will be applied to the element
           */
          function setAttributes(element, attributes) {
            Object.keys(attributes).forEach(function (prop) {
              var value = attributes[prop];
              if (value !== false) {
                element.setAttribute(prop, attributes[prop]);
              } else {
                element.removeAttribute(prop);
              }
            });
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} data.styles - List of style properties - values to apply to popper element
           * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The same data object
           */
          function applyStyle(data) {
            // any property present in `data.styles` will be applied to the popper,
            // in this way we can make the 3rd party modifiers add custom styles to it
            // Be aware, modifiers could override the properties defined in the previous
            // lines of this modifier!
            setStyles(data.instance.popper, data.styles);

            // any property present in `data.attributes` will be applied to the popper,
            // they will be set as HTML attributes of the element
            setAttributes(data.instance.popper, data.attributes);

            // if arrowElement is defined and arrowStyles has some properties
            if (data.arrowElement && Object.keys(data.arrowStyles).length) {
              setStyles(data.arrowElement, data.arrowStyles);
            }

            return data;
          }

          /**
           * Set the x-placement attribute before everything else because it could be used
           * to add margins to the popper margins needs to be calculated to get the
           * correct popper offsets.
           * @method
           * @memberof Popper.modifiers
           * @param {HTMLElement} reference - The reference element used to position the popper
           * @param {HTMLElement} popper - The HTML element used as popper
           * @param {Object} options - Popper.js options
           */
          function applyStyleOnLoad(
            reference,
            popper,
            options,
            modifierOptions,
            state
          ) {
            // compute reference element offsets
            var referenceOffsets = getReferenceOffsets(
              state,
              popper,
              reference,
              options.positionFixed
            );

            // compute auto placement, store placement inside the data object,
            // modifiers will be able to edit `placement` if needed
            // and refer to originalPlacement to know the original value
            var placement = computeAutoPlacement(
              options.placement,
              referenceOffsets,
              popper,
              reference,
              options.modifiers.flip.boundariesElement,
              options.modifiers.flip.padding
            );

            popper.setAttribute("x-placement", placement);

            // Apply `position` to popper before anything else because
            // without the position applied we can't guarantee correct computations
            setStyles(popper, {
              position: options.positionFixed ? "fixed" : "absolute",
            });

            return options;
          }

          /**
           * @function
           * @memberof Popper.Utils
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Boolean} shouldRound - If the offsets should be rounded at all
           * @returns {Object} The popper's position offsets rounded
           *
           * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
           * good as it can be within reason.
           * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
           *
           * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
           * as well on High DPI screens).
           *
           * Firefox prefers no rounding for positioning and does not have blurriness on
           * high DPI screens.
           *
           * Only horizontal placement and left/right values need to be considered.
           */
          function getRoundedOffsets(data, shouldRound) {
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;
            var round = Math.round,
              floor = Math.floor;

            var noRound = function noRound(v) {
              return v;
            };

            var referenceWidth = round(reference.width);
            var popperWidth = round(popper.width);

            var isVertical = ["left", "right"].indexOf(data.placement) !== -1;
            var isVariation = data.placement.indexOf("-") !== -1;
            var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
            var bothOddWidth =
              referenceWidth % 2 === 1 && popperWidth % 2 === 1;

            var horizontalToInteger = !shouldRound
              ? noRound
              : isVertical || isVariation || sameWidthParity
              ? round
              : floor;
            var verticalToInteger = !shouldRound ? noRound : round;

            return {
              left: horizontalToInteger(
                bothOddWidth && !isVariation && shouldRound
                  ? popper.left - 1
                  : popper.left
              ),
              top: verticalToInteger(popper.top),
              bottom: verticalToInteger(popper.bottom),
              right: horizontalToInteger(popper.right),
            };
          }

          var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function computeStyle(data, options) {
            var x = options.x,
              y = options.y;
            var popper = data.offsets.popper;

            // Remove this legacy support in Popper.js v2

            var legacyGpuAccelerationOption = find(
              data.instance.modifiers,
              function (modifier) {
                return modifier.name === "applyStyle";
              }
            ).gpuAcceleration;
            if (legacyGpuAccelerationOption !== undefined) {
              console.warn(
                "WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!"
              );
            }
            var gpuAcceleration =
              legacyGpuAccelerationOption !== undefined
                ? legacyGpuAccelerationOption
                : options.gpuAcceleration;

            var offsetParent = getOffsetParent(data.instance.popper);
            var offsetParentRect = getBoundingClientRect(offsetParent);

            // Styles
            var styles = {
              position: popper.position,
            };

            var offsets = getRoundedOffsets(
              data,
              window.devicePixelRatio < 2 || !isFirefox
            );

            var sideA = x === "bottom" ? "top" : "bottom";
            var sideB = y === "right" ? "left" : "right";

            // if gpuAcceleration is set to `true` and transform is supported,
            //  we use `translate3d` to apply the position to the popper we
            // automatically use the supported prefixed version if needed
            var prefixedProperty = getSupportedPropertyName("transform");

            // now, let's make a step back and look at this code closely (wtf?)
            // If the content of the popper grows once it's been positioned, it
            // may happen that the popper gets misplaced because of the new content
            // overflowing its reference element
            // To avoid this problem, we provide two options (x and y), which allow
            // the consumer to define the offset origin.
            // If we position a popper on top of a reference element, we can set
            // `x` to `top` to make the popper grow towards its top instead of
            // its bottom.
            var left = void 0,
              top = void 0;
            if (sideA === "bottom") {
              // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
              // and not the bottom of the html element
              if (offsetParent.nodeName === "HTML") {
                top = -offsetParent.clientHeight + offsets.bottom;
              } else {
                top = -offsetParentRect.height + offsets.bottom;
              }
            } else {
              top = offsets.top;
            }
            if (sideB === "right") {
              if (offsetParent.nodeName === "HTML") {
                left = -offsetParent.clientWidth + offsets.right;
              } else {
                left = -offsetParentRect.width + offsets.right;
              }
            } else {
              left = offsets.left;
            }
            if (gpuAcceleration && prefixedProperty) {
              styles[prefixedProperty] =
                "translate3d(" + left + "px, " + top + "px, 0)";
              styles[sideA] = 0;
              styles[sideB] = 0;
              styles.willChange = "transform";
            } else {
              // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
              var invertTop = sideA === "bottom" ? -1 : 1;
              var invertLeft = sideB === "right" ? -1 : 1;
              styles[sideA] = top * invertTop;
              styles[sideB] = left * invertLeft;
              styles.willChange = sideA + ", " + sideB;
            }

            // Attributes
            var attributes = {
              "x-placement": data.placement,
            };

            // Update `data` attributes, styles and arrowStyles
            data.attributes = _extends({}, attributes, data.attributes);
            data.styles = _extends({}, styles, data.styles);
            data.arrowStyles = _extends(
              {},
              data.offsets.arrow,
              data.arrowStyles
            );

            return data;
          }

          /**
           * Helper used to know if the given modifier depends from another one.<br />
           * It checks if the needed modifier is listed and enabled.
           * @method
           * @memberof Popper.Utils
           * @param {Array} modifiers - list of modifiers
           * @param {String} requestingName - name of requesting modifier
           * @param {String} requestedName - name of requested modifier
           * @returns {Boolean}
           */
          function isModifierRequired(
            modifiers,
            requestingName,
            requestedName
          ) {
            var requesting = find(modifiers, function (_ref) {
              var name = _ref.name;
              return name === requestingName;
            });

            var isRequired =
              !!requesting &&
              modifiers.some(function (modifier) {
                return (
                  modifier.name === requestedName &&
                  modifier.enabled &&
                  modifier.order < requesting.order
                );
              });

            if (!isRequired) {
              var _requesting = "`" + requestingName + "`";
              var requested = "`" + requestedName + "`";
              console.warn(
                requested +
                  " modifier is required by " +
                  _requesting +
                  " modifier in order to work, be sure to include it before " +
                  _requesting +
                  "!"
              );
            }
            return isRequired;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function arrow(data, options) {
            var _data$offsets$arrow;

            // arrow depends on keepTogether in order to work
            if (
              !isModifierRequired(
                data.instance.modifiers,
                "arrow",
                "keepTogether"
              )
            ) {
              return data;
            }

            var arrowElement = options.element;

            // if arrowElement is a string, suppose it's a CSS selector
            if (typeof arrowElement === "string") {
              arrowElement = data.instance.popper.querySelector(arrowElement);

              // if arrowElement is not found, don't run the modifier
              if (!arrowElement) {
                return data;
              }
            } else {
              // if the arrowElement isn't a query selector we must check that the
              // provided DOM node is child of its popper node
              if (!data.instance.popper.contains(arrowElement)) {
                console.warn(
                  "WARNING: `arrow.element` must be child of its popper element!"
                );
                return data;
              }
            }

            var placement = data.placement.split("-")[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isVertical = ["left", "right"].indexOf(placement) !== -1;

            var len = isVertical ? "height" : "width";
            var sideCapitalized = isVertical ? "Top" : "Left";
            var side = sideCapitalized.toLowerCase();
            var altSide = isVertical ? "left" : "top";
            var opSide = isVertical ? "bottom" : "right";
            var arrowElementSize = getOuterSizes(arrowElement)[len];

            //
            // extends keepTogether behavior making sure the popper and its
            // reference have enough pixels in conjunction
            //

            // top/left side
            if (reference[opSide] - arrowElementSize < popper[side]) {
              data.offsets.popper[side] -=
                popper[side] - (reference[opSide] - arrowElementSize);
            }
            // bottom/right side
            if (reference[side] + arrowElementSize > popper[opSide]) {
              data.offsets.popper[side] +=
                reference[side] + arrowElementSize - popper[opSide];
            }
            data.offsets.popper = getClientRect(data.offsets.popper);

            // compute center of the popper
            var center =
              reference[side] + reference[len] / 2 - arrowElementSize / 2;

            // Compute the sideValue using the updated popper offsets
            // take popper margin in account because we don't have this info available
            var css = getStyleComputedProperty(data.instance.popper);
            var popperMarginSide = parseFloat(css["margin" + sideCapitalized]);
            var popperBorderSide = parseFloat(
              css["border" + sideCapitalized + "Width"]
            );
            var sideValue =
              center -
              data.offsets.popper[side] -
              popperMarginSide -
              popperBorderSide;

            // prevent arrowElement from being placed not contiguously to its popper
            sideValue = Math.max(
              Math.min(popper[len] - arrowElementSize, sideValue),
              0
            );

            data.arrowElement = arrowElement;
            data.offsets.arrow =
              ((_data$offsets$arrow = {}),
              defineProperty(_data$offsets$arrow, side, Math.round(sideValue)),
              defineProperty(_data$offsets$arrow, altSide, ""),
              _data$offsets$arrow);

            return data;
          }

          /**
           * Get the opposite placement variation of the given one
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement variation
           * @returns {String} flipped placement variation
           */
          function getOppositeVariation(variation) {
            if (variation === "end") {
              return "start";
            } else if (variation === "start") {
              return "end";
            }
            return variation;
          }

          /**
           * List of accepted placements to use as values of the `placement` option.<br />
           * Valid placements are:
           * - `auto`
           * - `top`
           * - `right`
           * - `bottom`
           * - `left`
           *
           * Each placement can have a variation from this list:
           * - `-start`
           * - `-end`
           *
           * Variations are interpreted easily if you think of them as the left to right
           * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
           * is right.<br />
           * Vertically (`left` and `right`), `start` is top and `end` is bottom.
           *
           * Some valid examples are:
           * - `top-end` (on top of reference, right aligned)
           * - `right-start` (on right of reference, top aligned)
           * - `bottom` (on bottom, centered)
           * - `auto-end` (on the side with more space available, alignment depends by placement)
           *
           * @static
           * @type {Array}
           * @enum {String}
           * @readonly
           * @method placements
           * @memberof Popper
           */
          var placements = [
            "auto-start",
            "auto",
            "auto-end",
            "top-start",
            "top",
            "top-end",
            "right-start",
            "right",
            "right-end",
            "bottom-end",
            "bottom",
            "bottom-start",
            "left-end",
            "left",
            "left-start",
          ];

          // Get rid of `auto` `auto-start` and `auto-end`
          var validPlacements = placements.slice(3);

          /**
           * Given an initial placement, returns all the subsequent placements
           * clockwise (or counter-clockwise).
           *
           * @method
           * @memberof Popper.Utils
           * @argument {String} placement - A valid placement (it accepts variations)
           * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
           * @returns {Array} placements including their variations
           */
          function clockwise(placement) {
            var counter =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;

            var index = validPlacements.indexOf(placement);
            var arr = validPlacements
              .slice(index + 1)
              .concat(validPlacements.slice(0, index));
            return counter ? arr.reverse() : arr;
          }

          var BEHAVIORS = {
            FLIP: "flip",
            CLOCKWISE: "clockwise",
            COUNTERCLOCKWISE: "counterclockwise",
          };

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function flip(data, options) {
            // if `inner` modifier is enabled, we can't use the `flip` modifier
            if (isModifierEnabled(data.instance.modifiers, "inner")) {
              return data;
            }

            if (data.flipped && data.placement === data.originalPlacement) {
              // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
              return data;
            }

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              options.boundariesElement,
              data.positionFixed
            );

            var placement = data.placement.split("-")[0];
            var placementOpposite = getOppositePlacement(placement);
            var variation = data.placement.split("-")[1] || "";

            var flipOrder = [];

            switch (options.behavior) {
              case BEHAVIORS.FLIP:
                flipOrder = [placement, placementOpposite];
                break;
              case BEHAVIORS.CLOCKWISE:
                flipOrder = clockwise(placement);
                break;
              case BEHAVIORS.COUNTERCLOCKWISE:
                flipOrder = clockwise(placement, true);
                break;
              default:
                flipOrder = options.behavior;
            }

            flipOrder.forEach(function (step, index) {
              if (placement !== step || flipOrder.length === index + 1) {
                return data;
              }

              placement = data.placement.split("-")[0];
              placementOpposite = getOppositePlacement(placement);

              var popperOffsets = data.offsets.popper;
              var refOffsets = data.offsets.reference;

              // using floor because the reference offsets may contain decimals we are not going to consider here
              var floor = Math.floor;
              var overlapsRef =
                (placement === "left" &&
                  floor(popperOffsets.right) > floor(refOffsets.left)) ||
                (placement === "right" &&
                  floor(popperOffsets.left) < floor(refOffsets.right)) ||
                (placement === "top" &&
                  floor(popperOffsets.bottom) > floor(refOffsets.top)) ||
                (placement === "bottom" &&
                  floor(popperOffsets.top) < floor(refOffsets.bottom));

              var overflowsLeft =
                floor(popperOffsets.left) < floor(boundaries.left);
              var overflowsRight =
                floor(popperOffsets.right) > floor(boundaries.right);
              var overflowsTop =
                floor(popperOffsets.top) < floor(boundaries.top);
              var overflowsBottom =
                floor(popperOffsets.bottom) > floor(boundaries.bottom);

              var overflowsBoundaries =
                (placement === "left" && overflowsLeft) ||
                (placement === "right" && overflowsRight) ||
                (placement === "top" && overflowsTop) ||
                (placement === "bottom" && overflowsBottom);

              // flip the variation if required
              var isVertical = ["top", "bottom"].indexOf(placement) !== -1;

              // flips variation if reference element overflows boundaries
              var flippedVariationByRef =
                !!options.flipVariations &&
                ((isVertical && variation === "start" && overflowsLeft) ||
                  (isVertical && variation === "end" && overflowsRight) ||
                  (!isVertical && variation === "start" && overflowsTop) ||
                  (!isVertical && variation === "end" && overflowsBottom));

              // flips variation if popper content overflows boundaries
              var flippedVariationByContent =
                !!options.flipVariationsByContent &&
                ((isVertical && variation === "start" && overflowsRight) ||
                  (isVertical && variation === "end" && overflowsLeft) ||
                  (!isVertical && variation === "start" && overflowsBottom) ||
                  (!isVertical && variation === "end" && overflowsTop));

              var flippedVariation =
                flippedVariationByRef || flippedVariationByContent;

              if (overlapsRef || overflowsBoundaries || flippedVariation) {
                // this boolean to detect any flip loop
                data.flipped = true;

                if (overlapsRef || overflowsBoundaries) {
                  placement = flipOrder[index + 1];
                }

                if (flippedVariation) {
                  variation = getOppositeVariation(variation);
                }

                data.placement = placement + (variation ? "-" + variation : "");

                // this object contains `position`, we want to preserve it along with
                // any additional property we may add in the future
                data.offsets.popper = _extends(
                  {},
                  data.offsets.popper,
                  getPopperOffsets(
                    data.instance.popper,
                    data.offsets.reference,
                    data.placement
                  )
                );

                data = runModifiers(data.instance.modifiers, data, "flip");
              }
            });
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function keepTogether(data) {
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var placement = data.placement.split("-")[0];
            var floor = Math.floor;
            var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
            var side = isVertical ? "right" : "bottom";
            var opSide = isVertical ? "left" : "top";
            var measurement = isVertical ? "width" : "height";

            if (popper[side] < floor(reference[opSide])) {
              data.offsets.popper[opSide] =
                floor(reference[opSide]) - popper[measurement];
            }
            if (popper[opSide] > floor(reference[side])) {
              data.offsets.popper[opSide] = floor(reference[side]);
            }

            return data;
          }

          /**
           * Converts a string containing value + unit into a px value number
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} str - Value + unit string
           * @argument {String} measurement - `height` or `width`
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @returns {Number|String}
           * Value in pixels, or original string if no values were extracted
           */
          function toValue(str, measurement, popperOffsets, referenceOffsets) {
            // separate value from unit
            var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
            var value = +split[1];
            var unit = split[2];

            // If it's not a number it's an operator, I guess
            if (!value) {
              return str;
            }

            if (unit.indexOf("%") === 0) {
              var element = void 0;
              switch (unit) {
                case "%p":
                  element = popperOffsets;
                  break;
                case "%":
                case "%r":
                default:
                  element = referenceOffsets;
              }

              var rect = getClientRect(element);
              return (rect[measurement] / 100) * value;
            } else if (unit === "vh" || unit === "vw") {
              // if is a vh or vw, we calculate the size based on the viewport
              var size = void 0;
              if (unit === "vh") {
                size = Math.max(
                  document.documentElement.clientHeight,
                  window.innerHeight || 0
                );
              } else {
                size = Math.max(
                  document.documentElement.clientWidth,
                  window.innerWidth || 0
                );
              }
              return (size / 100) * value;
            } else {
              // if is an explicit pixel unit, we get rid of the unit and keep the value
              // if is an implicit unit, it's px, and we return just the value
              return value;
            }
          }

          /**
           * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
           * @function
           * @memberof {modifiers~offset}
           * @private
           * @argument {String} offset
           * @argument {Object} popperOffsets
           * @argument {Object} referenceOffsets
           * @argument {String} basePlacement
           * @returns {Array} a two cells array with x and y offsets in numbers
           */
          function parseOffset(
            offset,
            popperOffsets,
            referenceOffsets,
            basePlacement
          ) {
            var offsets = [0, 0];

            // Use height if placement is left or right and index is 0 otherwise use width
            // in this way the first offset will use an axis and the second one
            // will use the other one
            var useHeight = ["right", "left"].indexOf(basePlacement) !== -1;

            // Split the offset string to obtain a list of values and operands
            // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
            var fragments = offset.split(/(\+|\-)/).map(function (frag) {
              return frag.trim();
            });

            // Detect if the offset string contains a pair of values or a single one
            // they could be separated by comma or space
            var divider = fragments.indexOf(
              find(fragments, function (frag) {
                return frag.search(/,|\s/) !== -1;
              })
            );

            if (fragments[divider] && fragments[divider].indexOf(",") === -1) {
              console.warn(
                "Offsets separated by white space(s) are deprecated, use a comma (,) instead."
              );
            }

            // If divider is found, we divide the list of values and operands to divide
            // them by ofset X and Y.
            var splitRegex = /\s*,\s*|\s+/;
            var ops =
              divider !== -1
                ? [
                    fragments
                      .slice(0, divider)
                      .concat([fragments[divider].split(splitRegex)[0]]),
                    [fragments[divider].split(splitRegex)[1]].concat(
                      fragments.slice(divider + 1)
                    ),
                  ]
                : [fragments];

            // Convert the values with units to absolute pixels to allow our computations
            ops = ops.map(function (op, index) {
              // Most of the units rely on the orientation of the popper
              var measurement = (index === 1 ? !useHeight : useHeight)
                ? "height"
                : "width";
              var mergeWithPrevious = false;
              return (
                op
                  // This aggregates any `+` or `-` sign that aren't considered operators
                  // e.g.: 10 + +5 => [10, +, +5]
                  .reduce(function (a, b) {
                    if (
                      a[a.length - 1] === "" &&
                      ["+", "-"].indexOf(b) !== -1
                    ) {
                      a[a.length - 1] = b;
                      mergeWithPrevious = true;
                      return a;
                    } else if (mergeWithPrevious) {
                      a[a.length - 1] += b;
                      mergeWithPrevious = false;
                      return a;
                    } else {
                      return a.concat(b);
                    }
                  }, [])
                  // Here we convert the string values into number values (in px)
                  .map(function (str) {
                    return toValue(
                      str,
                      measurement,
                      popperOffsets,
                      referenceOffsets
                    );
                  })
              );
            });

            // Loop trough the offsets arrays and execute the operations
            ops.forEach(function (op, index) {
              op.forEach(function (frag, index2) {
                if (isNumeric(frag)) {
                  offsets[index] += frag * (op[index2 - 1] === "-" ? -1 : 1);
                }
              });
            });
            return offsets;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @argument {Number|String} options.offset=0
           * The offset value as described in the modifier description
           * @returns {Object} The data object, properly modified
           */
          function offset(data, _ref) {
            var offset = _ref.offset;
            var placement = data.placement,
              _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var basePlacement = placement.split("-")[0];

            var offsets = void 0;
            if (isNumeric(+offset)) {
              offsets = [+offset, 0];
            } else {
              offsets = parseOffset(offset, popper, reference, basePlacement);
            }

            if (basePlacement === "left") {
              popper.top += offsets[0];
              popper.left -= offsets[1];
            } else if (basePlacement === "right") {
              popper.top += offsets[0];
              popper.left += offsets[1];
            } else if (basePlacement === "top") {
              popper.left += offsets[0];
              popper.top -= offsets[1];
            } else if (basePlacement === "bottom") {
              popper.left += offsets[0];
              popper.top += offsets[1];
            }

            data.popper = popper;
            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function preventOverflow(data, options) {
            var boundariesElement =
              options.boundariesElement ||
              getOffsetParent(data.instance.popper);

            // If offsetParent is the reference element, we really want to
            // go one step up and use the next offsetParent as reference to
            // avoid to make this modifier completely useless and look like broken
            if (data.instance.reference === boundariesElement) {
              boundariesElement = getOffsetParent(boundariesElement);
            }

            // NOTE: DOM access here
            // resets the popper's position so that the document size can be calculated excluding
            // the size of the popper element itself
            var transformProp = getSupportedPropertyName("transform");
            var popperStyles = data.instance.popper.style; // assignment to help minification
            var top = popperStyles.top,
              left = popperStyles.left,
              transform = popperStyles[transformProp];

            popperStyles.top = "";
            popperStyles.left = "";
            popperStyles[transformProp] = "";

            var boundaries = getBoundaries(
              data.instance.popper,
              data.instance.reference,
              options.padding,
              boundariesElement,
              data.positionFixed
            );

            // NOTE: DOM access here
            // restores the original style properties after the offsets have been computed
            popperStyles.top = top;
            popperStyles.left = left;
            popperStyles[transformProp] = transform;

            options.boundaries = boundaries;

            var order = options.priority;
            var popper = data.offsets.popper;

            var check = {
              primary: function primary(placement) {
                var value = popper[placement];
                if (
                  popper[placement] < boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.max(popper[placement], boundaries[placement]);
                }
                return defineProperty({}, placement, value);
              },
              secondary: function secondary(placement) {
                var mainSide = placement === "right" ? "left" : "top";
                var value = popper[mainSide];
                if (
                  popper[placement] > boundaries[placement] &&
                  !options.escapeWithReference
                ) {
                  value = Math.min(
                    popper[mainSide],
                    boundaries[placement] -
                      (placement === "right" ? popper.width : popper.height)
                  );
                }
                return defineProperty({}, mainSide, value);
              },
            };

            order.forEach(function (placement) {
              var side =
                ["left", "top"].indexOf(placement) !== -1
                  ? "primary"
                  : "secondary";
              popper = _extends({}, popper, check[side](placement));
            });

            data.offsets.popper = popper;

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function shift(data) {
            var placement = data.placement;
            var basePlacement = placement.split("-")[0];
            var shiftvariation = placement.split("-")[1];

            // if shift shiftvariation is specified, run the modifier
            if (shiftvariation) {
              var _data$offsets = data.offsets,
                reference = _data$offsets.reference,
                popper = _data$offsets.popper;

              var isVertical = ["bottom", "top"].indexOf(basePlacement) !== -1;
              var side = isVertical ? "left" : "top";
              var measurement = isVertical ? "width" : "height";

              var shiftOffsets = {
                start: defineProperty({}, side, reference[side]),
                end: defineProperty(
                  {},
                  side,
                  reference[side] + reference[measurement] - popper[measurement]
                ),
              };

              data.offsets.popper = _extends(
                {},
                popper,
                shiftOffsets[shiftvariation]
              );
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by update method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function hide(data) {
            if (
              !isModifierRequired(
                data.instance.modifiers,
                "hide",
                "preventOverflow"
              )
            ) {
              return data;
            }

            var refRect = data.offsets.reference;
            var bound = find(data.instance.modifiers, function (modifier) {
              return modifier.name === "preventOverflow";
            }).boundaries;

            if (
              refRect.bottom < bound.top ||
              refRect.left > bound.right ||
              refRect.top > bound.bottom ||
              refRect.right < bound.left
            ) {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === true) {
                return data;
              }

              data.hide = true;
              data.attributes["x-out-of-boundaries"] = "";
            } else {
              // Avoid unnecessary DOM access if visibility hasn't changed
              if (data.hide === false) {
                return data;
              }

              data.hide = false;
              data.attributes["x-out-of-boundaries"] = false;
            }

            return data;
          }

          /**
           * @function
           * @memberof Modifiers
           * @argument {Object} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {Object} The data object, properly modified
           */
          function inner(data) {
            var placement = data.placement;
            var basePlacement = placement.split("-")[0];
            var _data$offsets = data.offsets,
              popper = _data$offsets.popper,
              reference = _data$offsets.reference;

            var isHoriz = ["left", "right"].indexOf(basePlacement) !== -1;

            var subtractLength = ["top", "left"].indexOf(basePlacement) === -1;

            popper[isHoriz ? "left" : "top"] =
              reference[basePlacement] -
              (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);

            data.placement = getOppositePlacement(placement);
            data.offsets.popper = getClientRect(popper);

            return data;
          }

          /**
           * Modifier function, each modifier can have a function of this type assigned
           * to its `fn` property.<br />
           * These functions will be called on each update, this means that you must
           * make sure they are performant enough to avoid performance bottlenecks.
           *
           * @function ModifierFn
           * @argument {dataObject} data - The data object generated by `update` method
           * @argument {Object} options - Modifiers configuration and options
           * @returns {dataObject} The data object, properly modified
           */

          /**
           * Modifiers are plugins used to alter the behavior of your poppers.<br />
           * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
           * needed by the library.
           *
           * Usually you don't want to override the `order`, `fn` and `onLoad` props.
           * All the other properties are configurations that could be tweaked.
           * @namespace modifiers
           */
          var modifiers = {
            /**
             * Modifier used to shift the popper on the start or end of its reference
             * element.<br />
             * It will read the variation of the `placement` property.<br />
             * It can be one either `-end` or `-start`.
             * @memberof modifiers
             * @inner
             */
            shift: {
              /** @prop {number} order=100 - Index used to define the order of execution */
              order: 100,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: shift,
            },

            /**
             * The `offset` modifier can shift your popper on both its axis.
             *
             * It accepts the following units:
             * - `px` or unit-less, interpreted as pixels
             * - `%` or `%r`, percentage relative to the length of the reference element
             * - `%p`, percentage relative to the length of the popper element
             * - `vw`, CSS viewport width unit
             * - `vh`, CSS viewport height unit
             *
             * For length is intended the main axis relative to the placement of the popper.<br />
             * This means that if the placement is `top` or `bottom`, the length will be the
             * `width`. In case of `left` or `right`, it will be the `height`.
             *
             * You can provide a single value (as `Number` or `String`), or a pair of values
             * as `String` divided by a comma or one (or more) white spaces.<br />
             * The latter is a deprecated method because it leads to confusion and will be
             * removed in v2.<br />
             * Additionally, it accepts additions and subtractions between different units.
             * Note that multiplications and divisions aren't supported.
             *
             * Valid examples are:
             * ```
             * 10
             * '10%'
             * '10, 10'
             * '10%, 10'
             * '10 + 10%'
             * '10 - 5vh + 3%'
             * '-10px + 5vh, 5px - 6%'
             * ```
             * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
             * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
             * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
             *
             * @memberof modifiers
             * @inner
             */
            offset: {
              /** @prop {number} order=200 - Index used to define the order of execution */
              order: 200,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: offset,
              /** @prop {Number|String} offset=0
               * The offset value as described in the modifier description
               */
              offset: 0,
            },

            /**
             * Modifier used to prevent the popper from being positioned outside the boundary.
             *
             * A scenario exists where the reference itself is not within the boundaries.<br />
             * We can say it has "escaped the boundaries" — or just "escaped".<br />
             * In this case we need to decide whether the popper should either:
             *
             * - detach from the reference and remain "trapped" in the boundaries, or
             * - if it should ignore the boundary and "escape with its reference"
             *
             * When `escapeWithReference` is set to`true` and reference is completely
             * outside its boundaries, the popper will overflow (or completely leave)
             * the boundaries in order to remain attached to the edge of the reference.
             *
             * @memberof modifiers
             * @inner
             */
            preventOverflow: {
              /** @prop {number} order=300 - Index used to define the order of execution */
              order: 300,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: preventOverflow,
              /**
               * @prop {Array} [priority=['left','right','top','bottom']]
               * Popper will try to prevent overflow following these priorities by default,
               * then, it could overflow on the left and on top of the `boundariesElement`
               */
              priority: ["left", "right", "top", "bottom"],
              /**
               * @prop {number} padding=5
               * Amount of pixel used to define a minimum distance between the boundaries
               * and the popper. This makes sure the popper always has a little padding
               * between the edges of its container
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='scrollParent'
               * Boundaries used by the modifier. Can be `scrollParent`, `window`,
               * `viewport` or any DOM element.
               */
              boundariesElement: "scrollParent",
            },

            /**
             * Modifier used to make sure the reference and its popper stay near each other
             * without leaving any gap between the two. Especially useful when the arrow is
             * enabled and you want to ensure that it points to its reference element.
             * It cares only about the first axis. You can still have poppers with margin
             * between the popper and its reference element.
             * @memberof modifiers
             * @inner
             */
            keepTogether: {
              /** @prop {number} order=400 - Index used to define the order of execution */
              order: 400,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: keepTogether,
            },

            /**
             * This modifier is used to move the `arrowElement` of the popper to make
             * sure it is positioned between the reference element and its popper element.
             * It will read the outer size of the `arrowElement` node to detect how many
             * pixels of conjunction are needed.
             *
             * It has no effect if no `arrowElement` is provided.
             * @memberof modifiers
             * @inner
             */
            arrow: {
              /** @prop {number} order=500 - Index used to define the order of execution */
              order: 500,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: arrow,
              /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
              element: "[x-arrow]",
            },

            /**
             * Modifier used to flip the popper's placement when it starts to overlap its
             * reference element.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             *
             * **NOTE:** this modifier will interrupt the current update cycle and will
             * restart it if it detects the need to flip the placement.
             * @memberof modifiers
             * @inner
             */
            flip: {
              /** @prop {number} order=600 - Index used to define the order of execution */
              order: 600,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: flip,
              /**
               * @prop {String|Array} behavior='flip'
               * The behavior used to change the popper's placement. It can be one of
               * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
               * placements (with optional variations)
               */
              behavior: "flip",
              /**
               * @prop {number} padding=5
               * The popper will flip if it hits the edges of the `boundariesElement`
               */
              padding: 5,
              /**
               * @prop {String|HTMLElement} boundariesElement='viewport'
               * The element which will define the boundaries of the popper position.
               * The popper will never be placed outside of the defined boundaries
               * (except if `keepTogether` is enabled)
               */
              boundariesElement: "viewport",
              /**
               * @prop {Boolean} flipVariations=false
               * The popper will switch placement variation between `-start` and `-end` when
               * the reference element overlaps its boundaries.
               *
               * The original placement should have a set variation.
               */
              flipVariations: false,
              /**
               * @prop {Boolean} flipVariationsByContent=false
               * The popper will switch placement variation between `-start` and `-end` when
               * the popper element overlaps its reference boundaries.
               *
               * The original placement should have a set variation.
               */
              flipVariationsByContent: false,
            },

            /**
             * Modifier used to make the popper flow toward the inner of the reference element.
             * By default, when this modifier is disabled, the popper will be placed outside
             * the reference element.
             * @memberof modifiers
             * @inner
             */
            inner: {
              /** @prop {number} order=700 - Index used to define the order of execution */
              order: 700,
              /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
              enabled: false,
              /** @prop {ModifierFn} */
              fn: inner,
            },

            /**
             * Modifier used to hide the popper when its reference element is outside of the
             * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
             * be used to hide with a CSS selector the popper when its reference is
             * out of boundaries.
             *
             * Requires the `preventOverflow` modifier before it in order to work.
             * @memberof modifiers
             * @inner
             */
            hide: {
              /** @prop {number} order=800 - Index used to define the order of execution */
              order: 800,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: hide,
            },

            /**
             * Computes the style that will be applied to the popper element to gets
             * properly positioned.
             *
             * Note that this modifier will not touch the DOM, it just prepares the styles
             * so that `applyStyle` modifier can apply it. This separation is useful
             * in case you need to replace `applyStyle` with a custom implementation.
             *
             * This modifier has `850` as `order` value to maintain backward compatibility
             * with previous versions of Popper.js. Expect the modifiers ordering method
             * to change in future major versions of the library.
             *
             * @memberof modifiers
             * @inner
             */
            computeStyle: {
              /** @prop {number} order=850 - Index used to define the order of execution */
              order: 850,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: computeStyle,
              /**
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: true,
              /**
               * @prop {string} [x='bottom']
               * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
               * Change this if your popper should grow in a direction different from `bottom`
               */
              x: "bottom",
              /**
               * @prop {string} [x='left']
               * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
               * Change this if your popper should grow in a direction different from `right`
               */
              y: "right",
            },

            /**
             * Applies the computed styles to the popper element.
             *
             * All the DOM manipulations are limited to this modifier. This is useful in case
             * you want to integrate Popper.js inside a framework or view library and you
             * want to delegate all the DOM manipulations to it.
             *
             * Note that if you disable this modifier, you must make sure the popper element
             * has its position set to `absolute` before Popper.js can do its work!
             *
             * Just disable this modifier and define your own to achieve the desired effect.
             *
             * @memberof modifiers
             * @inner
             */
            applyStyle: {
              /** @prop {number} order=900 - Index used to define the order of execution */
              order: 900,
              /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
              enabled: true,
              /** @prop {ModifierFn} */
              fn: applyStyle,
              /** @prop {Function} */
              onLoad: applyStyleOnLoad,
              /**
               * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
               * @prop {Boolean} gpuAcceleration=true
               * If true, it uses the CSS 3D transformation to position the popper.
               * Otherwise, it will use the `top` and `left` properties
               */
              gpuAcceleration: undefined,
            },
          };

          /**
           * The `dataObject` is an object containing all the information used by Popper.js.
           * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
           * @name dataObject
           * @property {Object} data.instance The Popper.js instance
           * @property {String} data.placement Placement applied to popper
           * @property {String} data.originalPlacement Placement originally defined on init
           * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
           * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
           * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
           * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
           * @property {Object} data.boundaries Offsets of the popper boundaries
           * @property {Object} data.offsets The measurements of popper, reference and arrow elements
           * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
           * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
           */

          /**
           * Default options provided to Popper.js constructor.<br />
           * These can be overridden using the `options` argument of Popper.js.<br />
           * To override an option, simply pass an object with the same
           * structure of the `options` object, as the 3rd argument. For example:
           * ```
           * new Popper(ref, pop, {
           *   modifiers: {
           *     preventOverflow: { enabled: false }
           *   }
           * })
           * ```
           * @type {Object}
           * @static
           * @memberof Popper
           */
          var Defaults = {
            /**
             * Popper's placement.
             * @prop {Popper.placements} placement='bottom'
             */
            placement: "bottom",

            /**
             * Set this to true if you want popper to position it self in 'fixed' mode
             * @prop {Boolean} positionFixed=false
             */
            positionFixed: false,

            /**
             * Whether events (resize, scroll) are initially enabled.
             * @prop {Boolean} eventsEnabled=true
             */
            eventsEnabled: true,

            /**
             * Set to true if you want to automatically remove the popper when
             * you call the `destroy` method.
             * @prop {Boolean} removeOnDestroy=false
             */
            removeOnDestroy: false,

            /**
             * Callback called when the popper is created.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onCreate}
             */
            onCreate: function onCreate() {},

            /**
             * Callback called when the popper is updated. This callback is not called
             * on the initialization/creation of the popper, but only on subsequent
             * updates.<br />
             * By default, it is set to no-op.<br />
             * Access Popper.js instance with `data.instance`.
             * @prop {onUpdate}
             */
            onUpdate: function onUpdate() {},

            /**
             * List of modifiers used to modify the offsets before they are applied to the popper.
             * They provide most of the functionalities of Popper.js.
             * @prop {modifiers}
             */
            modifiers: modifiers,
          };

          /**
           * @callback onCreate
           * @param {dataObject} data
           */

          /**
           * @callback onUpdate
           * @param {dataObject} data
           */

          // Utils
          // Methods
          var Popper = (function () {
            /**
             * Creates a new Popper.js instance.
             * @class Popper
             * @param {Element|referenceObject} reference - The reference element used to position the popper
             * @param {Element} popper - The HTML / XML element used as the popper
             * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
             * @return {Object} instance - The generated Popper.js instance
             */
            function Popper(reference, popper) {
              var _this = this;

              var options =
                arguments.length > 2 && arguments[2] !== undefined
                  ? arguments[2]
                  : {};
              classCallCheck(this, Popper);

              this.scheduleUpdate = function () {
                return requestAnimationFrame(_this.update);
              };

              // make update() debounced, so that it only runs at most once-per-tick
              this.update = debounce(this.update.bind(this));

              // with {} we create a new object with the options inside it
              this.options = _extends({}, Popper.Defaults, options);

              // init state
              this.state = {
                isDestroyed: false,
                isCreated: false,
                scrollParents: [],
              };

              // get reference and popper elements (allow jQuery wrappers)
              this.reference =
                reference && reference.jquery ? reference[0] : reference;
              this.popper = popper && popper.jquery ? popper[0] : popper;

              // Deep merge modifiers options
              this.options.modifiers = {};
              Object.keys(
                _extends({}, Popper.Defaults.modifiers, options.modifiers)
              ).forEach(function (name) {
                _this.options.modifiers[name] = _extends(
                  {},
                  Popper.Defaults.modifiers[name] || {},
                  options.modifiers ? options.modifiers[name] : {}
                );
              });

              // Refactoring modifiers' list (Object => Array)
              this.modifiers = Object.keys(this.options.modifiers)
                .map(function (name) {
                  return _extends(
                    {
                      name: name,
                    },
                    _this.options.modifiers[name]
                  );
                })
                // sort the modifiers by order
                .sort(function (a, b) {
                  return a.order - b.order;
                });

              // modifiers have the ability to execute arbitrary code when Popper.js get inited
              // such code is executed in the same order of its modifier
              // they could add new properties to their options configuration
              // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
              this.modifiers.forEach(function (modifierOptions) {
                if (
                  modifierOptions.enabled &&
                  isFunction(modifierOptions.onLoad)
                ) {
                  modifierOptions.onLoad(
                    _this.reference,
                    _this.popper,
                    _this.options,
                    modifierOptions,
                    _this.state
                  );
                }
              });

              // fire the first update to position the popper in the right place
              this.update();

              var eventsEnabled = this.options.eventsEnabled;
              if (eventsEnabled) {
                // setup event listeners, they will take care of update the position in specific situations
                this.enableEventListeners();
              }

              this.state.eventsEnabled = eventsEnabled;
            }

            // We can't use class properties because they don't get listed in the
            // class prototype and break stuff like Sinon stubs

            createClass(Popper, [
              {
                key: "update",
                value: function update$$1() {
                  return update.call(this);
                },
              },
              {
                key: "destroy",
                value: function destroy$$1() {
                  return destroy.call(this);
                },
              },
              {
                key: "enableEventListeners",
                value: function enableEventListeners$$1() {
                  return enableEventListeners.call(this);
                },
              },
              {
                key: "disableEventListeners",
                value: function disableEventListeners$$1() {
                  return disableEventListeners.call(this);
                },

                /**
                 * Schedules an update. It will run on the next UI update available.
                 * @method scheduleUpdate
                 * @memberof Popper
                 */

                /**
                 * Collection of utilities useful when writing custom modifiers.
                 * Starting from version 1.7, this method is available only if you
                 * include `popper-utils.js` before `popper.js`.
                 *
                 * **DEPRECATION**: This way to access PopperUtils is deprecated
                 * and will be removed in v2! Use the PopperUtils module directly instead.
                 * Due to the high instability of the methods contained in Utils, we can't
                 * guarantee them to follow semver. Use them at your own risk!
                 * @static
                 * @private
                 * @type {Object}
                 * @deprecated since version 1.8
                 * @member Utils
                 * @memberof Popper
                 */
              },
            ]);
            return Popper;
          })();

          /**
           * The `referenceObject` is an object that provides an interface compatible with Popper.js
           * and lets you use it as replacement of a real DOM node.<br />
           * You can use this method to position a popper relatively to a set of coordinates
           * in case you don't have a DOM node to use as reference.
           *
           * ```
           * new Popper(referenceObject, popperNode);
           * ```
           *
           * NB: This feature isn't supported in Internet Explorer 10.
           * @name referenceObject
           * @property {Function} data.getBoundingClientRect
           * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
           * @property {number} data.clientWidth
           * An ES6 getter that will return the width of the virtual reference element.
           * @property {number} data.clientHeight
           * An ES6 getter that will return the height of the virtual reference element.
           */

          Popper.Utils = (typeof window !== "undefined"
            ? window
            : global
          ).PopperUtils;
          Popper.placements = placements;
          Popper.Defaults = Defaults;

          /* harmony default export */ __webpack_exports__["a"] = Popper;
          //# sourceMappingURL=popper.js.map

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 246 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            0
          );
          /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
            react__WEBPACK_IMPORTED_MODULE_0__
          );

          /**
           * Detect Element Resize.
           * https://github.com/sdecima/javascript-detect-element-resize
           * Sebastian Decima
           *
           * Forked from version 0.5.3; includes the following modifications:
           * 1) Guard against unsafe 'window' and 'document' references (to support SSR).
           * 2) Defer initialization code via a top-level function wrapper (to support SSR).
           * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.
           * 4) Add nonce for style element.
           **/

          function createDetectElementResize(nonce) {
            // Check `document` and `window` in case of server-side rendering
            var _window;
            if (typeof window !== "undefined") {
              _window = window;
            } else if (typeof self !== "undefined") {
              _window = self;
            } else {
              _window = global;
            }

            var attachEvent =
              typeof document !== "undefined" && document.attachEvent;

            if (!attachEvent) {
              var requestFrame = (function () {
                var raf =
                  _window.requestAnimationFrame ||
                  _window.mozRequestAnimationFrame ||
                  _window.webkitRequestAnimationFrame ||
                  function (fn) {
                    return _window.setTimeout(fn, 20);
                  };
                return function (fn) {
                  return raf(fn);
                };
              })();

              var cancelFrame = (function () {
                var cancel =
                  _window.cancelAnimationFrame ||
                  _window.mozCancelAnimationFrame ||
                  _window.webkitCancelAnimationFrame ||
                  _window.clearTimeout;
                return function (id) {
                  return cancel(id);
                };
              })();

              var resetTriggers = function resetTriggers(element) {
                var triggers = element.__resizeTriggers__,
                  expand = triggers.firstElementChild,
                  contract = triggers.lastElementChild,
                  expandChild = expand.firstElementChild;
                contract.scrollLeft = contract.scrollWidth;
                contract.scrollTop = contract.scrollHeight;
                expandChild.style.width = expand.offsetWidth + 1 + "px";
                expandChild.style.height = expand.offsetHeight + 1 + "px";
                expand.scrollLeft = expand.scrollWidth;
                expand.scrollTop = expand.scrollHeight;
              };

              var checkTriggers = function checkTriggers(element) {
                return (
                  element.offsetWidth != element.__resizeLast__.width ||
                  element.offsetHeight != element.__resizeLast__.height
                );
              };

              var scrollListener = function scrollListener(e) {
                // Don't measure (which forces) reflow for scrolls that happen inside of children!
                if (
                  e.target.className &&
                  typeof e.target.className.indexOf === "function" &&
                  e.target.className.indexOf("contract-trigger") < 0 &&
                  e.target.className.indexOf("expand-trigger") < 0
                ) {
                  return;
                }

                var element = this;
                resetTriggers(this);
                if (this.__resizeRAF__) {
                  cancelFrame(this.__resizeRAF__);
                }
                this.__resizeRAF__ = requestFrame(function () {
                  if (checkTriggers(element)) {
                    element.__resizeLast__.width = element.offsetWidth;
                    element.__resizeLast__.height = element.offsetHeight;
                    element.__resizeListeners__.forEach(function (fn) {
                      fn.call(element, e);
                    });
                  }
                });
              };

              /* Detect CSS Animations support to detect element display/re-attach */
              var animation = false,
                keyframeprefix = "",
                animationstartevent = "animationstart",
                domPrefixes = "Webkit Moz O ms".split(" "),
                startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(
                  " "
                ),
                pfx = "";
              {
                var elm = document.createElement("fakeelement");
                if (elm.style.animationName !== undefined) {
                  animation = true;
                }

                if (animation === false) {
                  for (var i = 0; i < domPrefixes.length; i++) {
                    if (
                      elm.style[domPrefixes[i] + "AnimationName"] !== undefined
                    ) {
                      pfx = domPrefixes[i];
                      keyframeprefix = "-" + pfx.toLowerCase() + "-";
                      animationstartevent = startEvents[i];
                      animation = true;
                      break;
                    }
                  }
                }
              }

              var animationName = "resizeanim";
              var animationKeyframes =
                "@" +
                keyframeprefix +
                "keyframes " +
                animationName +
                " { from { opacity: 0; } to { opacity: 0; } } ";
              var animationStyle =
                keyframeprefix + "animation: 1ms " + animationName + "; ";
            }

            var createStyles = function createStyles(doc) {
              if (!doc.getElementById("detectElementResize")) {
                //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360
                var css =
                    (animationKeyframes ? animationKeyframes : "") +
                    ".resize-triggers { " +
                    (animationStyle ? animationStyle : "") +
                    "visibility: hidden; opacity: 0; } " +
                    '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                  head = doc.head || doc.getElementsByTagName("head")[0],
                  style = doc.createElement("style");

                style.id = "detectElementResize";
                style.type = "text/css";

                if (nonce != null) {
                  style.setAttribute("nonce", nonce);
                }

                if (style.styleSheet) {
                  style.styleSheet.cssText = css;
                } else {
                  style.appendChild(doc.createTextNode(css));
                }

                head.appendChild(style);
              }
            };

            var addResizeListener = function addResizeListener(element, fn) {
              if (attachEvent) {
                element.attachEvent("onresize", fn);
              } else {
                if (!element.__resizeTriggers__) {
                  var doc = element.ownerDocument;
                  var elementStyle = _window.getComputedStyle(element);
                  if (elementStyle && elementStyle.position == "static") {
                    element.style.position = "relative";
                  }
                  createStyles(doc);
                  element.__resizeLast__ = {};
                  element.__resizeListeners__ = [];
                  (element.__resizeTriggers__ = doc.createElement(
                    "div"
                  )).className = "resize-triggers";
                  var expandTrigger = doc.createElement("div");
                  expandTrigger.className = "expand-trigger";
                  expandTrigger.appendChild(doc.createElement("div"));
                  var contractTrigger = doc.createElement("div");
                  contractTrigger.className = "contract-trigger";
                  element.__resizeTriggers__.appendChild(expandTrigger);
                  element.__resizeTriggers__.appendChild(contractTrigger);
                  element.appendChild(element.__resizeTriggers__);
                  resetTriggers(element);
                  element.addEventListener("scroll", scrollListener, true);

                  /* Listen for a css animation to detect element display/re-attach */
                  if (animationstartevent) {
                    element.__resizeTriggers__.__animationListener__ = function animationListener(
                      e
                    ) {
                      if (e.animationName == animationName) {
                        resetTriggers(element);
                      }
                    };
                    element.__resizeTriggers__.addEventListener(
                      animationstartevent,
                      element.__resizeTriggers__.__animationListener__
                    );
                  }
                }
                element.__resizeListeners__.push(fn);
              }
            };

            var removeResizeListener = function removeResizeListener(
              element,
              fn
            ) {
              if (attachEvent) {
                element.detachEvent("onresize", fn);
              } else {
                element.__resizeListeners__.splice(
                  element.__resizeListeners__.indexOf(fn),
                  1
                );
                if (!element.__resizeListeners__.length) {
                  element.removeEventListener("scroll", scrollListener, true);
                  if (element.__resizeTriggers__.__animationListener__) {
                    element.__resizeTriggers__.removeEventListener(
                      animationstartevent,
                      element.__resizeTriggers__.__animationListener__
                    );
                    element.__resizeTriggers__.__animationListener__ = null;
                  }
                  try {
                    element.__resizeTriggers__ = !element.removeChild(
                      element.__resizeTriggers__
                    );
                  } catch (e) {
                    // Preact compat; see developit/preact-compat/issues/228
                  }
                }
              }
            };

            return {
              addResizeListener: addResizeListener,
              removeResizeListener: removeResizeListener,
            };
          }

          var classCallCheck = function (instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          };

          var createClass = (function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps)
                defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          })();

          var _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          var inherits = function (subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError(
                "Super expression must either be null or a function, not " +
                  typeof superClass
              );
            }

            subClass.prototype = Object.create(
              superClass && superClass.prototype,
              {
                constructor: {
                  value: subClass,
                  enumerable: false,
                  writable: true,
                  configurable: true,
                },
              }
            );
            if (superClass)
              Object.setPrototypeOf
                ? Object.setPrototypeOf(subClass, superClass)
                : (subClass.__proto__ = superClass);
          };

          var possibleConstructorReturn = function (self, call) {
            if (!self) {
              throw new ReferenceError(
                "this hasn't been initialised - super() hasn't been called"
              );
            }

            return call &&
              (typeof call === "object" || typeof call === "function")
              ? call
              : self;
          };

          var AutoSizer = (function (_React$PureComponent) {
            inherits(AutoSizer, _React$PureComponent);

            function AutoSizer() {
              var _ref;

              var _temp, _this, _ret;

              classCallCheck(this, AutoSizer);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret =
                  ((_temp =
                    ((_this = possibleConstructorReturn(
                      this,
                      (_ref =
                        AutoSizer.__proto__ ||
                        Object.getPrototypeOf(AutoSizer)).call.apply(
                        _ref,
                        [this].concat(args)
                      )
                    )),
                    _this)),
                  (_this.state = {
                    height: _this.props.defaultHeight || 0,
                    width: _this.props.defaultWidth || 0,
                  }),
                  (_this._onResize = function () {
                    var _this$props = _this.props,
                      disableHeight = _this$props.disableHeight,
                      disableWidth = _this$props.disableWidth,
                      onResize = _this$props.onResize;

                    if (_this._parentNode) {
                      // Guard against AutoSizer component being removed from the DOM immediately after being added.
                      // This can result in invalid style values which can result in NaN values if we don't handle them.
                      // See issue #150 for more context.

                      var _height = _this._parentNode.offsetHeight || 0;
                      var _width = _this._parentNode.offsetWidth || 0;

                      var _style =
                        window.getComputedStyle(_this._parentNode) || {};
                      var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;
                      var paddingRight = parseInt(_style.paddingRight, 10) || 0;
                      var paddingTop = parseInt(_style.paddingTop, 10) || 0;
                      var paddingBottom =
                        parseInt(_style.paddingBottom, 10) || 0;

                      var newHeight = _height - paddingTop - paddingBottom;
                      var newWidth = _width - paddingLeft - paddingRight;

                      if (
                        (!disableHeight && _this.state.height !== newHeight) ||
                        (!disableWidth && _this.state.width !== newWidth)
                      ) {
                        _this.setState({
                          height: _height - paddingTop - paddingBottom,
                          width: _width - paddingLeft - paddingRight,
                        });

                        onResize({ height: _height, width: _width });
                      }
                    }
                  }),
                  (_this._setRef = function (autoSizer) {
                    _this._autoSizer = autoSizer;
                  }),
                  _temp)),
                possibleConstructorReturn(_this, _ret)
              );
            }

            createClass(AutoSizer, [
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  var nonce = this.props.nonce;

                  if (
                    this._autoSizer &&
                    this._autoSizer.parentNode &&
                    this._autoSizer.parentNode.ownerDocument &&
                    this._autoSizer.parentNode.ownerDocument.defaultView &&
                    this._autoSizer.parentNode instanceof
                      this._autoSizer.parentNode.ownerDocument.defaultView
                        .HTMLElement
                  ) {
                    // Delay access of parentNode until mount.
                    // This handles edge-cases where the component has already been unmounted before its ref has been set,
                    // As well as libraries like react-lite which have a slightly different lifecycle.
                    this._parentNode = this._autoSizer.parentNode;

                    // Defer requiring resize handler in order to support server-side rendering.
                    // See issue #41
                    this._detectElementResize = createDetectElementResize(
                      nonce
                    );
                    this._detectElementResize.addResizeListener(
                      this._parentNode,
                      this._onResize
                    );

                    this._onResize();
                  }
                },
              },
              {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                  if (this._detectElementResize && this._parentNode) {
                    this._detectElementResize.removeResizeListener(
                      this._parentNode,
                      this._onResize
                    );
                  }
                },
              },
              {
                key: "render",
                value: function render() {
                  var _props = this.props,
                    children = _props.children,
                    className = _props.className,
                    disableHeight = _props.disableHeight,
                    disableWidth = _props.disableWidth,
                    style = _props.style;
                  var _state = this.state,
                    height = _state.height,
                    width = _state.width;

                  // Outer div should not force width/height since that may prevent containers from shrinking.
                  // Inner component should overflow and use calculated width/height.
                  // See issue #68 for more information.

                  var outerStyle = { overflow: "visible" };
                  var childParams = {};

                  // Avoid rendering children before the initial measurements have been collected.
                  // At best this would just be wasting cycles.
                  var bailoutOnChildren = false;

                  if (!disableHeight) {
                    if (height === 0) {
                      bailoutOnChildren = true;
                    }
                    outerStyle.height = 0;
                    childParams.height = height;
                  }

                  if (!disableWidth) {
                    if (width === 0) {
                      bailoutOnChildren = true;
                    }
                    outerStyle.width = 0;
                    childParams.width = width;
                  }

                  return Object(
                    react__WEBPACK_IMPORTED_MODULE_0__["createElement"]
                  )(
                    "div",
                    {
                      className: className,
                      ref: this._setRef,
                      style: _extends({}, outerStyle, style),
                    },
                    !bailoutOnChildren && children(childParams)
                  );
                },
              },
            ]);
            return AutoSizer;
          })(react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"]);

          AutoSizer.defaultProps = {
            onResize: function onResize() {},
            disableHeight: false,
            disableWidth: false,
            style: {},
          };

          /* harmony default export */ __webpack_exports__["a"] = AutoSizer;

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 247 */
      /***/ function (module, exports, __webpack_require__) {
        // Imports
        var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(444);
        exports = ___CSS_LOADER_API_IMPORT___(false);
        // Module
        exports.push([
          module.i,
          '*{box-sizing:border-box}.mr-sm{margin-right:8px}.react-frames-container{width:100%;height:86px;padding:0 16px;margin-bottom:6px}.dark-mode{--hover-filter: brightness(150%)}.light-mode{--hover-filter: brightness(50%)}.App{position:unset}.outer-frame-container .frame-container{display:flex;justify-content:center;height:76px;position:relative}.outer-frame-container .frame-container.darken:after{content:"\\a";position:absolute;width:100%;height:100%;top:0;left:0;background:rgba(0,0,0,.4);opacity:1}.outer-frame-container .frame-container .frame{width:104px;height:60px;border-radius:4px;position:relative;top:8px;cursor:pointer;border:2px solid var(--gray-4);display:flex;flex-direction:column}.outer-frame-container .frame-container .frame.is-selected{top:6px}.outer-frame-container .frame-container .frame.is-current-frame{border:2px solid #3183c8}.outer-frame-container .frame-container .frame .innerFrame{flex:1}.outer-frame-container .frame-container .frame .innerFrame canvas{border-top-left-radius:2px;border-top-right-radius:2px;vertical-align:middle}.video-controls{background:var(--panel-background);padding-bottom:2px;width:100%;bottom:0px;left:0px;z-index:30}.formatted-timeframe{font-size:17px;color:var(--faded-text)}.buttons-container{display:flex;justify-content:space-between;padding:25px 6px 10px 6px;background:var(--panel-background);position:relative}.buttons-container .video-buttons{display:flex;align-items:center}.buttons-container .video-buttons.center{position:absolute;left:50%;transform:translateX(-50%)}.buttons-container .video-buttons button{padding:0 6px;border:none;background-color:transparent;outline:none;cursor:pointer}.buttons-container .video-buttons button svg{fill:var(--icon-color)}.buttons-container .video-buttons button .icon{width:22px;height:22px}.buttons-container .video-buttons .video-button:hover{filter:var(--hover-filter)}.buttons-container .video-buttons .button-with-menu{position:relative;height:25px}.buttons-container .video-buttons .button-with-menu button{font-size:16px;color:var(--faded-text)}.buttons-container .video-buttons .button-with-menu .menu-popup-container{background:var(--panel-background);box-shadow:0px 0px 4px #868e96}.buttons-container .video-buttons .button-with-menu .menu-popup-option-active{color:#4278af}.buttons-container .video-buttons .button-with-menu ul{position:absolute;list-style:none;padding:0;bottom:20px;left:50%;transform:translateX(-50%);z-index:50}.buttons-container .video-buttons .button-with-menu li{padding:.6rem .3rem;margin:0 .2rem;font-family:Lato;font-style:normal;font-weight:normal;font-size:14px;line-height:17px;text-align:center;color:var(--text-color);cursor:pointer}.buttons-container .video-buttons .button-with-menu li:hover{filter:opacity(70%)}.buttons-container .video-buttons .button-with-menu li:not(:last-child){border-bottom:.5px solid rgba(174,181,188,.3)}.buttons-container .video-buttons .button-with-menu button:hover{filter:var(--hover-filter)}.buttons-container .video-buttons .volume-button-container{display:flex}.buttons-container .video-buttons .volume-button-container:hover>.volume-slider{opacity:1;width:7.5em;height:1.2em}.buttons-container .video-buttons .volume-button:hover{filter:var(--hover-filter)}.buttons-container .video-buttons .volume-slider{--min: 0;--max: 100;--val: 50;--range: calc(var(--max) - var(--min));--ratio: calc((var(--val) - var(--min)) / var(--range));--sx: calc(0.5 *1.2em + var(--ratio) * (100% - 1.2em));opacity:0;width:0;transition:width .25s ease-out,opacity .25s ease-out;padding:0;margin-right:0;border:none;background:transparent;cursor:pointer}.buttons-container .video-buttons .volume-slider,.buttons-container .video-buttons .volume-slider::-webkit-slider-thumb{-webkit-appearance:none}.buttons-container .video-buttons .volume-slider::-webkit-slider-runnable-track{box-sizing:border-box;border:none;width:7.5em;height:.25em;background:#adb5bd;background:linear-gradient(var(--ribbon-active-color), var(--ribbon-active-color)) 0/var(--sx) 100% no-repeat #adb5bd}.buttons-container .video-buttons .volume-slider::-moz-range-track{box-sizing:border-box;border:none;width:7.5em;height:.25em;background:#adb5bd}.buttons-container .video-buttons .volume-slider::-ms-track{box-sizing:border-box;border:none;width:7.5em;height:.25em;background:#adb5bd}.buttons-container .video-buttons .volume-slider::-moz-range-progress{height:.25em;background:var(--ribbon-active-color)}.buttons-container .video-buttons .volume-slider::-ms-fill-lower{height:.25em;background:var(--ribbon-active-color)}.buttons-container .video-buttons .volume-slider::-webkit-slider-thumb{margin-top:-0.475em;box-sizing:border-box;border:none;width:1.2em;height:1.2em;border-radius:50%;background:var(--ribbon-active-color)}.buttons-container .video-buttons .volume-slider::-moz-range-thumb{box-sizing:border-box;border:none;width:1.2em;height:1.2em;border-radius:50%;background:var(--ribbon-active-color)}.buttons-container .video-buttons .volume-slider::-ms-thumb{margin-top:0;box-sizing:border-box;border:none;width:1.2em;height:1.2em;border-radius:50%;background:var(--ribbon-active-color)}.buttons-container .video-buttons .volume-slider::-ms-tooltip{display:none}.divider{width:100%;height:1px;background:#000}.timeline-container{display:flex;justify-content:center;align-items:center;flex-direction:column}.timeline-container .timeline{position:relative;width:100%}.timeline-container .timeline .progress-container{padding:18px 16px;padding-bottom:12px;width:100%}.timeline-container .timeline .progress-container .progress-container-inner{position:relative;width:100%}.timeline-container .timeline .progress-container .progress-container-inner progress{width:100%;height:10px;border-radius:4px;cursor:pointer;display:block}.timeline-container .timeline .progress-container .progress-container-inner progress[value]::-webkit-progress-value{background:#3183c8;background-size:35px 20px,100% 100%,100% 100%}.timeline-container .timeline-frames-container{width:100%;padding:0 16px;z-index:0}.markers-container{width:100%;padding:0 16px}.markers-container .markers{height:26px;width:100%;position:relative;align-items:center;display:flex}.markers-container .markers .marker-bar{background:#000;width:100%;height:5px}.markers-container .markers .marker-and-resize-container{position:absolute;display:flex;align-items:center;height:100%;left:-5px;top:0px}.markers-container .markers .marker-and-resize-container.selected{z-index:2}.markers-container .markers .marker-and-resize-container .left-resize-container{cursor:ew-resize;position:absolute;height:18px;left:-9px;padding-left:4px;-ms-transform:translateY(-50%)}.markers-container .markers .marker-and-resize-container .left-resize-container:hover .left-resize{background:#dee2e6}.markers-container .markers .marker-and-resize-container .left-resize-container .left-resize{height:100%;width:4px;background:#adb5bd;border-radius:2px 2px 2px 2px}.markers-container .markers .marker-and-resize-container .left-resize-container .left-resize.selected{background:#dee2e6}.markers-container .markers .marker-and-resize-container .right-resize-container{position:absolute;cursor:ew-resize;height:18px;right:-9px;padding-right:4px;-ms-transform:translateY(-50%)}.markers-container .markers .marker-and-resize-container .right-resize-container:hover .right-resize{background:#dee2e6}.markers-container .markers .marker-and-resize-container .right-resize-container .right-resize{height:100%;width:4px;background-color:#adb5bd;border-radius:2px 2px 2px 2px}.markers-container .markers .marker-and-resize-container .right-resize-container .right-resize.selected{background:#dee2e6}.markers-container .markers .marker-and-resize-container .marker-container{display:flex;align-items:center;height:100%;border-radius:40px;min-width:12px;z-index:1;cursor:move;cursor:grab}.markers-container .markers .marker-and-resize-container .marker-container.grabbing{cursor:grabbing}.markers-container .markers .marker-and-resize-container .marker-container *{background:#adb5bd}.markers-container .markers .marker-and-resize-container .marker-container .marker{width:12px;height:12px;border-radius:50%;overflow:hidden;position:absolute;-ms-transform:translateY(-50%)}.markers-container .markers .marker-and-resize-container .marker-container .marker-range{height:5px;border-radius:40px;position:relative}.markers-container .markers .marker-and-resize-container .marker-container .marker-range .marker-line{position:absolute;height:16px;width:2px;left:6px;transform:translateX(-50%);bottom:calc(100% + 20px);background:#adb5bd;pointer-events:none}.markers-container .markers .marker-and-resize-container .marker-container .marker-range .marker-line-2{position:absolute;height:16px;width:2px;right:0px;transform:translateX(50%);bottom:calc(100% + 20px);background:#adb5bd;pointer-events:none}.tooltip{display:block;position:absolute;z-index:3;left:0px;background-color:rgba(0,0,0,.7);color:#adb5bd;text-align:center;padding:4px 8px;border-radius:6px;font-size:10pt;transform:translateX(-50%) translateY(-100%) translateY(-6px);-ms-transform:translateX(-50%) translateY(-100%) translateY(-6px);visibility:hidden}.tooltip::after{content:" ";position:absolute;top:100%;left:50%;margin-left:-5px;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid rgba(0,0,0,.5)}.Icon{width:24px;height:24px}',
          "",
        ]);
        // Exports
        module.exports = exports;

        /***/
      },
      ,
      /* 248 */ /* 249 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (typeof Promise === "undefined") {
          // Rejection tracking prevents a common issue where React gets into an
          // inconsistent state due to an error, but it gets swallowed by a Promise,
          // and the user has no idea what causes React's erratic future behavior.
          __webpack_require__(250).enable();
          self.Promise = __webpack_require__(252);
        }

        // Make sure we're in a Browser-like environment before importing polyfills
        // This prevents `fetch()` from being imported in a Node test environment
        if (typeof window !== "undefined") {
          // fetch() polyfill for making API calls.
          __webpack_require__(253);
        }

        // Object.assign() is commonly used with React.
        // It will use the native implementation if it's present and isn't buggy.
        Object.assign = __webpack_require__(103);

        // Support for...of (a commonly used syntax feature that requires Symbols)
        __webpack_require__(254);
        // Support iterable spread (...Set, ...Map)
        __webpack_require__(262);

        /***/
      },
      /* 250 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var Promise = __webpack_require__(168);

        var DEFAULT_WHITELIST = [ReferenceError, TypeError, RangeError];

        var enabled = false;
        exports.disable = disable;
        function disable() {
          enabled = false;
          Promise._Y = null;
          Promise._Z = null;
        }

        exports.enable = enable;
        function enable(options) {
          options = options || {};
          if (enabled) disable();
          enabled = true;
          var id = 0;
          var displayId = 0;
          var rejections = {};
          Promise._Y = function (promise) {
            if (
              promise._V === 2 && // IS REJECTED
              rejections[promise._1]
            ) {
              if (rejections[promise._1].logged) {
                onHandled(promise._1);
              } else {
                clearTimeout(rejections[promise._1].timeout);
              }
              delete rejections[promise._1];
            }
          };
          Promise._Z = function (promise, err) {
            if (promise._U === 0) {
              // not yet handled
              promise._1 = id++;
              rejections[promise._1] = {
                displayId: null,
                error: err,
                timeout: setTimeout(
                  onUnhandled.bind(null, promise._1),
                  // For reference errors and type errors, this almost always
                  // means the programmer made a mistake, so log them after just
                  // 100ms
                  // otherwise, wait 2 seconds to see if they get handled
                  matchWhitelist(err, DEFAULT_WHITELIST) ? 100 : 2000
                ),
                logged: false,
              };
            }
          };
          function onUnhandled(id) {
            if (
              options.allRejections ||
              matchWhitelist(
                rejections[id].error,
                options.whitelist || DEFAULT_WHITELIST
              )
            ) {
              rejections[id].displayId = displayId++;
              if (options.onUnhandled) {
                rejections[id].logged = true;
                options.onUnhandled(
                  rejections[id].displayId,
                  rejections[id].error
                );
              } else {
                rejections[id].logged = true;
                logError(rejections[id].displayId, rejections[id].error);
              }
            }
          }
          function onHandled(id) {
            if (rejections[id].logged) {
              if (options.onHandled) {
                options.onHandled(
                  rejections[id].displayId,
                  rejections[id].error
                );
              } else if (!rejections[id].onUnhandled) {
                console.warn(
                  "Promise Rejection Handled (id: " +
                    rejections[id].displayId +
                    "):"
                );
                console.warn(
                  '  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id ' +
                    rejections[id].displayId +
                    "."
                );
              }
            }
          }
        }

        function logError(id, error) {
          console.warn(
            "Possible Unhandled Promise Rejection (id: " + id + "):"
          );
          var errStr = (error && (error.stack || error)) + "";
          errStr.split("\n").forEach(function (line) {
            console.warn("  " + line);
          });
        }

        function matchWhitelist(error, list) {
          return list.some(function (cls) {
            return error instanceof cls;
          });
        }

        /***/
      },
      /* 251 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /* WEBPACK VAR INJECTION */ (function (global) {
          // Use the fastest means possible to execute a task in its own turn, with
          // priority over other events including IO, animation, reflow, and redraw
          // events in browsers.
          //
          // An exception thrown by a task will permanently interrupt the processing of
          // subsequent tasks. The higher level `asap` function ensures that if an
          // exception is thrown by a task, that the task queue will continue flushing as
          // soon as possible, but if you use `rawAsap` directly, you are responsible to
          // either ensure that no exceptions are thrown from your task, or to manually
          // call `rawAsap.requestFlush` if an exception is thrown.
          module.exports = rawAsap;
          function rawAsap(task) {
            if (!queue.length) {
              requestFlush();
              flushing = true;
            }
            // Equivalent to push, but avoids a function call.
            queue[queue.length] = task;
          }

          var queue = [];
          // Once a flush has been requested, no further calls to `requestFlush` are
          // necessary until the next `flush` completes.
          var flushing = false;
          // `requestFlush` is an implementation-specific method that attempts to kick
          // off a `flush` event as quickly as possible. `flush` will attempt to exhaust
          // the event queue before yielding to the browser's own event loop.
          var requestFlush;
          // The position of the next task to execute in the task queue. This is
          // preserved between calls to `flush` so that it can be resumed if
          // a task throws an exception.
          var index = 0;
          // If a task schedules additional tasks recursively, the task queue can grow
          // unbounded. To prevent memory exhaustion, the task queue will periodically
          // truncate already-completed tasks.
          var capacity = 1024;

          // The flush function processes all tasks that have been scheduled with
          // `rawAsap` unless and until one of those tasks throws an exception.
          // If a task throws an exception, `flush` ensures that its state will remain
          // consistent and will resume where it left off when called again.
          // However, `flush` does not make any arrangements to be called again if an
          // exception is thrown.
          function flush() {
            while (index < queue.length) {
              var currentIndex = index;
              // Advance the index before calling the task. This ensures that we will
              // begin flushing on the next task the task throws an error.
              index = index + 1;
              queue[currentIndex].call();
              // Prevent leaking memory for long chains of recursive calls to `asap`.
              // If we call `asap` within tasks scheduled by `asap`, the queue will
              // grow, but to avoid an O(n) walk for every task we execute, we don't
              // shift tasks off the queue after they have been executed.
              // Instead, we periodically shift 1024 tasks off the queue.
              if (index > capacity) {
                // Manually shift all values starting at the index back to the
                // beginning of the queue.
                for (
                  var scan = 0, newLength = queue.length - index;
                  scan < newLength;
                  scan++
                ) {
                  queue[scan] = queue[scan + index];
                }
                queue.length -= index;
                index = 0;
              }
            }
            queue.length = 0;
            index = 0;
            flushing = false;
          }

          // `requestFlush` is implemented using a strategy based on data collected from
          // every available SauceLabs Selenium web driver worker at time of writing.
          // https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593

          // Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that
          // have WebKitMutationObserver but not un-prefixed MutationObserver.
          // Must use `global` or `self` instead of `window` to work in both frames and web
          // workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.

          /* globals self */
          var scope = typeof global !== "undefined" ? global : self;
          var BrowserMutationObserver =
            scope.MutationObserver || scope.WebKitMutationObserver;

          // MutationObservers are desirable because they have high priority and work
          // reliably everywhere they are implemented.
          // They are implemented in all modern browsers.
          //
          // - Android 4-4.3
          // - Chrome 26-34
          // - Firefox 14-29
          // - Internet Explorer 11
          // - iPad Safari 6-7.1
          // - iPhone Safari 7-7.1
          // - Safari 6-7
          if (typeof BrowserMutationObserver === "function") {
            requestFlush = makeRequestCallFromMutationObserver(flush);

            // MessageChannels are desirable because they give direct access to the HTML
            // task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera
            // 11-12, and in web workers in many engines.
            // Although message channels yield to any queued rendering and IO tasks, they
            // would be better than imposing the 4ms delay of timers.
            // However, they do not work reliably in Internet Explorer or Safari.

            // Internet Explorer 10 is the only browser that has setImmediate but does
            // not have MutationObservers.
            // Although setImmediate yields to the browser's renderer, it would be
            // preferrable to falling back to setTimeout since it does not have
            // the minimum 4ms penalty.
            // Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and
            // Desktop to a lesser extent) that renders both setImmediate and
            // MessageChannel useless for the purposes of ASAP.
            // https://github.com/kriskowal/q/issues/396

            // Timers are implemented universally.
            // We fall back to timers in workers in most engines, and in foreground
            // contexts in the following browsers.
            // However, note that even this simple case requires nuances to operate in a
            // broad spectrum of browsers.
            //
            // - Firefox 3-13
            // - Internet Explorer 6-9
            // - iPad Safari 4.3
            // - Lynx 2.8.7
          } else {
            requestFlush = makeRequestCallFromTimer(flush);
          }

          // `requestFlush` requests that the high priority event queue be flushed as
          // soon as possible.
          // This is useful to prevent an error thrown in a task from stalling the event
          // queue if the exception handled by Node.js’s
          // `process.on("uncaughtException")` or by a domain.
          rawAsap.requestFlush = requestFlush;

          // To request a high priority event, we induce a mutation observer by toggling
          // the text of a text node between "1" and "-1".
          function makeRequestCallFromMutationObserver(callback) {
            var toggle = 1;
            var observer = new BrowserMutationObserver(callback);
            var node = document.createTextNode("");
            observer.observe(node, { characterData: true });
            return function requestCall() {
              toggle = -toggle;
              node.data = toggle;
            };
          }

          // The message channel technique was discovered by Malte Ubl and was the
          // original foundation for this library.
          // http://www.nonblocking.io/2011/06/windownexttick.html

          // Safari 6.0.5 (at least) intermittently fails to create message ports on a
          // page's first load. Thankfully, this version of Safari supports
          // MutationObservers, so we don't need to fall back in that case.

          // function makeRequestCallFromMessageChannel(callback) {
          //     var channel = new MessageChannel();
          //     channel.port1.onmessage = callback;
          //     return function requestCall() {
          //         channel.port2.postMessage(0);
          //     };
          // }

          // For reasons explained above, we are also unable to use `setImmediate`
          // under any circumstances.
          // Even if we were, there is another bug in Internet Explorer 10.
          // It is not sufficient to assign `setImmediate` to `requestFlush` because
          // `setImmediate` must be called *by name* and therefore must be wrapped in a
          // closure.
          // Never forget.

          // function makeRequestCallFromSetImmediate(callback) {
          //     return function requestCall() {
          //         setImmediate(callback);
          //     };
          // }

          // Safari 6.0 has a problem where timers will get lost while the user is
          // scrolling. This problem does not impact ASAP because Safari 6.0 supports
          // mutation observers, so that implementation is used instead.
          // However, if we ever elect to use timers in Safari, the prevalent work-around
          // is to add a scroll event listener that calls for a flush.

          // `setTimeout` does not call the passed callback if the delay is less than
          // approximately 7 in web workers in Firefox 8 through 18, and sometimes not
          // even then.

          function makeRequestCallFromTimer(callback) {
            return function requestCall() {
              // We dispatch a timeout with a specified delay of 0 for engines that
              // can reliably accommodate that request. This will usually be snapped
              // to a 4 milisecond delay, but once we're flushing, there's no delay
              // between events.
              var timeoutHandle = setTimeout(handleTimer, 0);
              // However, since this timer gets frequently dropped in Firefox
              // workers, we enlist an interval handle that will try to fire
              // an event 20 times per second until it succeeds.
              var intervalHandle = setInterval(handleTimer, 50);

              function handleTimer() {
                // Whichever timer succeeds will cancel both timers and
                // execute the callback.
                clearTimeout(timeoutHandle);
                clearInterval(intervalHandle);
                callback();
              }
            };
          }

          // This is for `asap.js` only.
          // Its name will be periodically randomized to break any code that depends on
          // its existence.
          rawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;

          // ASAP was originally a nextTick shim included in Q. This was factored out
          // into this ASAP package. It was later adapted to RSVP which made further
          // amendments. These decisions, particularly to marginalize MessageChannel and
          // to capture the MutationObserver implementation in a closure, were integrated
          // back into ASAP proper.
          // https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 252 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        //This file contains the ES6 extensions to the core Promises/A+ API

        var Promise = __webpack_require__(168);

        module.exports = Promise;

        /* Static Functions */

        var TRUE = valuePromise(true);
        var FALSE = valuePromise(false);
        var NULL = valuePromise(null);
        var UNDEFINED = valuePromise(undefined);
        var ZERO = valuePromise(0);
        var EMPTYSTRING = valuePromise("");

        function valuePromise(value) {
          var p = new Promise(Promise._0);
          p._V = 1;
          p._W = value;
          return p;
        }
        Promise.resolve = function (value) {
          if (value instanceof Promise) return value;

          if (value === null) return NULL;
          if (value === undefined) return UNDEFINED;
          if (value === true) return TRUE;
          if (value === false) return FALSE;
          if (value === 0) return ZERO;
          if (value === "") return EMPTYSTRING;

          if (typeof value === "object" || typeof value === "function") {
            try {
              var then = value.then;
              if (typeof then === "function") {
                return new Promise(then.bind(value));
              }
            } catch (ex) {
              return new Promise(function (resolve, reject) {
                reject(ex);
              });
            }
          }
          return valuePromise(value);
        };

        var iterableToArray = function (iterable) {
          if (typeof Array.from === "function") {
            // ES2015+, iterables exist
            iterableToArray = Array.from;
            return Array.from(iterable);
          }

          // ES5, only arrays and array-likes exist
          iterableToArray = function (x) {
            return Array.prototype.slice.call(x);
          };
          return Array.prototype.slice.call(iterable);
        };

        Promise.all = function (arr) {
          var args = iterableToArray(arr);

          return new Promise(function (resolve, reject) {
            if (args.length === 0) return resolve([]);
            var remaining = args.length;
            function res(i, val) {
              if (
                val &&
                (typeof val === "object" || typeof val === "function")
              ) {
                if (
                  val instanceof Promise &&
                  val.then === Promise.prototype.then
                ) {
                  while (val._V === 3) {
                    val = val._W;
                  }
                  if (val._V === 1) return res(i, val._W);
                  if (val._V === 2) reject(val._W);
                  val.then(function (val) {
                    res(i, val);
                  }, reject);
                  return;
                } else {
                  var then = val.then;
                  if (typeof then === "function") {
                    var p = new Promise(then.bind(val));
                    p.then(function (val) {
                      res(i, val);
                    }, reject);
                    return;
                  }
                }
              }
              args[i] = val;
              if (--remaining === 0) {
                resolve(args);
              }
            }
            for (var i = 0; i < args.length; i++) {
              res(i, args[i]);
            }
          });
        };

        Promise.reject = function (value) {
          return new Promise(function (resolve, reject) {
            reject(value);
          });
        };

        Promise.race = function (values) {
          return new Promise(function (resolve, reject) {
            iterableToArray(values).forEach(function (value) {
              Promise.resolve(value).then(resolve, reject);
            });
          });
        };

        /* Prototype Methods */

        Promise.prototype["catch"] = function (onRejected) {
          return this.then(null, onRejected);
        };

        /***/
      },
      /* 253 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Headers",
          function () {
            return Headers;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Request",
          function () {
            return Request;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Response",
          function () {
            return Response;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "DOMException",
          function () {
            return DOMException;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "fetch",
          function () {
            return fetch;
          }
        );
        var global =
          (typeof globalThis !== "undefined" && globalThis) ||
          (typeof self !== "undefined" && self) ||
          (typeof global !== "undefined" && global);

        var support = {
          searchParams: "URLSearchParams" in global,
          iterable: "Symbol" in global && "iterator" in Symbol,
          blob:
            "FileReader" in global &&
            "Blob" in global &&
            (function () {
              try {
                new Blob();
                return true;
              } catch (e) {
                return false;
              }
            })(),
          formData: "FormData" in global,
          arrayBuffer: "ArrayBuffer" in global,
        };

        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }

        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]",
          ];

          var isArrayBufferView =
            ArrayBuffer.isView ||
            function (obj) {
              return (
                obj &&
                viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
              );
            };
        }

        function normalizeName(name) {
          if (typeof name !== "string") {
            name = String(name);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name) || name === "") {
            throw new TypeError(
              'Invalid character in header field name: "' + name + '"'
            );
          }
          return name.toLowerCase();
        }

        function normalizeValue(value) {
          if (typeof value !== "string") {
            value = String(value);
          }
          return value;
        }

        // Build a destructive iterator for the value list
        function iteratorFor(items) {
          var iterator = {
            next: function () {
              var value = items.shift();
              return { done: value === undefined, value: value };
            },
          };

          if (support.iterable) {
            iterator[Symbol.iterator] = function () {
              return iterator;
            };
          }

          return iterator;
        }

        function Headers(headers) {
          this.map = {};

          if (headers instanceof Headers) {
            headers.forEach(function (value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function (header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function (name) {
              this.append(name, headers[name]);
            }, this);
          }
        }

        Headers.prototype.append = function (name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ", " + value : value;
        };

        Headers.prototype["delete"] = function (name) {
          delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function (name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null;
        };

        Headers.prototype.has = function (name) {
          return this.map.hasOwnProperty(normalizeName(name));
        };

        Headers.prototype.set = function (name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function (callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };

        Headers.prototype.keys = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push(name);
          });
          return iteratorFor(items);
        };

        Headers.prototype.values = function () {
          var items = [];
          this.forEach(function (value) {
            items.push(value);
          });
          return iteratorFor(items);
        };

        Headers.prototype.entries = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items);
        };

        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }

        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
          return new Promise(function (resolve, reject) {
            reader.onload = function () {
              resolve(reader.result);
            };
            reader.onerror = function () {
              reject(reader.error);
            };
          });
        }

        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }

        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }

        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);

          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }
          return chars.join("");
        }

        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }

        function Body() {
          this.bodyUsed = false;

          this._initBody = function (body) {
            /*
      fetch-mock wraps the Response object in an ES6 Proxy to
      provide useful test harness features such as flush. However, on
      ES5 browsers without fetch or Proxy support pollyfills must be used;
      the proxy-pollyfill is unable to proxy an attribute unless it exists
      on the object before the Proxy is created. This change ensures
      Response.bodyUsed exists on the instance, while maintaining the
      semantic of setting Request.bodyUsed in the constructor before
      _initBody is called.
    */
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (
              support.formData &&
              FormData.prototype.isPrototypeOf(body)
            ) {
              this._bodyFormData = body;
            } else if (
              support.searchParams &&
              URLSearchParams.prototype.isPrototypeOf(body)
            ) {
              this._bodyText = body.toString();
            } else if (
              support.arrayBuffer &&
              support.blob &&
              isDataView(body)
            ) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              // IE 10-11 can't handle a DataView body.
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (
              support.arrayBuffer &&
              (ArrayBuffer.prototype.isPrototypeOf(body) ||
                isArrayBufferView(body))
            ) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }

            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (
                support.searchParams &&
                URLSearchParams.prototype.isPrototypeOf(body)
              ) {
                this.headers.set(
                  "content-type",
                  "application/x-www-form-urlencoded;charset=UTF-8"
                );
              }
            }
          };

          if (support.blob) {
            this.blob = function () {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }

              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };

            this.arrayBuffer = function () {
              if (this._bodyArrayBuffer) {
                var isConsumed = consumed(this);
                if (isConsumed) {
                  return isConsumed;
                }
                if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                  return Promise.resolve(
                    this._bodyArrayBuffer.buffer.slice(
                      this._bodyArrayBuffer.byteOffset,
                      this._bodyArrayBuffer.byteOffset +
                        this._bodyArrayBuffer.byteLength
                    )
                  );
                } else {
                  return Promise.resolve(this._bodyArrayBuffer);
                }
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }

          this.text = function () {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }

            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(
                readArrayBufferAsText(this._bodyArrayBuffer)
              );
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };

          if (support.formData) {
            this.formData = function () {
              return this.text().then(decode);
            };
          }

          this.json = function () {
            return this.text().then(JSON.parse);
          };

          return this;
        }

        // HTTP methods whose capitalization should be normalized
        var methods = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }

        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          }

          options = options || {};
          var body = options.body;

          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }

          this.credentials =
            options.credentials || this.credentials || "same-origin";
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || "GET");
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;

          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);

          if (this.method === "GET" || this.method === "HEAD") {
            if (options.cache === "no-store" || options.cache === "no-cache") {
              // Search for a '_' parameter in the query string
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                // If it already exists then set the value with the current time
                this.url = this.url.replace(
                  reParamSearch,
                  "$1_=" + new Date().getTime()
                );
              } else {
                // Otherwise add a new '_' parameter to the end with the current time
                var reQueryString = /\?/;
                this.url +=
                  (reQueryString.test(this.url) ? "&" : "?") +
                  "_=" +
                  new Date().getTime();
              }
            }
          }
        }

        Request.prototype.clone = function () {
          return new Request(this, { body: this._bodyInit });
        };

        function decode(body) {
          var form = new FormData();
          body
            .trim()
            .split("&")
            .forEach(function (bytes) {
              if (bytes) {
                var split = bytes.split("=");
                var name = split.shift().replace(/\+/g, " ");
                var value = split.join("=").replace(/\+/g, " ");
                form.append(
                  decodeURIComponent(name),
                  decodeURIComponent(value)
                );
              }
            });
          return form;
        }

        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
          // https://tools.ietf.org/html/rfc7230#section-3.2
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill
          // https://github.com/github/fetch/issues/748
          // https://github.com/zloirock/core-js/issues/751
          preProcessedHeaders
            .split("\r")
            .map(function (header) {
              return header.indexOf("\n") === 0
                ? header.substr(1, header.length)
                : header;
            })
            .forEach(function (line) {
              var parts = line.split(":");
              var key = parts.shift().trim();
              if (key) {
                var value = parts.join(":").trim();
                headers.append(key, value);
              }
            });
          return headers;
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError(
              'Please use the "new" operator, this DOM object constructor cannot be called as a function.'
            );
          }
          if (!options) {
            options = {};
          }

          this.type = "default";
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText =
            options.statusText === undefined ? "" : "" + options.statusText;
          this.headers = new Headers(options.headers);
          this.url = options.url || "";
          this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function () {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url,
          });
        };

        Response.error = function () {
          var response = new Response(null, { status: 0, statusText: "" });
          response.type = "error";
          return response;
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function (url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }

          return new Response(null, {
            status: status,
            headers: { location: url },
          });
        };

        var DOMException = global.DOMException;
        try {
          new DOMException();
        } catch (err) {
          DOMException = function (message, name) {
            this.message = message;
            this.name = name;
            var error = Error(message);
            this.stack = error.stack;
          };
          DOMException.prototype = Object.create(Error.prototype);
          DOMException.prototype.constructor = DOMException;
        }

        function fetch(input, init) {
          return new Promise(function (resolve, reject) {
            var request = new Request(input, init);

            if (request.signal && request.signal.aborted) {
              return reject(new DOMException("Aborted", "AbortError"));
            }

            var xhr = new XMLHttpRequest();

            function abortXhr() {
              xhr.abort();
            }

            xhr.onload = function () {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || ""),
              };
              options.url =
                "responseURL" in xhr
                  ? xhr.responseURL
                  : options.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              setTimeout(function () {
                resolve(new Response(body, options));
              }, 0);
            };

            xhr.onerror = function () {
              setTimeout(function () {
                reject(new TypeError("Network request failed"));
              }, 0);
            };

            xhr.ontimeout = function () {
              setTimeout(function () {
                reject(new TypeError("Network request failed"));
              }, 0);
            };

            xhr.onabort = function () {
              setTimeout(function () {
                reject(new DOMException("Aborted", "AbortError"));
              }, 0);
            };

            function fixUrl(url) {
              try {
                return url === "" && global.location.href
                  ? global.location.href
                  : url;
              } catch (e) {
                return url;
              }
            }

            xhr.open(request.method, fixUrl(request.url), true);

            if (request.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request.credentials === "omit") {
              xhr.withCredentials = false;
            }

            if ("responseType" in xhr) {
              if (support.blob) {
                xhr.responseType = "blob";
              } else if (
                support.arrayBuffer &&
                request.headers.get("Content-Type") &&
                request.headers
                  .get("Content-Type")
                  .indexOf("application/octet-stream") !== -1
              ) {
                xhr.responseType = "arraybuffer";
              }
            }

            if (
              init &&
              typeof init.headers === "object" &&
              !(init.headers instanceof Headers)
            ) {
              Object.getOwnPropertyNames(init.headers).forEach(function (name) {
                xhr.setRequestHeader(name, normalizeValue(init.headers[name]));
              });
            } else {
              request.headers.forEach(function (value, name) {
                xhr.setRequestHeader(name, value);
              });
            }

            if (request.signal) {
              request.signal.addEventListener("abort", abortXhr);

              xhr.onreadystatechange = function () {
                // DONE (success or failure)
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener("abort", abortXhr);
                }
              };
            }

            xhr.send(
              typeof request._bodyInit === "undefined"
                ? null
                : request._bodyInit
            );
          });
        }

        fetch.polyfill = true;

        if (!global.fetch) {
          global.fetch = fetch;
          global.Headers = Headers;
          global.Request = Request;
          global.Response = Response;
        }

        /***/
      },
      /* 254 */
      /***/ function (module, exports, __webpack_require__) {
        var parent = __webpack_require__(255);
        __webpack_require__(257);
        __webpack_require__(258);
        __webpack_require__(259);
        __webpack_require__(260);
        // TODO: Remove from `core-js@4`
        __webpack_require__(261);

        module.exports = parent;

        /***/
      },
      /* 255 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(57);
        __webpack_require__(58);
        __webpack_require__(174);
        __webpack_require__(178);
        __webpack_require__(179);
        __webpack_require__(180);
        __webpack_require__(181);
        __webpack_require__(182);
        __webpack_require__(183);
        __webpack_require__(184);
        __webpack_require__(185);
        __webpack_require__(186);
        __webpack_require__(187);
        __webpack_require__(188);
        __webpack_require__(189);
        __webpack_require__(190);
        __webpack_require__(191);
        __webpack_require__(192);
        __webpack_require__(193);
        __webpack_require__(194);
        var path = __webpack_require__(51);

        module.exports = path.Symbol;

        /***/
      },
      /* 256 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var TO_STRING_TAG_SUPPORT = __webpack_require__(113);
        var classof = __webpack_require__(75);

        // `Object.prototype.toString` method implementation
        // https://tc39.es/ecma262/#sec-object.prototype.tostring
        module.exports = TO_STRING_TAG_SUPPORT
          ? {}.toString
          : function toString() {
              return "[object " + classof(this) + "]";
            };

        /***/
      },
      /* 257 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.asyncDispose` well-known symbol
        // https://github.com/tc39/proposal-using-statement
        defineWellKnownSymbol("asyncDispose");

        /***/
      },
      /* 258 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.dispose` well-known symbol
        // https://github.com/tc39/proposal-using-statement
        defineWellKnownSymbol("dispose");

        /***/
      },
      /* 259 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.observable` well-known symbol
        // https://github.com/tc39/proposal-observable
        defineWellKnownSymbol("observable");

        /***/
      },
      /* 260 */
      /***/ function (module, exports, __webpack_require__) {
        var defineWellKnownSymbol = __webpack_require__(15);

        // `Symbol.patternMatch` well-known symbol
        // https://github.com/tc39/proposal-pattern-matching
        defineWellKnownSymbol("patternMatch");

        /***/
      },
      /* 261 */
      /***/ function (module, exports, __webpack_require__) {
        // TODO: remove from `core-js@4`
        var defineWellKnownSymbol = __webpack_require__(15);

        defineWellKnownSymbol("replaceAll");

        /***/
      },
      /* 262 */
      /***/ function (module, exports, __webpack_require__) {
        var parent = __webpack_require__(263);

        module.exports = parent;

        /***/
      },
      /* 263 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(77);
        __webpack_require__(118);
        var path = __webpack_require__(51);

        module.exports = path.Array.from;

        /***/
      },
      /* 264 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var iteratorClose = __webpack_require__(198);

        // call something on iterator step with safe closing on error
        module.exports = function (iterator, fn, value, ENTRIES) {
          try {
            return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
            // 7.4.6 IteratorClose(iterator, completion)
          } catch (error) {
            iteratorClose(iterator);
            throw error;
          }
        };

        /***/
      },
      /* 265 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // Polyfill stable language features.
        // It's recommended to use @babel/preset-env and browserslist
        // to only include the polyfills necessary for the target browsers.
        __webpack_require__(266);
        __webpack_require__(50);

        /***/
      },
      /* 266 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(267);
        __webpack_require__(417);
        var path = __webpack_require__(51);

        module.exports = path;

        /***/
      },
      /* 267 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(174);
        __webpack_require__(178);
        __webpack_require__(179);
        __webpack_require__(180);
        __webpack_require__(181);
        __webpack_require__(182);
        __webpack_require__(183);
        __webpack_require__(184);
        __webpack_require__(185);
        __webpack_require__(186);
        __webpack_require__(187);
        __webpack_require__(188);
        __webpack_require__(189);
        __webpack_require__(190);
        __webpack_require__(191);
        __webpack_require__(268);
        __webpack_require__(118);
        __webpack_require__(269);
        __webpack_require__(270);
        __webpack_require__(57);
        __webpack_require__(271);
        __webpack_require__(272);
        __webpack_require__(273);
        __webpack_require__(121);
        __webpack_require__(274);
        __webpack_require__(275);
        __webpack_require__(276);
        __webpack_require__(277);
        __webpack_require__(87);
        __webpack_require__(122);
        __webpack_require__(202);
        __webpack_require__(278);
        __webpack_require__(279);
        __webpack_require__(59);
        __webpack_require__(280);
        __webpack_require__(281);
        __webpack_require__(282);
        __webpack_require__(283);
        __webpack_require__(204);
        __webpack_require__(123);
        __webpack_require__(284);
        __webpack_require__(285);
        __webpack_require__(286);
        __webpack_require__(287);
        __webpack_require__(62);
        __webpack_require__(288);
        __webpack_require__(289);
        __webpack_require__(290);
        __webpack_require__(291);
        __webpack_require__(206);
        __webpack_require__(208);
        __webpack_require__(292);
        __webpack_require__(293);
        __webpack_require__(294);
        __webpack_require__(295);
        __webpack_require__(296);
        __webpack_require__(297);
        __webpack_require__(298);
        __webpack_require__(299);
        __webpack_require__(300);
        __webpack_require__(301);
        __webpack_require__(302);
        __webpack_require__(303);
        __webpack_require__(304);
        __webpack_require__(211);
        __webpack_require__(305);
        __webpack_require__(306);
        __webpack_require__(307);
        __webpack_require__(124);
        __webpack_require__(58);
        __webpack_require__(308);
        __webpack_require__(309);
        __webpack_require__(310);
        __webpack_require__(311);
        __webpack_require__(312);
        __webpack_require__(313);
        __webpack_require__(314);
        __webpack_require__(315);
        __webpack_require__(127);
        __webpack_require__(316);
        __webpack_require__(317);
        __webpack_require__(318);
        __webpack_require__(319);
        __webpack_require__(320);
        __webpack_require__(213);
        __webpack_require__(321);
        __webpack_require__(130);
        __webpack_require__(322);
        __webpack_require__(323);
        __webpack_require__(324);
        __webpack_require__(325);
        __webpack_require__(77);
        __webpack_require__(326);
        __webpack_require__(327);
        __webpack_require__(328);
        __webpack_require__(329);
        __webpack_require__(330);
        __webpack_require__(331);
        __webpack_require__(332);
        __webpack_require__(333);
        __webpack_require__(334);
        __webpack_require__(335);
        __webpack_require__(336);
        __webpack_require__(337);
        __webpack_require__(338);
        __webpack_require__(339);
        __webpack_require__(215);
        __webpack_require__(82);
        __webpack_require__(340);
        __webpack_require__(341);
        __webpack_require__(342);
        __webpack_require__(132);
        __webpack_require__(133);
        __webpack_require__(134);
        __webpack_require__(343);
        __webpack_require__(344);
        __webpack_require__(345);
        __webpack_require__(347);
        __webpack_require__(348);
        __webpack_require__(349);
        __webpack_require__(350);
        __webpack_require__(351);
        __webpack_require__(352);
        __webpack_require__(353);
        __webpack_require__(354);
        __webpack_require__(355);
        __webpack_require__(356);
        __webpack_require__(357);
        __webpack_require__(358);
        __webpack_require__(359);
        __webpack_require__(360);
        __webpack_require__(361);
        __webpack_require__(362);
        __webpack_require__(363);
        __webpack_require__(365);
        __webpack_require__(366);
        __webpack_require__(367);
        __webpack_require__(368);
        __webpack_require__(369);
        __webpack_require__(370);
        __webpack_require__(371);
        __webpack_require__(372);
        __webpack_require__(193);
        __webpack_require__(373);
        __webpack_require__(374);
        __webpack_require__(375);
        __webpack_require__(221);
        __webpack_require__(136);
        __webpack_require__(377);
        __webpack_require__(379);
        __webpack_require__(192);
        __webpack_require__(137);
        __webpack_require__(382);
        __webpack_require__(383);
        __webpack_require__(384);
        __webpack_require__(385);
        __webpack_require__(386);
        __webpack_require__(387);
        __webpack_require__(388);
        __webpack_require__(389);
        __webpack_require__(391);
        __webpack_require__(141);
        __webpack_require__(392);
        __webpack_require__(393);
        __webpack_require__(143);
        __webpack_require__(395);
        __webpack_require__(396);
        __webpack_require__(397);
        __webpack_require__(398);
        __webpack_require__(399);
        __webpack_require__(400);
        __webpack_require__(401);
        __webpack_require__(231);
        __webpack_require__(402);
        __webpack_require__(144);
        __webpack_require__(145);
        __webpack_require__(146);
        __webpack_require__(147);
        __webpack_require__(148);
        __webpack_require__(149);
        __webpack_require__(150);
        __webpack_require__(151);
        __webpack_require__(152);
        __webpack_require__(153);
        __webpack_require__(154);
        __webpack_require__(155);
        __webpack_require__(156);
        __webpack_require__(157);
        __webpack_require__(158);
        __webpack_require__(159);
        __webpack_require__(160);
        __webpack_require__(161);
        __webpack_require__(162);
        __webpack_require__(163);
        __webpack_require__(164);
        __webpack_require__(165);
        __webpack_require__(166);
        __webpack_require__(404);
        __webpack_require__(405);
        __webpack_require__(406);
        __webpack_require__(407);
        __webpack_require__(408);
        __webpack_require__(409);
        __webpack_require__(410);
        __webpack_require__(411);
        __webpack_require__(412);
        __webpack_require__(413);
        __webpack_require__(414);
        __webpack_require__(415);
        __webpack_require__(416);
        __webpack_require__(194);
        var path = __webpack_require__(51);

        module.exports = path;

        /***/
      },
      /* 268 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var getPrototypeOf = __webpack_require__(33);
        var setPrototypeOf = __webpack_require__(46);
        var create = __webpack_require__(37);
        var createNonEnumerableProperty = __webpack_require__(22);
        var createPropertyDescriptor = __webpack_require__(39);
        var iterate = __webpack_require__(47);

        var $AggregateError = function AggregateError(errors, message) {
          var that = this;
          if (!(that instanceof $AggregateError))
            return new $AggregateError(errors, message);
          if (setPrototypeOf) {
            // eslint-disable-next-line unicorn/error-message -- expected
            that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));
          }
          if (message !== undefined)
            createNonEnumerableProperty(that, "message", String(message));
          var errorsArray = [];
          iterate(errors, errorsArray.push, { that: errorsArray });
          createNonEnumerableProperty(that, "errors", errorsArray);
          return that;
        };

        $AggregateError.prototype = create(Error.prototype, {
          constructor: createPropertyDescriptor(5, $AggregateError),
          message: createPropertyDescriptor(5, ""),
          name: createPropertyDescriptor(5, "AggregateError"),
        });

        // `AggregateError` constructor
        // https://tc39.es/ecma262/#sec-aggregate-error-constructor
        $(
          { global: true },
          {
            AggregateError: $AggregateError,
          }
        );

        /***/
      },
      /* 269 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isArray = __webpack_require__(53);

        // `Array.isArray` method
        // https://tc39.es/ecma262/#sec-array.isarray
        $(
          { target: "Array", stat: true },
          {
            isArray: isArray,
          }
        );

        /***/
      },
      /* 270 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var createProperty = __webpack_require__(54);

        var ISNT_GENERIC = fails(function () {
          function F() {
            /* empty */
          }
          return !(Array.of.call(F) instanceof F);
        });

        // `Array.of` method
        // https://tc39.es/ecma262/#sec-array.of
        // WebKit Array.of isn't generic
        $(
          { target: "Array", stat: true, forced: ISNT_GENERIC },
          {
            of: function of(/* ...args */) {
              var index = 0;
              var argumentsLength = arguments.length;
              var result = new (typeof this == "function" ? this : Array)(
                argumentsLength
              );
              while (argumentsLength > index)
                createProperty(result, index, arguments[index++]);
              result.length = argumentsLength;
              return result;
            },
          }
        );

        /***/
      },
      /* 271 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var copyWithin = __webpack_require__(199);
        var addToUnscopables = __webpack_require__(48);

        // `Array.prototype.copyWithin` method
        // https://tc39.es/ecma262/#sec-array.prototype.copywithin
        $(
          { target: "Array", proto: true },
          {
            copyWithin: copyWithin,
          }
        );

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("copyWithin");

        /***/
      },
      /* 272 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $every = __webpack_require__(17).every;
        var arrayMethodIsStrict = __webpack_require__(41);

        var STRICT_METHOD = arrayMethodIsStrict("every");

        // `Array.prototype.every` method
        // https://tc39.es/ecma262/#sec-array.prototype.every
        $(
          { target: "Array", proto: true, forced: !STRICT_METHOD },
          {
            every: function every(callbackfn /* , thisArg */) {
              return $every(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 273 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fill = __webpack_require__(120);
        var addToUnscopables = __webpack_require__(48);

        // `Array.prototype.fill` method
        // https://tc39.es/ecma262/#sec-array.prototype.fill
        $(
          { target: "Array", proto: true },
          {
            fill: fill,
          }
        );

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("fill");

        /***/
      },
      /* 274 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $find = __webpack_require__(17).find;
        var addToUnscopables = __webpack_require__(48);

        var FIND = "find";
        var SKIPS_HOLES = true;

        // Shouldn't skip holes
        if (FIND in [])
          Array(1)[FIND](function () {
            SKIPS_HOLES = false;
          });

        // `Array.prototype.find` method
        // https://tc39.es/ecma262/#sec-array.prototype.find
        $(
          { target: "Array", proto: true, forced: SKIPS_HOLES },
          {
            find: function find(callbackfn /* , that = undefined */) {
              return $find(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables(FIND);

        /***/
      },
      /* 275 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $findIndex = __webpack_require__(17).findIndex;
        var addToUnscopables = __webpack_require__(48);

        var FIND_INDEX = "findIndex";
        var SKIPS_HOLES = true;

        // Shouldn't skip holes
        if (FIND_INDEX in [])
          Array(1)[FIND_INDEX](function () {
            SKIPS_HOLES = false;
          });

        // `Array.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-array.prototype.findindex
        $(
          { target: "Array", proto: true, forced: SKIPS_HOLES },
          {
            findIndex: function findIndex(callbackfn /* , that = undefined */) {
              return $findIndex(
                this,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables(FIND_INDEX);

        /***/
      },
      /* 276 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var flattenIntoArray = __webpack_require__(200);
        var toObject = __webpack_require__(13);
        var toLength = __webpack_require__(10);
        var toInteger = __webpack_require__(32);
        var arraySpeciesCreate = __webpack_require__(71);

        // `Array.prototype.flat` method
        // https://tc39.es/ecma262/#sec-array.prototype.flat
        $(
          { target: "Array", proto: true },
          {
            flat: function flat(/* depthArg = 1 */) {
              var depthArg = arguments.length ? arguments[0] : undefined;
              var O = toObject(this);
              var sourceLen = toLength(O.length);
              var A = arraySpeciesCreate(O, 0);
              A.length = flattenIntoArray(
                A,
                O,
                O,
                sourceLen,
                0,
                depthArg === undefined ? 1 : toInteger(depthArg)
              );
              return A;
            },
          }
        );

        /***/
      },
      /* 277 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var flattenIntoArray = __webpack_require__(200);
        var toObject = __webpack_require__(13);
        var toLength = __webpack_require__(10);
        var aFunction = __webpack_require__(25);
        var arraySpeciesCreate = __webpack_require__(71);

        // `Array.prototype.flatMap` method
        // https://tc39.es/ecma262/#sec-array.prototype.flatmap
        $(
          { target: "Array", proto: true },
          {
            flatMap: function flatMap(callbackfn /* , thisArg */) {
              var O = toObject(this);
              var sourceLen = toLength(O.length);
              var A;
              aFunction(callbackfn);
              A = arraySpeciesCreate(O, 0);
              A.length = flattenIntoArray(
                A,
                O,
                O,
                sourceLen,
                0,
                1,
                callbackfn,
                arguments.length > 1 ? arguments[1] : undefined
              );
              return A;
            },
          }
        );

        /***/
      },
      /* 278 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var IndexedObject = __webpack_require__(66);
        var toIndexedObject = __webpack_require__(27);
        var arrayMethodIsStrict = __webpack_require__(41);

        var nativeJoin = [].join;

        var ES3_STRINGS = IndexedObject != Object;
        var STRICT_METHOD = arrayMethodIsStrict("join", ",");

        // `Array.prototype.join` method
        // https://tc39.es/ecma262/#sec-array.prototype.join
        $(
          {
            target: "Array",
            proto: true,
            forced: ES3_STRINGS || !STRICT_METHOD,
          },
          {
            join: function join(separator) {
              return nativeJoin.call(
                toIndexedObject(this),
                separator === undefined ? "," : separator
              );
            },
          }
        );

        /***/
      },
      /* 279 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var lastIndexOf = __webpack_require__(203);

        // `Array.prototype.lastIndexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.lastindexof
        $(
          {
            target: "Array",
            proto: true,
            forced: lastIndexOf !== [].lastIndexOf,
          },
          {
            lastIndexOf: lastIndexOf,
          }
        );

        /***/
      },
      /* 280 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $reduce = __webpack_require__(88).left;
        var arrayMethodIsStrict = __webpack_require__(41);
        var CHROME_VERSION = __webpack_require__(73);
        var IS_NODE = __webpack_require__(60);

        var STRICT_METHOD = arrayMethodIsStrict("reduce");
        // Chrome 80-82 has a critical bug
        // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
        var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

        // `Array.prototype.reduce` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduce
        $(
          {
            target: "Array",
            proto: true,
            forced: !STRICT_METHOD || CHROME_BUG,
          },
          {
            reduce: function reduce(callbackfn /* , initialValue */) {
              return $reduce(
                this,
                callbackfn,
                arguments.length,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 281 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $reduceRight = __webpack_require__(88).right;
        var arrayMethodIsStrict = __webpack_require__(41);
        var CHROME_VERSION = __webpack_require__(73);
        var IS_NODE = __webpack_require__(60);

        var STRICT_METHOD = arrayMethodIsStrict("reduceRight");
        // Chrome 80-82 has a critical bug
        // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
        var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

        // `Array.prototype.reduceRight` method
        // https://tc39.es/ecma262/#sec-array.prototype.reduceright
        $(
          {
            target: "Array",
            proto: true,
            forced: !STRICT_METHOD || CHROME_BUG,
          },
          {
            reduceRight: function reduceRight(callbackfn /* , initialValue */) {
              return $reduceRight(
                this,
                callbackfn,
                arguments.length,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 282 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var isArray = __webpack_require__(53);

        var nativeReverse = [].reverse;
        var test = [1, 2];

        // `Array.prototype.reverse` method
        // https://tc39.es/ecma262/#sec-array.prototype.reverse
        // fix for Safari 12.0 bug
        // https://bugs.webkit.org/show_bug.cgi?id=188794
        $(
          {
            target: "Array",
            proto: true,
            forced: String(test) === String(test.reverse()),
          },
          {
            reverse: function reverse() {
              // eslint-disable-next-line no-self-assign -- dirty hack
              if (isArray(this)) this.length = this.length;
              return nativeReverse.call(this);
            },
          }
        );

        /***/
      },
      /* 283 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var isObject = __webpack_require__(4);
        var isArray = __webpack_require__(53);
        var toAbsoluteIndex = __webpack_require__(44);
        var toLength = __webpack_require__(10);
        var toIndexedObject = __webpack_require__(27);
        var createProperty = __webpack_require__(54);
        var wellKnownSymbol = __webpack_require__(8);
        var arrayMethodHasSpeciesSupport = __webpack_require__(72);

        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");

        var SPECIES = wellKnownSymbol("species");
        var nativeSlice = [].slice;
        var max = Math.max;

        // `Array.prototype.slice` method
        // https://tc39.es/ecma262/#sec-array.prototype.slice
        // fallback for not array-like ES3 strings and DOM objects
        $(
          { target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT },
          {
            slice: function slice(start, end) {
              var O = toIndexedObject(this);
              var length = toLength(O.length);
              var k = toAbsoluteIndex(start, length);
              var fin = toAbsoluteIndex(
                end === undefined ? length : end,
                length
              );
              // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
              var Constructor, result, n;
              if (isArray(O)) {
                Constructor = O.constructor;
                // cross-realm fallback
                if (
                  typeof Constructor == "function" &&
                  (Constructor === Array || isArray(Constructor.prototype))
                ) {
                  Constructor = undefined;
                } else if (isObject(Constructor)) {
                  Constructor = Constructor[SPECIES];
                  if (Constructor === null) Constructor = undefined;
                }
                if (Constructor === Array || Constructor === undefined) {
                  return nativeSlice.call(O, k, fin);
                }
              }
              result = new (Constructor === undefined ? Array : Constructor)(
                max(fin - k, 0)
              );
              for (n = 0; k < fin; k++, n++)
                if (k in O) createProperty(result, n, O[k]);
              result.length = n;
              return result;
            },
          }
        );

        /***/
      },
      /* 284 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var toAbsoluteIndex = __webpack_require__(44);
        var toInteger = __webpack_require__(32);
        var toLength = __webpack_require__(10);
        var toObject = __webpack_require__(13);
        var arraySpeciesCreate = __webpack_require__(71);
        var createProperty = __webpack_require__(54);
        var arrayMethodHasSpeciesSupport = __webpack_require__(72);

        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("splice");

        var max = Math.max;
        var min = Math.min;
        var MAX_SAFE_INTEGER = 0x1fffffffffffff;
        var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = "Maximum allowed length exceeded";

        // `Array.prototype.splice` method
        // https://tc39.es/ecma262/#sec-array.prototype.splice
        // with adding support of @@species
        $(
          { target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT },
          {
            splice: function splice(start, deleteCount /* , ...items */) {
              var O = toObject(this);
              var len = toLength(O.length);
              var actualStart = toAbsoluteIndex(start, len);
              var argumentsLength = arguments.length;
              var insertCount, actualDeleteCount, A, k, from, to;
              if (argumentsLength === 0) {
                insertCount = actualDeleteCount = 0;
              } else if (argumentsLength === 1) {
                insertCount = 0;
                actualDeleteCount = len - actualStart;
              } else {
                insertCount = argumentsLength - 2;
                actualDeleteCount = min(
                  max(toInteger(deleteCount), 0),
                  len - actualStart
                );
              }
              if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
                throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
              }
              A = arraySpeciesCreate(O, actualDeleteCount);
              for (k = 0; k < actualDeleteCount; k++) {
                from = actualStart + k;
                if (from in O) createProperty(A, k, O[from]);
              }
              A.length = actualDeleteCount;
              if (insertCount < actualDeleteCount) {
                for (k = actualStart; k < len - actualDeleteCount; k++) {
                  from = k + actualDeleteCount;
                  to = k + insertCount;
                  if (from in O) O[to] = O[from];
                  else delete O[to];
                }
                for (k = len; k > len - actualDeleteCount + insertCount; k--)
                  delete O[k - 1];
              } else if (insertCount > actualDeleteCount) {
                for (k = len - actualDeleteCount; k > actualStart; k--) {
                  from = k + actualDeleteCount - 1;
                  to = k + insertCount - 1;
                  if (from in O) O[to] = O[from];
                  else delete O[to];
                }
              }
              for (k = 0; k < insertCount; k++) {
                O[k + actualStart] = arguments[k + 2];
              }
              O.length = len - actualDeleteCount + insertCount;
              return A;
            },
          }
        );

        /***/
      },
      /* 285 */
      /***/ function (module, exports, __webpack_require__) {
        var setSpecies = __webpack_require__(61);

        // `Array[@@species]` getter
        // https://tc39.es/ecma262/#sec-get-array-@@species
        setSpecies("Array");

        /***/
      },
      /* 286 */
      /***/ function (module, exports, __webpack_require__) {
        // this method was added to unscopables after implementation
        // in popular engines, so it's moved to a separate module
        var addToUnscopables = __webpack_require__(48);

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("flat");

        /***/
      },
      /* 287 */
      /***/ function (module, exports, __webpack_require__) {
        // this method was added to unscopables after implementation
        // in popular engines, so it's moved to a separate module
        var addToUnscopables = __webpack_require__(48);

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables("flatMap");

        /***/
      },
      /* 288 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var bind = __webpack_require__(205);

        // `Function.prototype.bind` method
        // https://tc39.es/ecma262/#sec-function.prototype.bind
        $(
          { target: "Function", proto: true },
          {
            bind: bind,
          }
        );

        /***/
      },
      /* 289 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var defineProperty = __webpack_require__(12).f;

        var FunctionPrototype = Function.prototype;
        var FunctionPrototypeToString = FunctionPrototype.toString;
        var nameRE = /^\s*function ([^ (]*)/;
        var NAME = "name";

        // Function instances `.name` property
        // https://tc39.es/ecma262/#sec-function-instances-name
        if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
          defineProperty(FunctionPrototype, NAME, {
            configurable: true,
            get: function () {
              try {
                return FunctionPrototypeToString.call(this).match(nameRE)[1];
              } catch (error) {
                return "";
              }
            },
          });
        }

        /***/
      },
      /* 290 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var isObject = __webpack_require__(4);
        var definePropertyModule = __webpack_require__(12);
        var getPrototypeOf = __webpack_require__(33);
        var wellKnownSymbol = __webpack_require__(8);

        var HAS_INSTANCE = wellKnownSymbol("hasInstance");
        var FunctionPrototype = Function.prototype;

        // `Function.prototype[@@hasInstance]` method
        // https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance
        if (!(HAS_INSTANCE in FunctionPrototype)) {
          definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, {
            value: function (O) {
              if (typeof this != "function" || !isObject(O)) return false;
              if (!isObject(this.prototype)) return O instanceof this;
              // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
              while ((O = getPrototypeOf(O)))
                if (this.prototype === O) return true;
              return false;
            },
          });
        }

        /***/
      },
      /* 291 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);

        // `globalThis` object
        // https://tc39.es/ecma262/#sec-globalthis
        $(
          { global: true },
          {
            globalThis: global,
          }
        );

        /***/
      },
      /* 292 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var objectDefinePropertyModile = __webpack_require__(12);

        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        $(
          {
            target: "Object",
            stat: true,
            forced: !DESCRIPTORS,
            sham: !DESCRIPTORS,
          },
          {
            defineProperty: objectDefinePropertyModile.f,
          }
        );

        /***/
      },
      /* 293 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var defineProperties = __webpack_require__(114);

        // `Object.defineProperties` method
        // https://tc39.es/ecma262/#sec-object.defineproperties
        $(
          {
            target: "Object",
            stat: true,
            forced: !DESCRIPTORS,
            sham: !DESCRIPTORS,
          },
          {
            defineProperties: defineProperties,
          }
        );

        /***/
      },
      /* 294 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var $entries = __webpack_require__(209).entries;

        // `Object.entries` method
        // https://tc39.es/ecma262/#sec-object.entries
        $(
          { target: "Object", stat: true },
          {
            entries: function entries(O) {
              return $entries(O);
            },
          }
        );

        /***/
      },
      /* 295 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var FREEZING = __webpack_require__(80);
        var fails = __webpack_require__(2);
        var isObject = __webpack_require__(4);
        var onFreeze = __webpack_require__(55).onFreeze;

        var nativeFreeze = Object.freeze;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeFreeze(1);
        });

        // `Object.freeze` method
        // https://tc39.es/ecma262/#sec-object.freeze
        $(
          {
            target: "Object",
            stat: true,
            forced: FAILS_ON_PRIMITIVES,
            sham: !FREEZING,
          },
          {
            freeze: function freeze(it) {
              return nativeFreeze && isObject(it)
                ? nativeFreeze(onFreeze(it))
                : it;
            },
          }
        );

        /***/
      },
      /* 296 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var iterate = __webpack_require__(47);
        var createProperty = __webpack_require__(54);

        // `Object.fromEntries` method
        // https://github.com/tc39/proposal-object-from-entries
        $(
          { target: "Object", stat: true },
          {
            fromEntries: function fromEntries(iterable) {
              var obj = {};
              iterate(
                iterable,
                function (k, v) {
                  createProperty(obj, k, v);
                },
                { AS_ENTRIES: true }
              );
              return obj;
            },
          }
        );

        /***/
      },
      /* 297 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var toIndexedObject = __webpack_require__(27);
        var nativeGetOwnPropertyDescriptor = __webpack_require__(20).f;
        var DESCRIPTORS = __webpack_require__(7);

        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeGetOwnPropertyDescriptor(1);
        });
        var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
        $(
          { target: "Object", stat: true, forced: FORCED, sham: !DESCRIPTORS },
          {
            getOwnPropertyDescriptor: function getOwnPropertyDescriptor(
              it,
              key
            ) {
              return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
            },
          }
        );

        /***/
      },
      /* 298 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var ownKeys = __webpack_require__(109);
        var toIndexedObject = __webpack_require__(27);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var createProperty = __webpack_require__(54);

        // `Object.getOwnPropertyDescriptors` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
        $(
          { target: "Object", stat: true, sham: !DESCRIPTORS },
          {
            getOwnPropertyDescriptors: function getOwnPropertyDescriptors(
              object
            ) {
              var O = toIndexedObject(object);
              var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
              var keys = ownKeys(O);
              var result = {};
              var index = 0;
              var key, descriptor;
              while (keys.length > index) {
                descriptor = getOwnPropertyDescriptor(O, (key = keys[index++]));
                if (descriptor !== undefined)
                  createProperty(result, key, descriptor);
              }
              return result;
            },
          }
        );

        /***/
      },
      /* 299 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var nativeGetOwnPropertyNames = __webpack_require__(176).f;

        var FAILS_ON_PRIMITIVES = fails(function () {
          return !Object.getOwnPropertyNames(1);
        });

        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        $(
          { target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES },
          {
            getOwnPropertyNames: nativeGetOwnPropertyNames,
          }
        );

        /***/
      },
      /* 300 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var toObject = __webpack_require__(13);
        var nativeGetPrototypeOf = __webpack_require__(33);
        var CORRECT_PROTOTYPE_GETTER = __webpack_require__(117);

        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeGetPrototypeOf(1);
        });

        // `Object.getPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.getprototypeof
        $(
          {
            target: "Object",
            stat: true,
            forced: FAILS_ON_PRIMITIVES,
            sham: !CORRECT_PROTOTYPE_GETTER,
          },
          {
            getPrototypeOf: function getPrototypeOf(it) {
              return nativeGetPrototypeOf(toObject(it));
            },
          }
        );

        /***/
      },
      /* 301 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var is = __webpack_require__(210);

        // `Object.is` method
        // https://tc39.es/ecma262/#sec-object.is
        $(
          { target: "Object", stat: true },
          {
            is: is,
          }
        );

        /***/
      },
      /* 302 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var isObject = __webpack_require__(4);

        var nativeIsExtensible = Object.isExtensible;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeIsExtensible(1);
        });

        // `Object.isExtensible` method
        // https://tc39.es/ecma262/#sec-object.isextensible
        $(
          { target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES },
          {
            isExtensible: function isExtensible(it) {
              return isObject(it)
                ? nativeIsExtensible
                  ? nativeIsExtensible(it)
                  : true
                : false;
            },
          }
        );

        /***/
      },
      /* 303 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var isObject = __webpack_require__(4);

        var nativeIsFrozen = Object.isFrozen;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeIsFrozen(1);
        });

        // `Object.isFrozen` method
        // https://tc39.es/ecma262/#sec-object.isfrozen
        $(
          { target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES },
          {
            isFrozen: function isFrozen(it) {
              return isObject(it)
                ? nativeIsFrozen
                  ? nativeIsFrozen(it)
                  : false
                : true;
            },
          }
        );

        /***/
      },
      /* 304 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var isObject = __webpack_require__(4);

        var nativeIsSealed = Object.isSealed;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeIsSealed(1);
        });

        // `Object.isSealed` method
        // https://tc39.es/ecma262/#sec-object.issealed
        $(
          { target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES },
          {
            isSealed: function isSealed(it) {
              return isObject(it)
                ? nativeIsSealed
                  ? nativeIsSealed(it)
                  : false
                : true;
            },
          }
        );

        /***/
      },
      /* 305 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isObject = __webpack_require__(4);
        var onFreeze = __webpack_require__(55).onFreeze;
        var FREEZING = __webpack_require__(80);
        var fails = __webpack_require__(2);

        var nativePreventExtensions = Object.preventExtensions;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativePreventExtensions(1);
        });

        // `Object.preventExtensions` method
        // https://tc39.es/ecma262/#sec-object.preventextensions
        $(
          {
            target: "Object",
            stat: true,
            forced: FAILS_ON_PRIMITIVES,
            sham: !FREEZING,
          },
          {
            preventExtensions: function preventExtensions(it) {
              return nativePreventExtensions && isObject(it)
                ? nativePreventExtensions(onFreeze(it))
                : it;
            },
          }
        );

        /***/
      },
      /* 306 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isObject = __webpack_require__(4);
        var onFreeze = __webpack_require__(55).onFreeze;
        var FREEZING = __webpack_require__(80);
        var fails = __webpack_require__(2);

        var nativeSeal = Object.seal;
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeSeal(1);
        });

        // `Object.seal` method
        // https://tc39.es/ecma262/#sec-object.seal
        $(
          {
            target: "Object",
            stat: true,
            forced: FAILS_ON_PRIMITIVES,
            sham: !FREEZING,
          },
          {
            seal: function seal(it) {
              return nativeSeal && isObject(it) ? nativeSeal(onFreeze(it)) : it;
            },
          }
        );

        /***/
      },
      /* 307 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var setPrototypeOf = __webpack_require__(46);

        // `Object.setPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.setprototypeof
        $(
          { target: "Object", stat: true },
          {
            setPrototypeOf: setPrototypeOf,
          }
        );

        /***/
      },
      /* 308 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var FORCED = __webpack_require__(89);
        var toObject = __webpack_require__(13);
        var aFunction = __webpack_require__(25);
        var definePropertyModule = __webpack_require__(12);

        // `Object.prototype.__defineGetter__` method
        // https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__
        if (DESCRIPTORS) {
          $(
            { target: "Object", proto: true, forced: FORCED },
            {
              __defineGetter__: function __defineGetter__(P, getter) {
                definePropertyModule.f(toObject(this), P, {
                  get: aFunction(getter),
                  enumerable: true,
                  configurable: true,
                });
              },
            }
          );
        }

        /***/
      },
      /* 309 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var FORCED = __webpack_require__(89);
        var toObject = __webpack_require__(13);
        var aFunction = __webpack_require__(25);
        var definePropertyModule = __webpack_require__(12);

        // `Object.prototype.__defineSetter__` method
        // https://tc39.es/ecma262/#sec-object.prototype.__defineSetter__
        if (DESCRIPTORS) {
          $(
            { target: "Object", proto: true, forced: FORCED },
            {
              __defineSetter__: function __defineSetter__(P, setter) {
                definePropertyModule.f(toObject(this), P, {
                  set: aFunction(setter),
                  enumerable: true,
                  configurable: true,
                });
              },
            }
          );
        }

        /***/
      },
      /* 310 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var FORCED = __webpack_require__(89);
        var toObject = __webpack_require__(13);
        var toPrimitive = __webpack_require__(35);
        var getPrototypeOf = __webpack_require__(33);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;

        // `Object.prototype.__lookupGetter__` method
        // https://tc39.es/ecma262/#sec-object.prototype.__lookupGetter__
        if (DESCRIPTORS) {
          $(
            { target: "Object", proto: true, forced: FORCED },
            {
              __lookupGetter__: function __lookupGetter__(P) {
                var O = toObject(this);
                var key = toPrimitive(P, true);
                var desc;
                do {
                  if ((desc = getOwnPropertyDescriptor(O, key)))
                    return desc.get;
                } while ((O = getPrototypeOf(O)));
              },
            }
          );
        }

        /***/
      },
      /* 311 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var FORCED = __webpack_require__(89);
        var toObject = __webpack_require__(13);
        var toPrimitive = __webpack_require__(35);
        var getPrototypeOf = __webpack_require__(33);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;

        // `Object.prototype.__lookupSetter__` method
        // https://tc39.es/ecma262/#sec-object.prototype.__lookupSetter__
        if (DESCRIPTORS) {
          $(
            { target: "Object", proto: true, forced: FORCED },
            {
              __lookupSetter__: function __lookupSetter__(P) {
                var O = toObject(this);
                var key = toPrimitive(P, true);
                var desc;
                do {
                  if ((desc = getOwnPropertyDescriptor(O, key)))
                    return desc.set;
                } while ((O = getPrototypeOf(O)));
              },
            }
          );
        }

        /***/
      },
      /* 312 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var toAbsoluteIndex = __webpack_require__(44);

        var fromCharCode = String.fromCharCode;
        var nativeFromCodePoint = String.fromCodePoint;

        // length should be 1, old FF problem
        var INCORRECT_LENGTH =
          !!nativeFromCodePoint && nativeFromCodePoint.length != 1;

        // `String.fromCodePoint` method
        // https://tc39.es/ecma262/#sec-string.fromcodepoint
        $(
          { target: "String", stat: true, forced: INCORRECT_LENGTH },
          {
            // eslint-disable-next-line no-unused-vars -- required for `.length`
            fromCodePoint: function fromCodePoint(x) {
              var elements = [];
              var length = arguments.length;
              var i = 0;
              var code;
              while (length > i) {
                code = +arguments[i++];
                if (toAbsoluteIndex(code, 0x10ffff) !== code)
                  throw RangeError(code + " is not a valid code point");
                elements.push(
                  code < 0x10000
                    ? fromCharCode(code)
                    : fromCharCode(
                        ((code -= 0x10000) >> 10) + 0xd800,
                        (code % 0x400) + 0xdc00
                      )
                );
              }
              return elements.join("");
            },
          }
        );

        /***/
      },
      /* 313 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var toIndexedObject = __webpack_require__(27);
        var toLength = __webpack_require__(10);

        // `String.raw` method
        // https://tc39.es/ecma262/#sec-string.raw
        $(
          { target: "String", stat: true },
          {
            raw: function raw(template) {
              var rawTemplate = toIndexedObject(template.raw);
              var literalSegments = toLength(rawTemplate.length);
              var argumentsLength = arguments.length;
              var elements = [];
              var i = 0;
              while (literalSegments > i) {
                elements.push(String(rawTemplate[i++]));
                if (i < argumentsLength) elements.push(String(arguments[i]));
              }
              return elements.join("");
            },
          }
        );

        /***/
      },
      /* 314 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var codeAt = __webpack_require__(85).codeAt;

        // `String.prototype.codePointAt` method
        // https://tc39.es/ecma262/#sec-string.prototype.codepointat
        $(
          { target: "String", proto: true },
          {
            codePointAt: function codePointAt(pos) {
              return codeAt(this, pos);
            },
          }
        );

        /***/
      },
      /* 315 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;
        var toLength = __webpack_require__(10);
        var notARegExp = __webpack_require__(125);
        var requireObjectCoercible = __webpack_require__(21);
        var correctIsRegExpLogic = __webpack_require__(126);
        var IS_PURE = __webpack_require__(31);

        var nativeEndsWith = "".endsWith;
        var min = Math.min;

        var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic("endsWith");
        // https://github.com/zloirock/core-js/pull/702
        var MDN_POLYFILL_BUG =
          !IS_PURE &&
          !CORRECT_IS_REGEXP_LOGIC &&
          !!(function () {
            var descriptor = getOwnPropertyDescriptor(
              String.prototype,
              "endsWith"
            );
            return descriptor && !descriptor.writable;
          })();

        // `String.prototype.endsWith` method
        // https://tc39.es/ecma262/#sec-string.prototype.endswith
        $(
          {
            target: "String",
            proto: true,
            forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC,
          },
          {
            endsWith: function endsWith(
              searchString /* , endPosition = @length */
            ) {
              var that = String(requireObjectCoercible(this));
              notARegExp(searchString);
              var endPosition = arguments.length > 1 ? arguments[1] : undefined;
              var len = toLength(that.length);
              var end =
                endPosition === undefined
                  ? len
                  : min(toLength(endPosition), len);
              var search = String(searchString);
              return nativeEndsWith
                ? nativeEndsWith.call(that, search, end)
                : that.slice(end - search.length, end) === search;
            },
          }
        );

        /***/
      },
      /* 316 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fixRegExpWellKnownSymbolLogic = __webpack_require__(90);
        var anObject = __webpack_require__(5);
        var toLength = __webpack_require__(10);
        var requireObjectCoercible = __webpack_require__(21);
        var advanceStringIndex = __webpack_require__(93);
        var regExpExec = __webpack_require__(94);

        // @@match logic
        fixRegExpWellKnownSymbolLogic(
          "match",
          1,
          function (MATCH, nativeMatch, maybeCallNative) {
            return [
              // `String.prototype.match` method
              // https://tc39.es/ecma262/#sec-string.prototype.match
              function match(regexp) {
                var O = requireObjectCoercible(this);
                var matcher = regexp == undefined ? undefined : regexp[MATCH];
                return matcher !== undefined
                  ? matcher.call(regexp, O)
                  : new RegExp(regexp)[MATCH](String(O));
              },
              // `RegExp.prototype[@@match]` method
              // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
              function (regexp) {
                var res = maybeCallNative(nativeMatch, regexp, this);
                if (res.done) return res.value;

                var rx = anObject(regexp);
                var S = String(this);

                if (!rx.global) return regExpExec(rx, S);

                var fullUnicode = rx.unicode;
                rx.lastIndex = 0;
                var A = [];
                var n = 0;
                var result;
                while ((result = regExpExec(rx, S)) !== null) {
                  var matchStr = String(result[0]);
                  A[n] = matchStr;
                  if (matchStr === "")
                    rx.lastIndex = advanceStringIndex(
                      S,
                      toLength(rx.lastIndex),
                      fullUnicode
                    );
                  n++;
                }
                return n === 0 ? null : A;
              },
            ];
          }
        );

        /***/
      },
      /* 317 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createIteratorConstructor = __webpack_require__(116);
        var requireObjectCoercible = __webpack_require__(21);
        var toLength = __webpack_require__(10);
        var aFunction = __webpack_require__(25);
        var anObject = __webpack_require__(5);
        var classof = __webpack_require__(40);
        var isRegExp = __webpack_require__(81);
        var getRegExpFlags = __webpack_require__(63);
        var createNonEnumerableProperty = __webpack_require__(22);
        var fails = __webpack_require__(2);
        var wellKnownSymbol = __webpack_require__(8);
        var speciesConstructor = __webpack_require__(42);
        var advanceStringIndex = __webpack_require__(93);
        var InternalStateModule = __webpack_require__(24);
        var IS_PURE = __webpack_require__(31);

        var MATCH_ALL = wellKnownSymbol("matchAll");
        var REGEXP_STRING = "RegExp String";
        var REGEXP_STRING_ITERATOR = REGEXP_STRING + " Iterator";
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(
          REGEXP_STRING_ITERATOR
        );
        var RegExpPrototype = RegExp.prototype;
        var regExpBuiltinExec = RegExpPrototype.exec;
        var nativeMatchAll = "".matchAll;

        var WORKS_WITH_NON_GLOBAL_REGEX =
          !!nativeMatchAll &&
          !fails(function () {
            "a".matchAll(/./);
          });

        var regExpExec = function (R, S) {
          var exec = R.exec;
          var result;
          if (typeof exec == "function") {
            result = exec.call(R, S);
            if (typeof result != "object")
              throw TypeError("Incorrect exec result");
            return result;
          }
          return regExpBuiltinExec.call(R, S);
        };

        // eslint-disable-next-line max-len -- ignore
        var $RegExpStringIterator = createIteratorConstructor(
          function RegExpStringIterator(regexp, string, global, fullUnicode) {
            setInternalState(this, {
              type: REGEXP_STRING_ITERATOR,
              regexp: regexp,
              string: string,
              global: global,
              unicode: fullUnicode,
              done: false,
            });
          },
          REGEXP_STRING,
          function next() {
            var state = getInternalState(this);
            if (state.done) return { value: undefined, done: true };
            var R = state.regexp;
            var S = state.string;
            var match = regExpExec(R, S);
            if (match === null)
              return { value: undefined, done: (state.done = true) };
            if (state.global) {
              if (String(match[0]) == "")
                R.lastIndex = advanceStringIndex(
                  S,
                  toLength(R.lastIndex),
                  state.unicode
                );
              return { value: match, done: false };
            }
            state.done = true;
            return { value: match, done: false };
          }
        );

        var $matchAll = function (string) {
          var R = anObject(this);
          var S = String(string);
          var C, flagsValue, flags, matcher, global, fullUnicode;
          C = speciesConstructor(R, RegExp);
          flagsValue = R.flags;
          if (
            flagsValue === undefined &&
            R instanceof RegExp &&
            !("flags" in RegExpPrototype)
          ) {
            flagsValue = getRegExpFlags.call(R);
          }
          flags = flagsValue === undefined ? "" : String(flagsValue);
          matcher = new C(C === RegExp ? R.source : R, flags);
          global = !!~flags.indexOf("g");
          fullUnicode = !!~flags.indexOf("u");
          matcher.lastIndex = toLength(R.lastIndex);
          return new $RegExpStringIterator(matcher, S, global, fullUnicode);
        };

        // `String.prototype.matchAll` method
        // https://tc39.es/ecma262/#sec-string.prototype.matchall
        $(
          {
            target: "String",
            proto: true,
            forced: WORKS_WITH_NON_GLOBAL_REGEX,
          },
          {
            matchAll: function matchAll(regexp) {
              var O = requireObjectCoercible(this);
              var flags, S, matcher, rx;
              if (regexp != null) {
                if (isRegExp(regexp)) {
                  flags = String(
                    requireObjectCoercible(
                      "flags" in RegExpPrototype
                        ? regexp.flags
                        : getRegExpFlags.call(regexp)
                    )
                  );
                  if (!~flags.indexOf("g"))
                    throw TypeError(
                      "`.matchAll` does not allow non-global regexes"
                    );
                }
                if (WORKS_WITH_NON_GLOBAL_REGEX)
                  return nativeMatchAll.apply(O, arguments);
                matcher = regexp[MATCH_ALL];
                if (
                  matcher === undefined &&
                  IS_PURE &&
                  classof(regexp) == "RegExp"
                )
                  matcher = $matchAll;
                if (matcher != null) return aFunction(matcher).call(regexp, O);
              } else if (WORKS_WITH_NON_GLOBAL_REGEX)
                return nativeMatchAll.apply(O, arguments);
              S = String(O);
              rx = new RegExp(regexp, "g");
              return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);
            },
          }
        );

        IS_PURE ||
          MATCH_ALL in RegExpPrototype ||
          createNonEnumerableProperty(RegExpPrototype, MATCH_ALL, $matchAll);

        /***/
      },
      /* 318 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $padEnd = __webpack_require__(128).end;
        var WEBKIT_BUG = __webpack_require__(212);

        // `String.prototype.padEnd` method
        // https://tc39.es/ecma262/#sec-string.prototype.padend
        $(
          { target: "String", proto: true, forced: WEBKIT_BUG },
          {
            padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
              return $padEnd(
                this,
                maxLength,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 319 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $padStart = __webpack_require__(128).start;
        var WEBKIT_BUG = __webpack_require__(212);

        // `String.prototype.padStart` method
        // https://tc39.es/ecma262/#sec-string.prototype.padstart
        $(
          { target: "String", proto: true, forced: WEBKIT_BUG },
          {
            padStart: function padStart(maxLength /* , fillString = ' ' */) {
              return $padStart(
                this,
                maxLength,
                arguments.length > 1 ? arguments[1] : undefined
              );
            },
          }
        );

        /***/
      },
      /* 320 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var repeat = __webpack_require__(129);

        // `String.prototype.repeat` method
        // https://tc39.es/ecma262/#sec-string.prototype.repeat
        $(
          { target: "String", proto: true },
          {
            repeat: repeat,
          }
        );

        /***/
      },
      /* 321 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fixRegExpWellKnownSymbolLogic = __webpack_require__(90);
        var anObject = __webpack_require__(5);
        var requireObjectCoercible = __webpack_require__(21);
        var sameValue = __webpack_require__(210);
        var regExpExec = __webpack_require__(94);

        // @@search logic
        fixRegExpWellKnownSymbolLogic(
          "search",
          1,
          function (SEARCH, nativeSearch, maybeCallNative) {
            return [
              // `String.prototype.search` method
              // https://tc39.es/ecma262/#sec-string.prototype.search
              function search(regexp) {
                var O = requireObjectCoercible(this);
                var searcher = regexp == undefined ? undefined : regexp[SEARCH];
                return searcher !== undefined
                  ? searcher.call(regexp, O)
                  : new RegExp(regexp)[SEARCH](String(O));
              },
              // `RegExp.prototype[@@search]` method
              // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
              function (regexp) {
                var res = maybeCallNative(nativeSearch, regexp, this);
                if (res.done) return res.value;

                var rx = anObject(regexp);
                var S = String(this);

                var previousLastIndex = rx.lastIndex;
                if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
                var result = regExpExec(rx, S);
                if (!sameValue(rx.lastIndex, previousLastIndex))
                  rx.lastIndex = previousLastIndex;
                return result === null ? -1 : result.index;
              },
            ];
          }
        );

        /***/
      },
      /* 322 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;
        var toLength = __webpack_require__(10);
        var notARegExp = __webpack_require__(125);
        var requireObjectCoercible = __webpack_require__(21);
        var correctIsRegExpLogic = __webpack_require__(126);
        var IS_PURE = __webpack_require__(31);

        var nativeStartsWith = "".startsWith;
        var min = Math.min;

        var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic("startsWith");
        // https://github.com/zloirock/core-js/pull/702
        var MDN_POLYFILL_BUG =
          !IS_PURE &&
          !CORRECT_IS_REGEXP_LOGIC &&
          !!(function () {
            var descriptor = getOwnPropertyDescriptor(
              String.prototype,
              "startsWith"
            );
            return descriptor && !descriptor.writable;
          })();

        // `String.prototype.startsWith` method
        // https://tc39.es/ecma262/#sec-string.prototype.startswith
        $(
          {
            target: "String",
            proto: true,
            forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC,
          },
          {
            startsWith: function startsWith(searchString /* , position = 0 */) {
              var that = String(requireObjectCoercible(this));
              notARegExp(searchString);
              var index = toLength(
                min(
                  arguments.length > 1 ? arguments[1] : undefined,
                  that.length
                )
              );
              var search = String(searchString);
              return nativeStartsWith
                ? nativeStartsWith.call(that, search, index)
                : that.slice(index, index + search.length) === search;
            },
          }
        );

        /***/
      },
      /* 323 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $trim = __webpack_require__(64).trim;
        var forcedStringTrimMethod = __webpack_require__(131);

        // `String.prototype.trim` method
        // https://tc39.es/ecma262/#sec-string.prototype.trim
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringTrimMethod("trim"),
          },
          {
            trim: function trim() {
              return $trim(this);
            },
          }
        );

        /***/
      },
      /* 324 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $trimStart = __webpack_require__(64).start;
        var forcedStringTrimMethod = __webpack_require__(131);

        var FORCED = forcedStringTrimMethod("trimStart");

        var trimStart = FORCED
          ? function trimStart() {
              return $trimStart(this);
            }
          : "".trimStart;

        // `String.prototype.{ trimStart, trimLeft }` methods
        // https://tc39.es/ecma262/#sec-string.prototype.trimstart
        // https://tc39.es/ecma262/#String.prototype.trimleft
        $(
          { target: "String", proto: true, forced: FORCED },
          {
            trimStart: trimStart,
            trimLeft: trimStart,
          }
        );

        /***/
      },
      /* 325 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var $trimEnd = __webpack_require__(64).end;
        var forcedStringTrimMethod = __webpack_require__(131);

        var FORCED = forcedStringTrimMethod("trimEnd");

        var trimEnd = FORCED
          ? function trimEnd() {
              return $trimEnd(this);
            }
          : "".trimEnd;

        // `String.prototype.{ trimEnd, trimRight }` methods
        // https://tc39.es/ecma262/#sec-string.prototype.trimend
        // https://tc39.es/ecma262/#String.prototype.trimright
        $(
          { target: "String", proto: true, forced: FORCED },
          {
            trimEnd: trimEnd,
            trimRight: trimEnd,
          }
        );

        /***/
      },
      /* 326 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.anchor` method
        // https://tc39.es/ecma262/#sec-string.prototype.anchor
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("anchor"),
          },
          {
            anchor: function anchor(name) {
              return createHTML(this, "a", "name", name);
            },
          }
        );

        /***/
      },
      /* 327 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.big` method
        // https://tc39.es/ecma262/#sec-string.prototype.big
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("big"),
          },
          {
            big: function big() {
              return createHTML(this, "big", "", "");
            },
          }
        );

        /***/
      },
      /* 328 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.blink` method
        // https://tc39.es/ecma262/#sec-string.prototype.blink
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("blink"),
          },
          {
            blink: function blink() {
              return createHTML(this, "blink", "", "");
            },
          }
        );

        /***/
      },
      /* 329 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.bold` method
        // https://tc39.es/ecma262/#sec-string.prototype.bold
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("bold"),
          },
          {
            bold: function bold() {
              return createHTML(this, "b", "", "");
            },
          }
        );

        /***/
      },
      /* 330 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.fixed` method
        // https://tc39.es/ecma262/#sec-string.prototype.fixed
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("fixed"),
          },
          {
            fixed: function fixed() {
              return createHTML(this, "tt", "", "");
            },
          }
        );

        /***/
      },
      /* 331 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.fontcolor` method
        // https://tc39.es/ecma262/#sec-string.prototype.fontcolor
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("fontcolor"),
          },
          {
            fontcolor: function fontcolor(color) {
              return createHTML(this, "font", "color", color);
            },
          }
        );

        /***/
      },
      /* 332 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.fontsize` method
        // https://tc39.es/ecma262/#sec-string.prototype.fontsize
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("fontsize"),
          },
          {
            fontsize: function fontsize(size) {
              return createHTML(this, "font", "size", size);
            },
          }
        );

        /***/
      },
      /* 333 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.italics` method
        // https://tc39.es/ecma262/#sec-string.prototype.italics
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("italics"),
          },
          {
            italics: function italics() {
              return createHTML(this, "i", "", "");
            },
          }
        );

        /***/
      },
      /* 334 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.link` method
        // https://tc39.es/ecma262/#sec-string.prototype.link
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("link"),
          },
          {
            link: function link(url) {
              return createHTML(this, "a", "href", url);
            },
          }
        );

        /***/
      },
      /* 335 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.small` method
        // https://tc39.es/ecma262/#sec-string.prototype.small
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("small"),
          },
          {
            small: function small() {
              return createHTML(this, "small", "", "");
            },
          }
        );

        /***/
      },
      /* 336 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.strike` method
        // https://tc39.es/ecma262/#sec-string.prototype.strike
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("strike"),
          },
          {
            strike: function strike() {
              return createHTML(this, "strike", "", "");
            },
          }
        );

        /***/
      },
      /* 337 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.sub` method
        // https://tc39.es/ecma262/#sec-string.prototype.sub
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("sub"),
          },
          {
            sub: function sub() {
              return createHTML(this, "sub", "", "");
            },
          }
        );

        /***/
      },
      /* 338 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var createHTML = __webpack_require__(29);
        var forcedStringHTMLMethod = __webpack_require__(30);

        // `String.prototype.sup` method
        // https://tc39.es/ecma262/#sec-string.prototype.sup
        $(
          {
            target: "String",
            proto: true,
            forced: forcedStringHTMLMethod("sup"),
          },
          {
            sup: function sup() {
              return createHTML(this, "sup", "", "");
            },
          }
        );

        /***/
      },
      /* 339 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var requireObjectCoercible = __webpack_require__(21);
        var isRegExp = __webpack_require__(81);
        var getRegExpFlags = __webpack_require__(63);
        var getSubstitution = __webpack_require__(214);
        var wellKnownSymbol = __webpack_require__(8);
        var IS_PURE = __webpack_require__(31);

        var REPLACE = wellKnownSymbol("replace");
        var RegExpPrototype = RegExp.prototype;
        var max = Math.max;

        var stringIndexOf = function (string, searchValue, fromIndex) {
          if (fromIndex > string.length) return -1;
          if (searchValue === "") return fromIndex;
          return string.indexOf(searchValue, fromIndex);
        };

        // `String.prototype.replaceAll` method
        // https://tc39.es/ecma262/#sec-string.prototype.replaceall
        $(
          { target: "String", proto: true },
          {
            replaceAll: function replaceAll(searchValue, replaceValue) {
              var O = requireObjectCoercible(this);
              var IS_REG_EXP,
                flags,
                replacer,
                string,
                searchString,
                functionalReplace,
                searchLength,
                advanceBy,
                replacement;
              var position = 0;
              var endOfLastMatch = 0;
              var result = "";
              if (searchValue != null) {
                IS_REG_EXP = isRegExp(searchValue);
                if (IS_REG_EXP) {
                  flags = String(
                    requireObjectCoercible(
                      "flags" in RegExpPrototype
                        ? searchValue.flags
                        : getRegExpFlags.call(searchValue)
                    )
                  );
                  if (!~flags.indexOf("g"))
                    throw TypeError(
                      "`.replaceAll` does not allow non-global regexes"
                    );
                }
                replacer = searchValue[REPLACE];
                if (replacer !== undefined) {
                  return replacer.call(searchValue, O, replaceValue);
                } else if (IS_PURE && IS_REG_EXP) {
                  return String(O).replace(searchValue, replaceValue);
                }
              }
              string = String(O);
              searchString = String(searchValue);
              functionalReplace = typeof replaceValue === "function";
              if (!functionalReplace) replaceValue = String(replaceValue);
              searchLength = searchString.length;
              advanceBy = max(1, searchLength);
              position = stringIndexOf(string, searchString, 0);
              while (position !== -1) {
                if (functionalReplace) {
                  replacement = String(
                    replaceValue(searchString, position, string)
                  );
                } else {
                  replacement = getSubstitution(
                    searchString,
                    string,
                    position,
                    [],
                    undefined,
                    replaceValue
                  );
                }
                result += string.slice(endOfLastMatch, position) + replacement;
                endOfLastMatch = position + searchLength;
                position = stringIndexOf(
                  string,
                  searchString,
                  position + advanceBy
                );
              }
              if (endOfLastMatch < string.length) {
                result += string.slice(endOfLastMatch);
              }
              return result;
            },
          }
        );

        /***/
      },
      /* 340 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var objectDefinePropertyModule = __webpack_require__(12);
        var regExpFlags = __webpack_require__(63);
        var UNSUPPORTED_Y = __webpack_require__(92).UNSUPPORTED_Y;

        // `RegExp.prototype.flags` getter
        // https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
        if (DESCRIPTORS && (/./g.flags != "g" || UNSUPPORTED_Y)) {
          objectDefinePropertyModule.f(RegExp.prototype, "flags", {
            configurable: true,
            get: regExpFlags,
          });
        }

        /***/
      },
      /* 341 */
      /***/ function (module, exports, __webpack_require__) {
        var DESCRIPTORS = __webpack_require__(7);
        var UNSUPPORTED_Y = __webpack_require__(92).UNSUPPORTED_Y;
        var defineProperty = __webpack_require__(12).f;
        var getInternalState = __webpack_require__(24).get;
        var RegExpPrototype = RegExp.prototype;

        // `RegExp.prototype.sticky` getter
        // https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
        if (DESCRIPTORS && UNSUPPORTED_Y) {
          defineProperty(RegExp.prototype, "sticky", {
            configurable: true,
            get: function () {
              if (this === RegExpPrototype) return undefined;
              // We can't use InternalStateModule.getterFor because
              // we don't add metadata for regexps created by a literal.
              if (this instanceof RegExp) {
                return !!getInternalState(this).sticky;
              }
              throw TypeError("Incompatible receiver, RegExp required");
            },
          });
        }

        /***/
      },
      /* 342 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        // TODO: Remove from `core-js@4` since it's moved to entry points
        __webpack_require__(82);
        var $ = __webpack_require__(1);
        var isObject = __webpack_require__(4);

        var DELEGATES_TO_EXEC = (function () {
          var execCalled = false;
          var re = /[ac]/;
          re.exec = function () {
            execCalled = true;
            return /./.exec.apply(this, arguments);
          };
          return re.test("abc") === true && execCalled;
        })();

        var nativeTest = /./.test;

        // `RegExp.prototype.test` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.test
        $(
          { target: "RegExp", proto: true, forced: !DELEGATES_TO_EXEC },
          {
            test: function (str) {
              if (typeof this.exec !== "function") {
                return nativeTest.call(this, str);
              }
              var result = this.exec(str);
              if (result !== null && !isObject(result)) {
                throw new Error(
                  "RegExp exec method returned something other than an Object or null"
                );
              }
              return !!result;
            },
          }
        );

        /***/
      },
      /* 343 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var DESCRIPTORS = __webpack_require__(7);
        var global = __webpack_require__(3);
        var isForced = __webpack_require__(70);
        var redefine = __webpack_require__(23);
        var has = __webpack_require__(14);
        var classof = __webpack_require__(40);
        var inheritIfRequired = __webpack_require__(96);
        var toPrimitive = __webpack_require__(35);
        var fails = __webpack_require__(2);
        var create = __webpack_require__(37);
        var getOwnPropertyNames = __webpack_require__(52).f;
        var getOwnPropertyDescriptor = __webpack_require__(20).f;
        var defineProperty = __webpack_require__(12).f;
        var trim = __webpack_require__(64).trim;

        var NUMBER = "Number";
        var NativeNumber = global[NUMBER];
        var NumberPrototype = NativeNumber.prototype;

        // Opera ~12 has broken Object#toString
        var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

        // `ToNumber` abstract operation
        // https://tc39.es/ecma262/#sec-tonumber
        var toNumber = function (argument) {
          var it = toPrimitive(argument, false);
          var first, third, radix, maxCode, digits, length, index, code;
          if (typeof it == "string" && it.length > 2) {
            it = trim(it);
            first = it.charCodeAt(0);
            if (first === 43 || first === 45) {
              third = it.charCodeAt(2);
              if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
            } else if (first === 48) {
              switch (it.charCodeAt(1)) {
                case 66:
                case 98:
                  radix = 2;
                  maxCode = 49;
                  break; // fast equal of /^0b[01]+$/i
                case 79:
                case 111:
                  radix = 8;
                  maxCode = 55;
                  break; // fast equal of /^0o[0-7]+$/i
                default:
                  return +it;
              }
              digits = it.slice(2);
              length = digits.length;
              for (index = 0; index < length; index++) {
                code = digits.charCodeAt(index);
                // parseInt parses a string to a first unavailable symbol
                // but ToNumber should return NaN if a string contains unavailable symbols
                if (code < 48 || code > maxCode) return NaN;
              }
              return parseInt(digits, radix);
            }
          }
          return +it;
        };

        // `Number` constructor
        // https://tc39.es/ecma262/#sec-number-constructor
        if (
          isForced(
            NUMBER,
            !NativeNumber(" 0o1") ||
              !NativeNumber("0b1") ||
              NativeNumber("+0x1")
          )
        ) {
          var NumberWrapper = function Number(value) {
            var it = arguments.length < 1 ? 0 : value;
            var dummy = this;
            return dummy instanceof NumberWrapper &&
              // check on 1..constructor(foo) case
              (BROKEN_CLASSOF
                ? fails(function () {
                    NumberPrototype.valueOf.call(dummy);
                  })
                : classof(dummy) != NUMBER)
              ? inheritIfRequired(
                  new NativeNumber(toNumber(it)),
                  dummy,
                  NumberWrapper
                )
              : toNumber(it);
          };
          for (
            var keys = DESCRIPTORS
                ? getOwnPropertyNames(NativeNumber)
                : // ES3:
                  (
                    "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY," +
                    // ES2015 (in case, if modules with ES2015 Number statics required before):
                    "EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER," +
                    "MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger," +
                    // ESNext
                    "fromString,range"
                  ).split(","),
              j = 0,
              key;
            keys.length > j;
            j++
          ) {
            if (
              has(NativeNumber, (key = keys[j])) &&
              !has(NumberWrapper, key)
            ) {
              defineProperty(
                NumberWrapper,
                key,
                getOwnPropertyDescriptor(NativeNumber, key)
              );
            }
          }
          NumberWrapper.prototype = NumberPrototype;
          NumberPrototype.constructor = NumberWrapper;
          redefine(global, NUMBER, NumberWrapper);
        }

        /***/
      },
      /* 344 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Number.EPSILON` constant
        // https://tc39.es/ecma262/#sec-number.epsilon
        $(
          { target: "Number", stat: true },
          {
            EPSILON: Math.pow(2, -52),
          }
        );

        /***/
      },
      /* 345 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var numberIsFinite = __webpack_require__(346);

        // `Number.isFinite` method
        // https://tc39.es/ecma262/#sec-number.isfinite
        $({ target: "Number", stat: true }, { isFinite: numberIsFinite });

        /***/
      },
      /* 346 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);

        var globalIsFinite = global.isFinite;

        // `Number.isFinite` method
        // https://tc39.es/ecma262/#sec-number.isfinite
        module.exports =
          Number.isFinite ||
          function isFinite(it) {
            return typeof it == "number" && globalIsFinite(it);
          };

        /***/
      },
      /* 347 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isInteger = __webpack_require__(218);

        // `Number.isInteger` method
        // https://tc39.es/ecma262/#sec-number.isinteger
        $(
          { target: "Number", stat: true },
          {
            isInteger: isInteger,
          }
        );

        /***/
      },
      /* 348 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Number.isNaN` method
        // https://tc39.es/ecma262/#sec-number.isnan
        $(
          { target: "Number", stat: true },
          {
            isNaN: function isNaN(number) {
              // eslint-disable-next-line no-self-compare -- NaN check
              return number != number;
            },
          }
        );

        /***/
      },
      /* 349 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isInteger = __webpack_require__(218);

        var abs = Math.abs;

        // `Number.isSafeInteger` method
        // https://tc39.es/ecma262/#sec-number.issafeinteger
        $(
          { target: "Number", stat: true },
          {
            isSafeInteger: function isSafeInteger(number) {
              return isInteger(number) && abs(number) <= 0x1fffffffffffff;
            },
          }
        );

        /***/
      },
      /* 350 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Number.MAX_SAFE_INTEGER` constant
        // https://tc39.es/ecma262/#sec-number.max_safe_integer
        $(
          { target: "Number", stat: true },
          {
            MAX_SAFE_INTEGER: 0x1fffffffffffff,
          }
        );

        /***/
      },
      /* 351 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Number.MIN_SAFE_INTEGER` constant
        // https://tc39.es/ecma262/#sec-number.min_safe_integer
        $(
          { target: "Number", stat: true },
          {
            MIN_SAFE_INTEGER: -0x1fffffffffffff,
          }
        );

        /***/
      },
      /* 352 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var parseFloat = __webpack_require__(217);

        // `Number.parseFloat` method
        // https://tc39.es/ecma262/#sec-number.parseFloat
        $(
          {
            target: "Number",
            stat: true,
            forced: Number.parseFloat != parseFloat,
          },
          {
            parseFloat: parseFloat,
          }
        );

        /***/
      },
      /* 353 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var parseInt = __webpack_require__(216);

        // `Number.parseInt` method
        // https://tc39.es/ecma262/#sec-number.parseint
        $(
          { target: "Number", stat: true, forced: Number.parseInt != parseInt },
          {
            parseInt: parseInt,
          }
        );

        /***/
      },
      /* 354 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var toInteger = __webpack_require__(32);
        var thisNumberValue = __webpack_require__(219);
        var repeat = __webpack_require__(129);
        var fails = __webpack_require__(2);

        var nativeToFixed = (1.0).toFixed;
        var floor = Math.floor;

        var pow = function (x, n, acc) {
          return n === 0
            ? acc
            : n % 2 === 1
            ? pow(x, n - 1, acc * x)
            : pow(x * x, n / 2, acc);
        };

        var log = function (x) {
          var n = 0;
          var x2 = x;
          while (x2 >= 4096) {
            n += 12;
            x2 /= 4096;
          }
          while (x2 >= 2) {
            n += 1;
            x2 /= 2;
          }
          return n;
        };

        var multiply = function (data, n, c) {
          var index = -1;
          var c2 = c;
          while (++index < 6) {
            c2 += n * data[index];
            data[index] = c2 % 1e7;
            c2 = floor(c2 / 1e7);
          }
        };

        var divide = function (data, n) {
          var index = 6;
          var c = 0;
          while (--index >= 0) {
            c += data[index];
            data[index] = floor(c / n);
            c = (c % n) * 1e7;
          }
        };

        var dataToString = function (data) {
          var index = 6;
          var s = "";
          while (--index >= 0) {
            if (s !== "" || index === 0 || data[index] !== 0) {
              var t = String(data[index]);
              s = s === "" ? t : s + repeat.call("0", 7 - t.length) + t;
            }
          }
          return s;
        };

        var FORCED =
          (nativeToFixed &&
            ((0.00008).toFixed(3) !== "0.000" ||
              (0.9).toFixed(0) !== "1" ||
              (1.255).toFixed(2) !== "1.25" ||
              (1000000000000000128.0).toFixed(0) !== "1000000000000000128")) ||
          !fails(function () {
            // V8 ~ Android 4.3-
            nativeToFixed.call({});
          });

        // `Number.prototype.toFixed` method
        // https://tc39.es/ecma262/#sec-number.prototype.tofixed
        $(
          { target: "Number", proto: true, forced: FORCED },
          {
            toFixed: function toFixed(fractionDigits) {
              var number = thisNumberValue(this);
              var fractDigits = toInteger(fractionDigits);
              var data = [0, 0, 0, 0, 0, 0];
              var sign = "";
              var result = "0";
              var e, z, j, k;

              if (fractDigits < 0 || fractDigits > 20)
                throw RangeError("Incorrect fraction digits");
              // eslint-disable-next-line no-self-compare -- NaN check
              if (number != number) return "NaN";
              if (number <= -1e21 || number >= 1e21) return String(number);
              if (number < 0) {
                sign = "-";
                number = -number;
              }
              if (number > 1e-21) {
                e = log(number * pow(2, 69, 1)) - 69;
                z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
                z *= 0x10000000000000;
                e = 52 - e;
                if (e > 0) {
                  multiply(data, 0, z);
                  j = fractDigits;
                  while (j >= 7) {
                    multiply(data, 1e7, 0);
                    j -= 7;
                  }
                  multiply(data, pow(10, j, 1), 0);
                  j = e - 1;
                  while (j >= 23) {
                    divide(data, 1 << 23);
                    j -= 23;
                  }
                  divide(data, 1 << j);
                  multiply(data, 1, 1);
                  divide(data, 2);
                  result = dataToString(data);
                } else {
                  multiply(data, 0, z);
                  multiply(data, 1 << -e, 0);
                  result = dataToString(data) + repeat.call("0", fractDigits);
                }
              }
              if (fractDigits > 0) {
                k = result.length;
                result =
                  sign +
                  (k <= fractDigits
                    ? "0." + repeat.call("0", fractDigits - k) + result
                    : result.slice(0, k - fractDigits) +
                      "." +
                      result.slice(k - fractDigits));
              } else {
                result = sign + result;
              }
              return result;
            },
          }
        );

        /***/
      },
      /* 355 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var thisNumberValue = __webpack_require__(219);

        var nativeToPrecision = (1.0).toPrecision;

        var FORCED =
          fails(function () {
            // IE7-
            return nativeToPrecision.call(1, undefined) !== "1";
          }) ||
          !fails(function () {
            // V8 ~ Android 4.3-
            nativeToPrecision.call({});
          });

        // `Number.prototype.toPrecision` method
        // https://tc39.es/ecma262/#sec-number.prototype.toprecision
        $(
          { target: "Number", proto: true, forced: FORCED },
          {
            toPrecision: function toPrecision(precision) {
              return precision === undefined
                ? nativeToPrecision.call(thisNumberValue(this))
                : nativeToPrecision.call(thisNumberValue(this), precision);
            },
          }
        );

        /***/
      },
      /* 356 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var log1p = __webpack_require__(220);

        var nativeAcosh = Math.acosh;
        var log = Math.log;
        var sqrt = Math.sqrt;
        var LN2 = Math.LN2;

        var FORCED =
          !nativeAcosh ||
          // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
          Math.floor(nativeAcosh(Number.MAX_VALUE)) != 710 ||
          // Tor Browser bug: Math.acosh(Infinity) -> NaN
          nativeAcosh(Infinity) != Infinity;

        // `Math.acosh` method
        // https://tc39.es/ecma262/#sec-math.acosh
        $(
          { target: "Math", stat: true, forced: FORCED },
          {
            acosh: function acosh(x) {
              return (x = +x) < 1
                ? NaN
                : x > 94906265.62425156
                ? log(x) + LN2
                : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
            },
          }
        );

        /***/
      },
      /* 357 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var nativeAsinh = Math.asinh;
        var log = Math.log;
        var sqrt = Math.sqrt;

        function asinh(x) {
          return !isFinite((x = +x)) || x == 0
            ? x
            : x < 0
            ? -asinh(-x)
            : log(x + sqrt(x * x + 1));
        }

        // `Math.asinh` method
        // https://tc39.es/ecma262/#sec-math.asinh
        // Tor Browser bug: Math.asinh(0) -> -0
        $(
          {
            target: "Math",
            stat: true,
            forced: !(nativeAsinh && 1 / nativeAsinh(0) > 0),
          },
          {
            asinh: asinh,
          }
        );

        /***/
      },
      /* 358 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var nativeAtanh = Math.atanh;
        var log = Math.log;

        // `Math.atanh` method
        // https://tc39.es/ecma262/#sec-math.atanh
        // Tor Browser bug: Math.atanh(-0) -> 0
        $(
          {
            target: "Math",
            stat: true,
            forced: !(nativeAtanh && 1 / nativeAtanh(-0) < 0),
          },
          {
            atanh: function atanh(x) {
              return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
            },
          }
        );

        /***/
      },
      /* 359 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var sign = __webpack_require__(135);

        var abs = Math.abs;
        var pow = Math.pow;

        // `Math.cbrt` method
        // https://tc39.es/ecma262/#sec-math.cbrt
        $(
          { target: "Math", stat: true },
          {
            cbrt: function cbrt(x) {
              return sign((x = +x)) * pow(abs(x), 1 / 3);
            },
          }
        );

        /***/
      },
      /* 360 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var floor = Math.floor;
        var log = Math.log;
        var LOG2E = Math.LOG2E;

        // `Math.clz32` method
        // https://tc39.es/ecma262/#sec-math.clz32
        $(
          { target: "Math", stat: true },
          {
            clz32: function clz32(x) {
              return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;
            },
          }
        );

        /***/
      },
      /* 361 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var expm1 = __webpack_require__(97);

        var nativeCosh = Math.cosh;
        var abs = Math.abs;
        var E = Math.E;

        // `Math.cosh` method
        // https://tc39.es/ecma262/#sec-math.cosh
        $(
          {
            target: "Math",
            stat: true,
            forced: !nativeCosh || nativeCosh(710) === Infinity,
          },
          {
            cosh: function cosh(x) {
              var t = expm1(abs(x) - 1) + 1;
              return (t + 1 / (t * E * E)) * (E / 2);
            },
          }
        );

        /***/
      },
      /* 362 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var expm1 = __webpack_require__(97);

        // `Math.expm1` method
        // https://tc39.es/ecma262/#sec-math.expm1
        $(
          { target: "Math", stat: true, forced: expm1 != Math.expm1 },
          { expm1: expm1 }
        );

        /***/
      },
      /* 363 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fround = __webpack_require__(364);

        // `Math.fround` method
        // https://tc39.es/ecma262/#sec-math.fround
        $({ target: "Math", stat: true }, { fround: fround });

        /***/
      },
      /* 364 */
      /***/ function (module, exports, __webpack_require__) {
        var sign = __webpack_require__(135);

        var abs = Math.abs;
        var pow = Math.pow;
        var EPSILON = pow(2, -52);
        var EPSILON32 = pow(2, -23);
        var MAX32 = pow(2, 127) * (2 - EPSILON32);
        var MIN32 = pow(2, -126);

        var roundTiesToEven = function (n) {
          return n + 1 / EPSILON - 1 / EPSILON;
        };

        // `Math.fround` method implementation
        // https://tc39.es/ecma262/#sec-math.fround
        module.exports =
          Math.fround ||
          function fround(x) {
            var $abs = abs(x);
            var $sign = sign(x);
            var a, result;
            if ($abs < MIN32)
              return (
                $sign *
                roundTiesToEven($abs / MIN32 / EPSILON32) *
                MIN32 *
                EPSILON32
              );
            a = (1 + EPSILON32 / EPSILON) * $abs;
            result = a - (a - $abs);
            // eslint-disable-next-line no-self-compare -- NaN check
            if (result > MAX32 || result != result) return $sign * Infinity;
            return $sign * result;
          };

        /***/
      },
      /* 365 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var $hypot = Math.hypot;
        var abs = Math.abs;
        var sqrt = Math.sqrt;

        // Chrome 77 bug
        // https://bugs.chromium.org/p/v8/issues/detail?id=9546
        var BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;

        // `Math.hypot` method
        // https://tc39.es/ecma262/#sec-math.hypot
        $(
          { target: "Math", stat: true, forced: BUGGY },
          {
            // eslint-disable-next-line no-unused-vars -- required for `.length`
            hypot: function hypot(value1, value2) {
              var sum = 0;
              var i = 0;
              var aLen = arguments.length;
              var larg = 0;
              var arg, div;
              while (i < aLen) {
                arg = abs(arguments[i++]);
                if (larg < arg) {
                  div = larg / arg;
                  sum = sum * div * div + 1;
                  larg = arg;
                } else if (arg > 0) {
                  div = arg / larg;
                  sum += div * div;
                } else sum += arg;
              }
              return larg === Infinity ? Infinity : larg * sqrt(sum);
            },
          }
        );

        /***/
      },
      /* 366 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);

        var nativeImul = Math.imul;

        var FORCED = fails(function () {
          return nativeImul(0xffffffff, 5) != -5 || nativeImul.length != 2;
        });

        // `Math.imul` method
        // https://tc39.es/ecma262/#sec-math.imul
        // some WebKit versions fails with big numbers, some has wrong arity
        $(
          { target: "Math", stat: true, forced: FORCED },
          {
            imul: function imul(x, y) {
              var UINT16 = 0xffff;
              var xn = +x;
              var yn = +y;
              var xl = UINT16 & xn;
              var yl = UINT16 & yn;
              return (
                0 |
                (xl * yl +
                  ((((UINT16 & (xn >>> 16)) * yl +
                    xl * (UINT16 & (yn >>> 16))) <<
                    16) >>>
                    0))
              );
            },
          }
        );

        /***/
      },
      /* 367 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var log = Math.log;
        var LOG10E = Math.LOG10E;

        // `Math.log10` method
        // https://tc39.es/ecma262/#sec-math.log10
        $(
          { target: "Math", stat: true },
          {
            log10: function log10(x) {
              return log(x) * LOG10E;
            },
          }
        );

        /***/
      },
      /* 368 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var log1p = __webpack_require__(220);

        // `Math.log1p` method
        // https://tc39.es/ecma262/#sec-math.log1p
        $({ target: "Math", stat: true }, { log1p: log1p });

        /***/
      },
      /* 369 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var log = Math.log;
        var LN2 = Math.LN2;

        // `Math.log2` method
        // https://tc39.es/ecma262/#sec-math.log2
        $(
          { target: "Math", stat: true },
          {
            log2: function log2(x) {
              return log(x) / LN2;
            },
          }
        );

        /***/
      },
      /* 370 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var sign = __webpack_require__(135);

        // `Math.sign` method
        // https://tc39.es/ecma262/#sec-math.sign
        $(
          { target: "Math", stat: true },
          {
            sign: sign,
          }
        );

        /***/
      },
      /* 371 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var expm1 = __webpack_require__(97);

        var abs = Math.abs;
        var exp = Math.exp;
        var E = Math.E;

        var FORCED = fails(function () {
          return Math.sinh(-2e-17) != -2e-17;
        });

        // `Math.sinh` method
        // https://tc39.es/ecma262/#sec-math.sinh
        // V8 near Chromium 38 has a problem with very small numbers
        $(
          { target: "Math", stat: true, forced: FORCED },
          {
            sinh: function sinh(x) {
              return abs((x = +x)) < 1
                ? (expm1(x) - expm1(-x)) / 2
                : (exp(x - 1) - exp(-x - 1)) * (E / 2);
            },
          }
        );

        /***/
      },
      /* 372 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var expm1 = __webpack_require__(97);

        var exp = Math.exp;

        // `Math.tanh` method
        // https://tc39.es/ecma262/#sec-math.tanh
        $(
          { target: "Math", stat: true },
          {
            tanh: function tanh(x) {
              var a = expm1((x = +x));
              var b = expm1(-x);
              return a == Infinity
                ? 1
                : b == Infinity
                ? -1
                : (a - b) / (exp(x) + exp(-x));
            },
          }
        );

        /***/
      },
      /* 373 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        var ceil = Math.ceil;
        var floor = Math.floor;

        // `Math.trunc` method
        // https://tc39.es/ecma262/#sec-math.trunc
        $(
          { target: "Math", stat: true },
          {
            trunc: function trunc(it) {
              return (it > 0 ? floor : ceil)(it);
            },
          }
        );

        /***/
      },
      /* 374 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Date.now` method
        // https://tc39.es/ecma262/#sec-date.now
        $(
          { target: "Date", stat: true },
          {
            now: function now() {
              return new Date().getTime();
            },
          }
        );

        /***/
      },
      /* 375 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var fails = __webpack_require__(2);
        var toObject = __webpack_require__(13);
        var toPrimitive = __webpack_require__(35);

        var FORCED = fails(function () {
          return (
            new Date(NaN).toJSON() !== null ||
            Date.prototype.toJSON.call({
              toISOString: function () {
                return 1;
              },
            }) !== 1
          );
        });

        // `Date.prototype.toJSON` method
        // https://tc39.es/ecma262/#sec-date.prototype.tojson
        $(
          { target: "Date", proto: true, forced: FORCED },
          {
            // eslint-disable-next-line no-unused-vars -- required for `.length`
            toJSON: function toJSON(key) {
              var O = toObject(this);
              var pv = toPrimitive(O);
              return typeof pv == "number" && !isFinite(pv)
                ? null
                : O.toISOString();
            },
          }
        );

        /***/
      },
      /* 376 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var fails = __webpack_require__(2);
        var padStart = __webpack_require__(128).start;

        var abs = Math.abs;
        var DatePrototype = Date.prototype;
        var getTime = DatePrototype.getTime;
        var nativeDateToISOString = DatePrototype.toISOString;

        // `Date.prototype.toISOString` method implementation
        // https://tc39.es/ecma262/#sec-date.prototype.toisostring
        // PhantomJS / old WebKit fails here:
        module.exports =
          fails(function () {
            return (
              nativeDateToISOString.call(new Date(-5e13 - 1)) !=
              "0385-07-25T07:06:39.999Z"
            );
          }) ||
          !fails(function () {
            nativeDateToISOString.call(new Date(NaN));
          })
            ? function toISOString() {
                if (!isFinite(getTime.call(this)))
                  throw RangeError("Invalid time value");
                var date = this;
                var year = date.getUTCFullYear();
                var milliseconds = date.getUTCMilliseconds();
                var sign = year < 0 ? "-" : year > 9999 ? "+" : "";
                return (
                  sign +
                  padStart(abs(year), sign ? 6 : 4, 0) +
                  "-" +
                  padStart(date.getUTCMonth() + 1, 2, 0) +
                  "-" +
                  padStart(date.getUTCDate(), 2, 0) +
                  "T" +
                  padStart(date.getUTCHours(), 2, 0) +
                  ":" +
                  padStart(date.getUTCMinutes(), 2, 0) +
                  ":" +
                  padStart(date.getUTCSeconds(), 2, 0) +
                  "." +
                  padStart(milliseconds, 3, 0) +
                  "Z"
                );
              }
            : nativeDateToISOString;

        /***/
      },
      /* 377 */
      /***/ function (module, exports, __webpack_require__) {
        var createNonEnumerableProperty = __webpack_require__(22);
        var dateToPrimitive = __webpack_require__(378);
        var wellKnownSymbol = __webpack_require__(8);

        var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
        var DatePrototype = Date.prototype;

        // `Date.prototype[@@toPrimitive]` method
        // https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
        if (!(TO_PRIMITIVE in DatePrototype)) {
          createNonEnumerableProperty(
            DatePrototype,
            TO_PRIMITIVE,
            dateToPrimitive
          );
        }

        /***/
      },
      /* 378 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var anObject = __webpack_require__(5);
        var toPrimitive = __webpack_require__(35);

        module.exports = function (hint) {
          if (hint !== "string" && hint !== "number" && hint !== "default") {
            throw TypeError("Incorrect hint");
          }
          return toPrimitive(anObject(this), hint !== "number");
        };

        /***/
      },
      /* 379 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var getBuiltIn = __webpack_require__(28);
        var fails = __webpack_require__(2);

        var $stringify = getBuiltIn("JSON", "stringify");
        var re = /[\uD800-\uDFFF]/g;
        var low = /^[\uD800-\uDBFF]$/;
        var hi = /^[\uDC00-\uDFFF]$/;

        var fix = function (match, offset, string) {
          var prev = string.charAt(offset - 1);
          var next = string.charAt(offset + 1);
          if (
            (low.test(match) && !hi.test(next)) ||
            (hi.test(match) && !low.test(prev))
          ) {
            return "\\u" + match.charCodeAt(0).toString(16);
          }
          return match;
        };

        var FORCED = fails(function () {
          return (
            $stringify("\uDF06\uD834") !== '"\\udf06\\ud834"' ||
            $stringify("\uDEAD") !== '"\\udead"'
          );
        });

        if ($stringify) {
          // `JSON.stringify` method
          // https://tc39.es/ecma262/#sec-json.stringify
          // https://github.com/tc39/proposal-well-formed-stringify
          $(
            { target: "JSON", stat: true, forced: FORCED },
            {
              // eslint-disable-next-line no-unused-vars -- required for `.length`
              stringify: function stringify(it, replacer, space) {
                var result = $stringify.apply(null, arguments);
                return typeof result == "string"
                  ? result.replace(re, fix)
                  : result;
              },
            }
          );
        }

        /***/
      },
      /* 380 */
      /***/ function (module, exports, __webpack_require__) {
        var userAgent = __webpack_require__(74);

        module.exports = /web0s(?!.*chrome)/i.test(userAgent);

        /***/
      },
      /* 381 */
      /***/ function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);

        module.exports = function (a, b) {
          var console = global.console;
          if (console && console.error) {
            arguments.length === 1 ? console.error(a) : console.error(a, b);
          }
        };

        /***/
      },
      /* 382 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var aFunction = __webpack_require__(25);
        var newPromiseCapabilityModule = __webpack_require__(98);
        var perform = __webpack_require__(139);
        var iterate = __webpack_require__(47);

        // `Promise.allSettled` method
        // https://tc39.es/ecma262/#sec-promise.allsettled
        $(
          { target: "Promise", stat: true },
          {
            allSettled: function allSettled(iterable) {
              var C = this;
              var capability = newPromiseCapabilityModule.f(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function () {
                var promiseResolve = aFunction(C.resolve);
                var values = [];
                var counter = 0;
                var remaining = 1;
                iterate(iterable, function (promise) {
                  var index = counter++;
                  var alreadyCalled = false;
                  values.push(undefined);
                  remaining++;
                  promiseResolve.call(C, promise).then(
                    function (value) {
                      if (alreadyCalled) return;
                      alreadyCalled = true;
                      values[index] = { status: "fulfilled", value: value };
                      --remaining || resolve(values);
                    },
                    function (error) {
                      if (alreadyCalled) return;
                      alreadyCalled = true;
                      values[index] = { status: "rejected", reason: error };
                      --remaining || resolve(values);
                    }
                  );
                });
                --remaining || resolve(values);
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
          }
        );

        /***/
      },
      /* 383 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var aFunction = __webpack_require__(25);
        var getBuiltIn = __webpack_require__(28);
        var newPromiseCapabilityModule = __webpack_require__(98);
        var perform = __webpack_require__(139);
        var iterate = __webpack_require__(47);

        var PROMISE_ANY_ERROR = "No one promise resolved";

        // `Promise.any` method
        // https://tc39.es/ecma262/#sec-promise.any
        $(
          { target: "Promise", stat: true },
          {
            any: function any(iterable) {
              var C = this;
              var capability = newPromiseCapabilityModule.f(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function () {
                var promiseResolve = aFunction(C.resolve);
                var errors = [];
                var counter = 0;
                var remaining = 1;
                var alreadyResolved = false;
                iterate(iterable, function (promise) {
                  var index = counter++;
                  var alreadyRejected = false;
                  errors.push(undefined);
                  remaining++;
                  promiseResolve.call(C, promise).then(
                    function (value) {
                      if (alreadyRejected || alreadyResolved) return;
                      alreadyResolved = true;
                      resolve(value);
                    },
                    function (error) {
                      if (alreadyRejected || alreadyResolved) return;
                      alreadyRejected = true;
                      errors[index] = error;
                      --remaining ||
                        reject(
                          new (getBuiltIn("AggregateError"))(
                            errors,
                            PROMISE_ANY_ERROR
                          )
                        );
                    }
                  );
                });
                --remaining ||
                  reject(
                    new (getBuiltIn("AggregateError"))(
                      errors,
                      PROMISE_ANY_ERROR
                    )
                  );
              });
              if (result.error) reject(result.value);
              return capability.promise;
            },
          }
        );

        /***/
      },
      /* 384 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var IS_PURE = __webpack_require__(31);
        var NativePromise = __webpack_require__(222);
        var fails = __webpack_require__(2);
        var getBuiltIn = __webpack_require__(28);
        var speciesConstructor = __webpack_require__(42);
        var promiseResolve = __webpack_require__(225);
        var redefine = __webpack_require__(23);

        // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
        var NON_GENERIC =
          !!NativePromise &&
          fails(function () {
            NativePromise.prototype["finally"].call(
              {
                then: function () {
                  /* empty */
                },
              },
              function () {
                /* empty */
              }
            );
          });

        // `Promise.prototype.finally` method
        // https://tc39.es/ecma262/#sec-promise.prototype.finally
        $(
          { target: "Promise", proto: true, real: true, forced: NON_GENERIC },
          {
            finally: function (onFinally) {
              var C = speciesConstructor(this, getBuiltIn("Promise"));
              var isFunction = typeof onFinally == "function";
              return this.then(
                isFunction
                  ? function (x) {
                      return promiseResolve(C, onFinally()).then(function () {
                        return x;
                      });
                    }
                  : onFinally,
                isFunction
                  ? function (e) {
                      return promiseResolve(C, onFinally()).then(function () {
                        throw e;
                      });
                    }
                  : onFinally
              );
            },
          }
        );

        // patch native Promise.prototype for native async functions
        if (
          !IS_PURE &&
          typeof NativePromise == "function" &&
          !NativePromise.prototype["finally"]
        ) {
          redefine(
            NativePromise.prototype,
            "finally",
            getBuiltIn("Promise").prototype["finally"]
          );
        }

        /***/
      },
      /* 385 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var collection = __webpack_require__(99);
        var collectionStrong = __webpack_require__(226);

        // `Map` constructor
        // https://tc39.es/ecma262/#sec-map-objects
        module.exports = collection(
          "Map",
          function (init) {
            return function Map() {
              return init(this, arguments.length ? arguments[0] : undefined);
            };
          },
          collectionStrong
        );

        /***/
      },
      /* 386 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var collection = __webpack_require__(99);
        var collectionStrong = __webpack_require__(226);

        // `Set` constructor
        // https://tc39.es/ecma262/#sec-set-objects
        module.exports = collection(
          "Set",
          function (init) {
            return function Set() {
              return init(this, arguments.length ? arguments[0] : undefined);
            };
          },
          collectionStrong
        );

        /***/
      },
      /* 387 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(3);
        var redefineAll = __webpack_require__(65);
        var InternalMetadataModule = __webpack_require__(55);
        var collection = __webpack_require__(99);
        var collectionWeak = __webpack_require__(227);
        var isObject = __webpack_require__(4);
        var enforceIternalState = __webpack_require__(24).enforce;
        var NATIVE_WEAK_MAP = __webpack_require__(170);

        var IS_IE11 = !global.ActiveXObject && "ActiveXObject" in global;
        var isExtensible = Object.isExtensible;
        var InternalWeakMap;

        var wrapper = function (init) {
          return function WeakMap() {
            return init(this, arguments.length ? arguments[0] : undefined);
          };
        };

        // `WeakMap` constructor
        // https://tc39.es/ecma262/#sec-weakmap-constructor
        var $WeakMap = (module.exports = collection(
          "WeakMap",
          wrapper,
          collectionWeak
        ));

        // IE11 WeakMap frozen keys fix
        // We can't use feature detection because it crash some old IE builds
        // https://github.com/zloirock/core-js/issues/485
        if (NATIVE_WEAK_MAP && IS_IE11) {
          InternalWeakMap = collectionWeak.getConstructor(
            wrapper,
            "WeakMap",
            true
          );
          InternalMetadataModule.REQUIRED = true;
          var WeakMapPrototype = $WeakMap.prototype;
          var nativeDelete = WeakMapPrototype["delete"];
          var nativeHas = WeakMapPrototype.has;
          var nativeGet = WeakMapPrototype.get;
          var nativeSet = WeakMapPrototype.set;
          redefineAll(WeakMapPrototype, {
            delete: function (key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return (
                  nativeDelete.call(this, key) || state.frozen["delete"](key)
                );
              }
              return nativeDelete.call(this, key);
            },
            has: function has(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key) || state.frozen.has(key);
              }
              return nativeHas.call(this, key);
            },
            get: function get(key) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                return nativeHas.call(this, key)
                  ? nativeGet.call(this, key)
                  : state.frozen.get(key);
              }
              return nativeGet.call(this, key);
            },
            set: function set(key, value) {
              if (isObject(key) && !isExtensible(key)) {
                var state = enforceIternalState(this);
                if (!state.frozen) state.frozen = new InternalWeakMap();
                nativeHas.call(this, key)
                  ? nativeSet.call(this, key, value)
                  : state.frozen.set(key, value);
              } else nativeSet.call(this, key, value);
              return this;
            },
          });
        }

        /***/
      },
      /* 388 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var collection = __webpack_require__(99);
        var collectionWeak = __webpack_require__(227);

        // `WeakSet` constructor
        // https://tc39.es/ecma262/#sec-weakset-constructor
        collection(
          "WeakSet",
          function (init) {
            return function WeakSet() {
              return init(this, arguments.length ? arguments[0] : undefined);
            };
          },
          collectionWeak
        );

        /***/
      },
      /* 389 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var arrayBufferModule = __webpack_require__(100);
        var setSpecies = __webpack_require__(61);

        var ARRAY_BUFFER = "ArrayBuffer";
        var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
        var NativeArrayBuffer = global[ARRAY_BUFFER];

        // `ArrayBuffer` constructor
        // https://tc39.es/ecma262/#sec-arraybuffer-constructor
        $(
          { global: true, forced: NativeArrayBuffer !== ArrayBuffer },
          {
            ArrayBuffer: ArrayBuffer,
          }
        );

        setSpecies(ARRAY_BUFFER);

        /***/
      },
      /* 390 */
      /***/ function (module, exports) {
        // IEEE754 conversions based on https://github.com/feross/ieee754
        var abs = Math.abs;
        var pow = Math.pow;
        var floor = Math.floor;
        var log = Math.log;
        var LN2 = Math.LN2;

        var pack = function (number, mantissaLength, bytes) {
          var buffer = new Array(bytes);
          var exponentLength = bytes * 8 - mantissaLength - 1;
          var eMax = (1 << exponentLength) - 1;
          var eBias = eMax >> 1;
          var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
          var sign = number < 0 || (number === 0 && 1 / number < 0) ? 1 : 0;
          var index = 0;
          var exponent, mantissa, c;
          number = abs(number);
          // eslint-disable-next-line no-self-compare -- NaN check
          if (number != number || number === Infinity) {
            // eslint-disable-next-line no-self-compare -- NaN check
            mantissa = number != number ? 1 : 0;
            exponent = eMax;
          } else {
            exponent = floor(log(number) / LN2);
            if (number * (c = pow(2, -exponent)) < 1) {
              exponent--;
              c *= 2;
            }
            if (exponent + eBias >= 1) {
              number += rt / c;
            } else {
              number += rt * pow(2, 1 - eBias);
            }
            if (number * c >= 2) {
              exponent++;
              c /= 2;
            }
            if (exponent + eBias >= eMax) {
              mantissa = 0;
              exponent = eMax;
            } else if (exponent + eBias >= 1) {
              mantissa = (number * c - 1) * pow(2, mantissaLength);
              exponent = exponent + eBias;
            } else {
              mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
              exponent = 0;
            }
          }
          for (
            ;
            mantissaLength >= 8;
            buffer[index++] = mantissa & 255,
              mantissa /= 256,
              mantissaLength -= 8
          );
          exponent = (exponent << mantissaLength) | mantissa;
          exponentLength += mantissaLength;
          for (
            ;
            exponentLength > 0;
            buffer[index++] = exponent & 255,
              exponent /= 256,
              exponentLength -= 8
          );
          buffer[--index] |= sign * 128;
          return buffer;
        };

        var unpack = function (buffer, mantissaLength) {
          var bytes = buffer.length;
          var exponentLength = bytes * 8 - mantissaLength - 1;
          var eMax = (1 << exponentLength) - 1;
          var eBias = eMax >> 1;
          var nBits = exponentLength - 7;
          var index = bytes - 1;
          var sign = buffer[index--];
          var exponent = sign & 127;
          var mantissa;
          sign >>= 7;
          for (
            ;
            nBits > 0;
            exponent = exponent * 256 + buffer[index], index--, nBits -= 8
          );
          mantissa = exponent & ((1 << -nBits) - 1);
          exponent >>= -nBits;
          nBits += mantissaLength;
          for (
            ;
            nBits > 0;
            mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8
          );
          if (exponent === 0) {
            exponent = 1 - eBias;
          } else if (exponent === eMax) {
            return mantissa ? NaN : sign ? -Infinity : Infinity;
          } else {
            mantissa = mantissa + pow(2, mantissaLength);
            exponent = exponent - eBias;
          }
          return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
        };

        module.exports = {
          pack: pack,
          unpack: unpack,
        };

        /***/
      },
      /* 391 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var ArrayBufferViewCore = __webpack_require__(9);

        var NATIVE_ARRAY_BUFFER_VIEWS =
          ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;

        // `ArrayBuffer.isView` method
        // https://tc39.es/ecma262/#sec-arraybuffer.isview
        $(
          {
            target: "ArrayBuffer",
            stat: true,
            forced: !NATIVE_ARRAY_BUFFER_VIEWS,
          },
          {
            isView: ArrayBufferViewCore.isView,
          }
        );

        /***/
      },
      /* 392 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var ArrayBufferModule = __webpack_require__(100);
        var NATIVE_ARRAY_BUFFER = __webpack_require__(140);

        // `DataView` constructor
        // https://tc39.es/ecma262/#sec-dataview-constructor
        $(
          { global: true, forced: !NATIVE_ARRAY_BUFFER },
          {
            DataView: ArrayBufferModule.DataView,
          }
        );

        /***/
      },
      /* 393 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Int8Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Int8", function (init) {
          return function Int8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 394 */
      /***/ function (module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(32);

        module.exports = function (it) {
          var result = toInteger(it);
          if (result < 0) throw RangeError("The argument can't be less than 0");
          return result;
        };

        /***/
      },
      /* 395 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Uint8ClampedArray` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor(
          "Uint8",
          function (init) {
            return function Uint8ClampedArray(data, byteOffset, length) {
              return init(this, data, byteOffset, length);
            };
          },
          true
        );

        /***/
      },
      /* 396 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Int16Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Int16", function (init) {
          return function Int16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 397 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Uint16Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Uint16", function (init) {
          return function Uint16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 398 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Int32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Int32", function (init) {
          return function Int32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 399 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Uint32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Uint32", function (init) {
          return function Uint32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 400 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Float32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Float32", function (init) {
          return function Float32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 401 */
      /***/ function (module, exports, __webpack_require__) {
        var createTypedArrayConstructor = __webpack_require__(43);

        // `Float64Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor("Float64", function (init) {
          return function Float64Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        /***/
      },
      /* 402 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var ArrayBufferViewCore = __webpack_require__(9);
        var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(
          142
        );

        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var exportTypedArrayStaticMethod =
          ArrayBufferViewCore.exportTypedArrayStaticMethod;

        // `%TypedArray%.of` method
        // https://tc39.es/ecma262/#sec-%typedarray%.of
        exportTypedArrayStaticMethod(
          "of",
          function of(/* ...items */) {
            var index = 0;
            var length = arguments.length;
            var result = new (aTypedArrayConstructor(this))(length);
            while (length > index) result[index] = arguments[index++];
            return result;
          },
          TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS
        );

        /***/
      },
      /* 403 */
      /***/ function (module, exports, __webpack_require__) {
        var aTypedArrayConstructor = __webpack_require__(9)
          .aTypedArrayConstructor;
        var speciesConstructor = __webpack_require__(42);

        module.exports = function (instance, list) {
          var C = speciesConstructor(instance, instance.constructor);
          var index = 0;
          var length = list.length;
          var result = new (aTypedArrayConstructor(C))(length);
          while (length > index) result[index] = list[index++];
          return result;
        };

        /***/
      },
      /* 404 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var getBuiltIn = __webpack_require__(28);
        var aFunction = __webpack_require__(25);
        var anObject = __webpack_require__(5);
        var fails = __webpack_require__(2);

        var nativeApply = getBuiltIn("Reflect", "apply");
        var functionApply = Function.apply;

        // MS Edge argumentsList argument is optional
        var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
          nativeApply(function () {
            /* empty */
          });
        });

        // `Reflect.apply` method
        // https://tc39.es/ecma262/#sec-reflect.apply
        $(
          { target: "Reflect", stat: true, forced: OPTIONAL_ARGUMENTS_LIST },
          {
            apply: function apply(target, thisArgument, argumentsList) {
              aFunction(target);
              anObject(argumentsList);
              return nativeApply
                ? nativeApply(target, thisArgument, argumentsList)
                : functionApply.call(target, thisArgument, argumentsList);
            },
          }
        );

        /***/
      },
      /* 405 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var getBuiltIn = __webpack_require__(28);
        var aFunction = __webpack_require__(25);
        var anObject = __webpack_require__(5);
        var isObject = __webpack_require__(4);
        var create = __webpack_require__(37);
        var bind = __webpack_require__(205);
        var fails = __webpack_require__(2);

        var nativeConstruct = getBuiltIn("Reflect", "construct");

        // `Reflect.construct` method
        // https://tc39.es/ecma262/#sec-reflect.construct
        // MS Edge supports only 2 arguments and argumentsList argument is optional
        // FF Nightly sets third argument as `new.target`, but does not create `this` from it
        var NEW_TARGET_BUG = fails(function () {
          function F() {
            /* empty */
          }
          return !(
            nativeConstruct(
              function () {
                /* empty */
              },
              [],
              F
            ) instanceof F
          );
        });
        var ARGS_BUG = !fails(function () {
          nativeConstruct(function () {
            /* empty */
          });
        });
        var FORCED = NEW_TARGET_BUG || ARGS_BUG;

        $(
          { target: "Reflect", stat: true, forced: FORCED, sham: FORCED },
          {
            construct: function construct(Target, args /* , newTarget */) {
              aFunction(Target);
              anObject(args);
              var newTarget =
                arguments.length < 3 ? Target : aFunction(arguments[2]);
              if (ARGS_BUG && !NEW_TARGET_BUG)
                return nativeConstruct(Target, args, newTarget);
              if (Target == newTarget) {
                // w/o altered newTarget, optimization for 0-4 arguments
                switch (args.length) {
                  case 0:
                    return new Target();
                  case 1:
                    return new Target(args[0]);
                  case 2:
                    return new Target(args[0], args[1]);
                  case 3:
                    return new Target(args[0], args[1], args[2]);
                  case 4:
                    return new Target(args[0], args[1], args[2], args[3]);
                }
                // w/o altered newTarget, lot of arguments case
                var $args = [null];
                $args.push.apply($args, args);
                return new (bind.apply(Target, $args))();
              }
              // with altered newTarget, not support built-in constructors
              var proto = newTarget.prototype;
              var instance = create(isObject(proto) ? proto : Object.prototype);
              var result = Function.apply.call(Target, instance, args);
              return isObject(result) ? result : instance;
            },
          }
        );

        /***/
      },
      /* 406 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var anObject = __webpack_require__(5);
        var toPrimitive = __webpack_require__(35);
        var definePropertyModule = __webpack_require__(12);
        var fails = __webpack_require__(2);

        // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
        var ERROR_INSTEAD_OF_FALSE = fails(function () {
          /* global Reflect -- required for testing */
          Reflect.defineProperty(
            definePropertyModule.f({}, 1, { value: 1 }),
            1,
            { value: 2 }
          );
        });

        // `Reflect.defineProperty` method
        // https://tc39.es/ecma262/#sec-reflect.defineproperty
        $(
          {
            target: "Reflect",
            stat: true,
            forced: ERROR_INSTEAD_OF_FALSE,
            sham: !DESCRIPTORS,
          },
          {
            defineProperty: function defineProperty(
              target,
              propertyKey,
              attributes
            ) {
              anObject(target);
              var key = toPrimitive(propertyKey, true);
              anObject(attributes);
              try {
                definePropertyModule.f(target, key, attributes);
                return true;
              } catch (error) {
                return false;
              }
            },
          }
        );

        /***/
      },
      /* 407 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var anObject = __webpack_require__(5);
        var getOwnPropertyDescriptor = __webpack_require__(20).f;

        // `Reflect.deleteProperty` method
        // https://tc39.es/ecma262/#sec-reflect.deleteproperty
        $(
          { target: "Reflect", stat: true },
          {
            deleteProperty: function deleteProperty(target, propertyKey) {
              var descriptor = getOwnPropertyDescriptor(
                anObject(target),
                propertyKey
              );
              return descriptor && !descriptor.configurable
                ? false
                : delete target[propertyKey];
            },
          }
        );

        /***/
      },
      /* 408 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var isObject = __webpack_require__(4);
        var anObject = __webpack_require__(5);
        var has = __webpack_require__(14);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var getPrototypeOf = __webpack_require__(33);

        // `Reflect.get` method
        // https://tc39.es/ecma262/#sec-reflect.get
        function get(target, propertyKey /* , receiver */) {
          var receiver = arguments.length < 3 ? target : arguments[2];
          var descriptor, prototype;
          if (anObject(target) === receiver) return target[propertyKey];
          if (
            (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey))
          )
            return has(descriptor, "value")
              ? descriptor.value
              : descriptor.get === undefined
              ? undefined
              : descriptor.get.call(receiver);
          if (isObject((prototype = getPrototypeOf(target))))
            return get(prototype, propertyKey, receiver);
        }

        $(
          { target: "Reflect", stat: true },
          {
            get: get,
          }
        );

        /***/
      },
      /* 409 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var DESCRIPTORS = __webpack_require__(7);
        var anObject = __webpack_require__(5);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);

        // `Reflect.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor
        $(
          { target: "Reflect", stat: true, sham: !DESCRIPTORS },
          {
            getOwnPropertyDescriptor: function getOwnPropertyDescriptor(
              target,
              propertyKey
            ) {
              return getOwnPropertyDescriptorModule.f(
                anObject(target),
                propertyKey
              );
            },
          }
        );

        /***/
      },
      /* 410 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var anObject = __webpack_require__(5);
        var objectGetPrototypeOf = __webpack_require__(33);
        var CORRECT_PROTOTYPE_GETTER = __webpack_require__(117);

        // `Reflect.getPrototypeOf` method
        // https://tc39.es/ecma262/#sec-reflect.getprototypeof
        $(
          { target: "Reflect", stat: true, sham: !CORRECT_PROTOTYPE_GETTER },
          {
            getPrototypeOf: function getPrototypeOf(target) {
              return objectGetPrototypeOf(anObject(target));
            },
          }
        );

        /***/
      },
      /* 411 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);

        // `Reflect.has` method
        // https://tc39.es/ecma262/#sec-reflect.has
        $(
          { target: "Reflect", stat: true },
          {
            has: function has(target, propertyKey) {
              return propertyKey in target;
            },
          }
        );

        /***/
      },
      /* 412 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var anObject = __webpack_require__(5);

        var objectIsExtensible = Object.isExtensible;

        // `Reflect.isExtensible` method
        // https://tc39.es/ecma262/#sec-reflect.isextensible
        $(
          { target: "Reflect", stat: true },
          {
            isExtensible: function isExtensible(target) {
              anObject(target);
              return objectIsExtensible ? objectIsExtensible(target) : true;
            },
          }
        );

        /***/
      },
      /* 413 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var ownKeys = __webpack_require__(109);

        // `Reflect.ownKeys` method
        // https://tc39.es/ecma262/#sec-reflect.ownkeys
        $(
          { target: "Reflect", stat: true },
          {
            ownKeys: ownKeys,
          }
        );

        /***/
      },
      /* 414 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var getBuiltIn = __webpack_require__(28);
        var anObject = __webpack_require__(5);
        var FREEZING = __webpack_require__(80);

        // `Reflect.preventExtensions` method
        // https://tc39.es/ecma262/#sec-reflect.preventextensions
        $(
          { target: "Reflect", stat: true, sham: !FREEZING },
          {
            preventExtensions: function preventExtensions(target) {
              anObject(target);
              try {
                var objectPreventExtensions = getBuiltIn(
                  "Object",
                  "preventExtensions"
                );
                if (objectPreventExtensions) objectPreventExtensions(target);
                return true;
              } catch (error) {
                return false;
              }
            },
          }
        );

        /***/
      },
      /* 415 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var anObject = __webpack_require__(5);
        var isObject = __webpack_require__(4);
        var has = __webpack_require__(14);
        var fails = __webpack_require__(2);
        var definePropertyModule = __webpack_require__(12);
        var getOwnPropertyDescriptorModule = __webpack_require__(20);
        var getPrototypeOf = __webpack_require__(33);
        var createPropertyDescriptor = __webpack_require__(39);

        // `Reflect.set` method
        // https://tc39.es/ecma262/#sec-reflect.set
        function set(target, propertyKey, V /* , receiver */) {
          var receiver = arguments.length < 4 ? target : arguments[3];
          var ownDescriptor = getOwnPropertyDescriptorModule.f(
            anObject(target),
            propertyKey
          );
          var existingDescriptor, prototype;
          if (!ownDescriptor) {
            if (isObject((prototype = getPrototypeOf(target)))) {
              return set(prototype, propertyKey, V, receiver);
            }
            ownDescriptor = createPropertyDescriptor(0);
          }
          if (has(ownDescriptor, "value")) {
            if (ownDescriptor.writable === false || !isObject(receiver))
              return false;
            if (
              (existingDescriptor = getOwnPropertyDescriptorModule.f(
                receiver,
                propertyKey
              ))
            ) {
              if (
                existingDescriptor.get ||
                existingDescriptor.set ||
                existingDescriptor.writable === false
              )
                return false;
              existingDescriptor.value = V;
              definePropertyModule.f(receiver, propertyKey, existingDescriptor);
            } else
              definePropertyModule.f(
                receiver,
                propertyKey,
                createPropertyDescriptor(0, V)
              );
            return true;
          }
          return ownDescriptor.set === undefined
            ? false
            : (ownDescriptor.set.call(receiver, V), true);
        }

        // MS Edge 17-18 Reflect.set allows setting the property to object
        // with non-writable property on the prototype
        var MS_EDGE_BUG = fails(function () {
          var Constructor = function () {
            /* empty */
          };
          var object = definePropertyModule.f(new Constructor(), "a", {
            configurable: true,
          });
          /* global Reflect -- required for testing */
          return Reflect.set(Constructor.prototype, "a", 1, object) !== false;
        });

        $(
          { target: "Reflect", stat: true, forced: MS_EDGE_BUG },
          {
            set: set,
          }
        );

        /***/
      },
      /* 416 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var anObject = __webpack_require__(5);
        var aPossiblePrototype = __webpack_require__(196);
        var objectSetPrototypeOf = __webpack_require__(46);

        // `Reflect.setPrototypeOf` method
        // https://tc39.es/ecma262/#sec-reflect.setprototypeof
        if (objectSetPrototypeOf)
          $(
            { target: "Reflect", stat: true },
            {
              setPrototypeOf: function setPrototypeOf(target, proto) {
                anObject(target);
                aPossiblePrototype(proto);
                try {
                  objectSetPrototypeOf(target, proto);
                  return true;
                } catch (error) {
                  return false;
                }
              },
            }
          );

        /***/
      },
      /* 417 */
      /***/ function (module, exports, __webpack_require__) {
        __webpack_require__(101);
        __webpack_require__(233);
        __webpack_require__(418);
        __webpack_require__(419);
        __webpack_require__(102);
        __webpack_require__(234);
        __webpack_require__(422);
        __webpack_require__(236);
        var path = __webpack_require__(51);

        module.exports = path;

        /***/
      },
      /* 418 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var task = __webpack_require__(138);

        var FORCED = !global.setImmediate || !global.clearImmediate;

        // http://w3c.github.io/setImmediate/
        $(
          { global: true, bind: true, enumerable: true, forced: FORCED },
          {
            // `setImmediate` method
            // http://w3c.github.io/setImmediate/#si-setImmediate
            setImmediate: task.set,
            // `clearImmediate` method
            // http://w3c.github.io/setImmediate/#si-clearImmediate
            clearImmediate: task.clear,
          }
        );

        /***/
      },
      /* 419 */
      /***/ function (module, exports, __webpack_require__) {
        var $ = __webpack_require__(1);
        var global = __webpack_require__(3);
        var microtask = __webpack_require__(224);
        var IS_NODE = __webpack_require__(60);

        var process = global.process;

        // `queueMicrotask` method
        // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
        $(
          { global: true, enumerable: true, noTargetGet: true },
          {
            queueMicrotask: function queueMicrotask(fn) {
              var domain = IS_NODE && process.domain;
              microtask(domain ? domain.bind(fn) : fn);
            },
          }
        );

        /***/
      },
      /* 420 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        // based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
        var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
        var base = 36;
        var tMin = 1;
        var tMax = 26;
        var skew = 38;
        var damp = 700;
        var initialBias = 72;
        var initialN = 128; // 0x80
        var delimiter = "-"; // '\x2D'
        var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
        var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
        var OVERFLOW_ERROR = "Overflow: input needs wider integers to process";
        var baseMinusTMin = base - tMin;
        var floor = Math.floor;
        var stringFromCharCode = String.fromCharCode;

        /**
         * Creates an array containing the numeric code points of each Unicode
         * character in the string. While JavaScript uses UCS-2 internally,
         * this function will convert a pair of surrogate halves (each of which
         * UCS-2 exposes as separate characters) into a single code point,
         * matching UTF-16.
         */
        var ucs2decode = function (string) {
          var output = [];
          var counter = 0;
          var length = string.length;
          while (counter < length) {
            var value = string.charCodeAt(counter++);
            if (value >= 0xd800 && value <= 0xdbff && counter < length) {
              // It's a high surrogate, and there is a next character.
              var extra = string.charCodeAt(counter++);
              if ((extra & 0xfc00) == 0xdc00) {
                // Low surrogate.
                output.push(
                  ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000
                );
              } else {
                // It's an unmatched surrogate; only append this code unit, in case the
                // next code unit is the high surrogate of a surrogate pair.
                output.push(value);
                counter--;
              }
            } else {
              output.push(value);
            }
          }
          return output;
        };

        /**
         * Converts a digit/integer into a basic code point.
         */
        var digitToBasic = function (digit) {
          //  0..25 map to ASCII a..z or A..Z
          // 26..35 map to ASCII 0..9
          return digit + 22 + 75 * (digit < 26);
        };

        /**
         * Bias adaptation function as per section 3.4 of RFC 3492.
         * https://tools.ietf.org/html/rfc3492#section-3.4
         */
        var adapt = function (delta, numPoints, firstTime) {
          var k = 0;
          delta = firstTime ? floor(delta / damp) : delta >> 1;
          delta += floor(delta / numPoints);
          for (; delta > (baseMinusTMin * tMax) >> 1; k += base) {
            delta = floor(delta / baseMinusTMin);
          }
          return floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));
        };

        /**
         * Converts a string of Unicode symbols (e.g. a domain name label) to a
         * Punycode string of ASCII-only symbols.
         */
        // eslint-disable-next-line max-statements -- TODO
        var encode = function (input) {
          var output = [];

          // Convert the input in UCS-2 to an array of Unicode code points.
          input = ucs2decode(input);

          // Cache the length.
          var inputLength = input.length;

          // Initialize the state.
          var n = initialN;
          var delta = 0;
          var bias = initialBias;
          var i, currentValue;

          // Handle the basic code points.
          for (i = 0; i < input.length; i++) {
            currentValue = input[i];
            if (currentValue < 0x80) {
              output.push(stringFromCharCode(currentValue));
            }
          }

          var basicLength = output.length; // number of basic code points.
          var handledCPCount = basicLength; // number of code points that have been handled;

          // Finish the basic string with a delimiter unless it's empty.
          if (basicLength) {
            output.push(delimiter);
          }

          // Main encoding loop:
          while (handledCPCount < inputLength) {
            // All non-basic code points < n have been handled already. Find the next larger one:
            var m = maxInt;
            for (i = 0; i < input.length; i++) {
              currentValue = input[i];
              if (currentValue >= n && currentValue < m) {
                m = currentValue;
              }
            }

            // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
            var handledCPCountPlusOne = handledCPCount + 1;
            if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
              throw RangeError(OVERFLOW_ERROR);
            }

            delta += (m - n) * handledCPCountPlusOne;
            n = m;

            for (i = 0; i < input.length; i++) {
              currentValue = input[i];
              if (currentValue < n && ++delta > maxInt) {
                throw RangeError(OVERFLOW_ERROR);
              }
              if (currentValue == n) {
                // Represent delta as a generalized variable-length integer.
                var q = delta;
                for (var k = base /* no condition */; ; k += base) {
                  var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                  if (q < t) break;
                  var qMinusT = q - t;
                  var baseMinusT = base - t;
                  output.push(
                    stringFromCharCode(digitToBasic(t + (qMinusT % baseMinusT)))
                  );
                  q = floor(qMinusT / baseMinusT);
                }

                output.push(stringFromCharCode(digitToBasic(q)));
                bias = adapt(
                  delta,
                  handledCPCountPlusOne,
                  handledCPCount == basicLength
                );
                delta = 0;
                ++handledCPCount;
              }
            }

            ++delta;
            ++n;
          }
          return output.join("");
        };

        module.exports = function (input) {
          var encoded = [];
          var labels = input
            .toLowerCase()
            .replace(regexSeparators, "\u002E")
            .split(".");
          var i, label;
          for (i = 0; i < labels.length; i++) {
            label = labels[i];
            encoded.push(
              regexNonASCII.test(label) ? "xn--" + encode(label) : label
            );
          }
          return encoded.join(".");
        };

        /***/
      },
      /* 421 */
      /***/ function (module, exports, __webpack_require__) {
        var anObject = __webpack_require__(5);
        var getIteratorMethod = __webpack_require__(79);

        module.exports = function (it) {
          var iteratorMethod = getIteratorMethod(it);
          if (typeof iteratorMethod != "function") {
            throw TypeError(String(it) + " is not iterable");
          }
          return anObject(iteratorMethod.call(it));
        };

        /***/
      },
      /* 422 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        var $ = __webpack_require__(1);

        // `URL.prototype.toJSON` method
        // https://url.spec.whatwg.org/#dom-url-tojson
        $(
          { target: "URL", proto: true, enumerable: true },
          {
            toJSON: function toJSON() {
              return URL.prototype.toString.call(this);
            },
          }
        );

        /***/
      },
      /* 423 */
      /***/ function (module, exports) {
        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr;
        }

        module.exports = _arrayWithHoles;

        /***/
      },
      /* 424 */
      /***/ function (module, exports) {
        function _iterableToArrayLimit(arr, i) {
          if (
            typeof Symbol === "undefined" ||
            !(Symbol.iterator in Object(arr))
          )
            return;
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"] != null) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        module.exports = _iterableToArrayLimit;

        /***/
      },
      /* 425 */
      /***/ function (module, exports, __webpack_require__) {
        var arrayLikeToArray = __webpack_require__(426);

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === "string") return arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === "Object" && o.constructor) n = o.constructor.name;
          if (n === "Map" || n === "Set") return Array.from(o);
          if (
            n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return arrayLikeToArray(o, minLen);
        }

        module.exports = _unsupportedIterableToArray;

        /***/
      },
      /* 426 */
      /***/ function (module, exports) {
        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;

          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        }

        module.exports = _arrayLikeToArray;

        /***/
      },
      /* 427 */
      /***/ function (module, exports) {
        function _nonIterableRest() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }

        module.exports = _nonIterableRest;

        /***/
      },
      /* 428 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.14.0
         * react.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var l = __webpack_require__(103),
          n = "function" === typeof Symbol && Symbol.for,
          p = n ? Symbol.for("react.element") : 60103,
          q = n ? Symbol.for("react.portal") : 60106,
          r = n ? Symbol.for("react.fragment") : 60107,
          t = n ? Symbol.for("react.strict_mode") : 60108,
          u = n ? Symbol.for("react.profiler") : 60114,
          v = n ? Symbol.for("react.provider") : 60109,
          w = n ? Symbol.for("react.context") : 60110,
          x = n ? Symbol.for("react.forward_ref") : 60112,
          y = n ? Symbol.for("react.suspense") : 60113,
          z = n ? Symbol.for("react.memo") : 60115,
          A = n ? Symbol.for("react.lazy") : 60116,
          B = "function" === typeof Symbol && Symbol.iterator;
        function C(a) {
          for (
            var b =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + a,
              c = 1;
            c < arguments.length;
            c++
          )
            b += "&args[]=" + encodeURIComponent(arguments[c]);
          return (
            "Minified React error #" +
            a +
            "; visit " +
            b +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        var D = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          E = {};
        function F(a, b, c) {
          this.props = a;
          this.context = b;
          this.refs = E;
          this.updater = c || D;
        }
        F.prototype.isReactComponent = {};
        F.prototype.setState = function (a, b) {
          if ("object" !== typeof a && "function" !== typeof a && null != a)
            throw Error(C(85));
          this.updater.enqueueSetState(this, a, b, "setState");
        };
        F.prototype.forceUpdate = function (a) {
          this.updater.enqueueForceUpdate(this, a, "forceUpdate");
        };
        function G() {}
        G.prototype = F.prototype;
        function H(a, b, c) {
          this.props = a;
          this.context = b;
          this.refs = E;
          this.updater = c || D;
        }
        var I = (H.prototype = new G());
        I.constructor = H;
        l(I, F.prototype);
        I.isPureReactComponent = !0;
        var J = { current: null },
          K = Object.prototype.hasOwnProperty,
          L = { key: !0, ref: !0, __self: !0, __source: !0 };
        function M(a, b, c) {
          var e,
            d = {},
            g = null,
            k = null;
          if (null != b)
            for (e in (void 0 !== b.ref && (k = b.ref),
            void 0 !== b.key && (g = "" + b.key),
            b))
              K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
          var f = arguments.length - 2;
          if (1 === f) d.children = c;
          else if (1 < f) {
            for (var h = Array(f), m = 0; m < f; m++) h[m] = arguments[m + 2];
            d.children = h;
          }
          if (a && a.defaultProps)
            for (e in ((f = a.defaultProps), f))
              void 0 === d[e] && (d[e] = f[e]);
          return {
            $$typeof: p,
            type: a,
            key: g,
            ref: k,
            props: d,
            _owner: J.current,
          };
        }
        function N(a, b) {
          return {
            $$typeof: p,
            type: a.type,
            key: b,
            ref: a.ref,
            props: a.props,
            _owner: a._owner,
          };
        }
        function O(a) {
          return "object" === typeof a && null !== a && a.$$typeof === p;
        }
        function escape(a) {
          var b = { "=": "=0", ":": "=2" };
          return (
            "$" +
            ("" + a).replace(/[=:]/g, function (a) {
              return b[a];
            })
          );
        }
        var P = /\/+/g,
          Q = [];
        function R(a, b, c, e) {
          if (Q.length) {
            var d = Q.pop();
            d.result = a;
            d.keyPrefix = b;
            d.func = c;
            d.context = e;
            d.count = 0;
            return d;
          }
          return { result: a, keyPrefix: b, func: c, context: e, count: 0 };
        }
        function S(a) {
          a.result = null;
          a.keyPrefix = null;
          a.func = null;
          a.context = null;
          a.count = 0;
          10 > Q.length && Q.push(a);
        }
        function T(a, b, c, e) {
          var d = typeof a;
          if ("undefined" === d || "boolean" === d) a = null;
          var g = !1;
          if (null === a) g = !0;
          else
            switch (d) {
              case "string":
              case "number":
                g = !0;
                break;
              case "object":
                switch (a.$$typeof) {
                  case p:
                  case q:
                    g = !0;
                }
            }
          if (g) return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
          g = 0;
          b = "" === b ? "." : b + ":";
          if (Array.isArray(a))
            for (var k = 0; k < a.length; k++) {
              d = a[k];
              var f = b + U(d, k);
              g += T(d, f, c, e);
            }
          else if (
            (null === a || "object" !== typeof a
              ? (f = null)
              : ((f = (B && a[B]) || a["@@iterator"]),
                (f = "function" === typeof f ? f : null)),
            "function" === typeof f)
          )
            for (a = f.call(a), k = 0; !(d = a.next()).done; )
              (d = d.value), (f = b + U(d, k++)), (g += T(d, f, c, e));
          else if ("object" === d)
            throw (
              ((c = "" + a),
              Error(
                C(
                  31,
                  "[object Object]" === c
                    ? "object with keys {" + Object.keys(a).join(", ") + "}"
                    : c,
                  ""
                )
              ))
            );
          return g;
        }
        function V(a, b, c) {
          return null == a ? 0 : T(a, "", b, c);
        }
        function U(a, b) {
          return "object" === typeof a && null !== a && null != a.key
            ? escape(a.key)
            : b.toString(36);
        }
        function W(a, b) {
          a.func.call(a.context, b, a.count++);
        }
        function aa(a, b, c) {
          var e = a.result,
            d = a.keyPrefix;
          a = a.func.call(a.context, b, a.count++);
          Array.isArray(a)
            ? X(a, e, c, function (a) {
                return a;
              })
            : null != a &&
              (O(a) &&
                (a = N(
                  a,
                  d +
                    (!a.key || (b && b.key === a.key)
                      ? ""
                      : ("" + a.key).replace(P, "$&/") + "/") +
                    c
                )),
              e.push(a));
        }
        function X(a, b, c, e, d) {
          var g = "";
          null != c && (g = ("" + c).replace(P, "$&/") + "/");
          b = R(b, g, e, d);
          V(a, aa, b);
          S(b);
        }
        var Y = { current: null };
        function Z() {
          var a = Y.current;
          if (null === a) throw Error(C(321));
          return a;
        }
        var ba = {
          ReactCurrentDispatcher: Y,
          ReactCurrentBatchConfig: { suspense: null },
          ReactCurrentOwner: J,
          IsSomeRendererActing: { current: !1 },
          assign: l,
        };
        exports.Children = {
          map: function (a, b, c) {
            if (null == a) return a;
            var e = [];
            X(a, e, null, b, c);
            return e;
          },
          forEach: function (a, b, c) {
            if (null == a) return a;
            b = R(null, null, b, c);
            V(a, W, b);
            S(b);
          },
          count: function (a) {
            return V(
              a,
              function () {
                return null;
              },
              null
            );
          },
          toArray: function (a) {
            var b = [];
            X(a, b, null, function (a) {
              return a;
            });
            return b;
          },
          only: function (a) {
            if (!O(a)) throw Error(C(143));
            return a;
          },
        };
        exports.Component = F;
        exports.Fragment = r;
        exports.Profiler = u;
        exports.PureComponent = H;
        exports.StrictMode = t;
        exports.Suspense = y;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;
        exports.cloneElement = function (a, b, c) {
          if (null === a || void 0 === a) throw Error(C(267, a));
          var e = l({}, a.props),
            d = a.key,
            g = a.ref,
            k = a._owner;
          if (null != b) {
            void 0 !== b.ref && ((g = b.ref), (k = J.current));
            void 0 !== b.key && (d = "" + b.key);
            if (a.type && a.type.defaultProps) var f = a.type.defaultProps;
            for (h in b)
              K.call(b, h) &&
                !L.hasOwnProperty(h) &&
                (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
          }
          var h = arguments.length - 2;
          if (1 === h) e.children = c;
          else if (1 < h) {
            f = Array(h);
            for (var m = 0; m < h; m++) f[m] = arguments[m + 2];
            e.children = f;
          }
          return {
            $$typeof: p,
            type: a.type,
            key: d,
            ref: g,
            props: e,
            _owner: k,
          };
        };
        exports.createContext = function (a, b) {
          void 0 === b && (b = null);
          a = {
            $$typeof: w,
            _calculateChangedBits: b,
            _currentValue: a,
            _currentValue2: a,
            _threadCount: 0,
            Provider: null,
            Consumer: null,
          };
          a.Provider = { $$typeof: v, _context: a };
          return (a.Consumer = a);
        };
        exports.createElement = M;
        exports.createFactory = function (a) {
          var b = M.bind(null, a);
          b.type = a;
          return b;
        };
        exports.createRef = function () {
          return { current: null };
        };
        exports.forwardRef = function (a) {
          return { $$typeof: x, render: a };
        };
        exports.isValidElement = O;
        exports.lazy = function (a) {
          return { $$typeof: A, _ctor: a, _status: -1, _result: null };
        };
        exports.memo = function (a, b) {
          return { $$typeof: z, type: a, compare: void 0 === b ? null : b };
        };
        exports.useCallback = function (a, b) {
          return Z().useCallback(a, b);
        };
        exports.useContext = function (a, b) {
          return Z().useContext(a, b);
        };
        exports.useDebugValue = function () {};
        exports.useEffect = function (a, b) {
          return Z().useEffect(a, b);
        };
        exports.useImperativeHandle = function (a, b, c) {
          return Z().useImperativeHandle(a, b, c);
        };
        exports.useLayoutEffect = function (a, b) {
          return Z().useLayoutEffect(a, b);
        };
        exports.useMemo = function (a, b) {
          return Z().useMemo(a, b);
        };
        exports.useReducer = function (a, b, c) {
          return Z().useReducer(a, b, c);
        };
        exports.useRef = function (a) {
          return Z().useRef(a);
        };
        exports.useState = function (a) {
          return Z().useState(a);
        };
        exports.version = "16.14.0";

        /***/
      },
      /* 429 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret = __webpack_require__(430);

        function emptyFunction() {}
        function emptyFunctionWithReset() {}
        emptyFunctionWithReset.resetWarningCache = emptyFunction;

        module.exports = function () {
          function shim(
            props,
            propName,
            componentName,
            location,
            propFullName,
            secret
          ) {
            if (secret === ReactPropTypesSecret) {
              // It is still safe when called from React.
              return;
            }
            var err = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. " +
                "Use PropTypes.checkPropTypes() to call them. " +
                "Read more at http://fb.me/use-check-prop-types"
            );
            err.name = "Invariant Violation";
            throw err;
          }
          shim.isRequired = shim;
          function getShim() {
            return shim;
          }
          // Important!
          // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
          var ReactPropTypes = {
            array: shim,
            bool: shim,
            func: shim,
            number: shim,
            object: shim,
            string: shim,
            symbol: shim,

            any: shim,
            arrayOf: getShim,
            element: shim,
            elementType: shim,
            instanceOf: getShim,
            node: shim,
            objectOf: getShim,
            oneOf: getShim,
            oneOfType: getShim,
            shape: getShim,
            exact: getShim,

            checkPropTypes: emptyFunctionWithReset,
            resetWarningCache: emptyFunction,
          };

          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /***/
      },
      /* 430 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret =
          "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";

        module.exports = ReactPropTypesSecret;

        /***/
      },
      /* 431 */
      /***/ function (module, exports, __webpack_require__) {
        var root = __webpack_require__(238);

        /**
         * Gets the timestamp of the number of milliseconds that have elapsed since
         * the Unix epoch (1 January 1970 00:00:00 UTC).
         *
         * @static
         * @memberOf _
         * @since 2.4.0
         * @category Date
         * @returns {number} Returns the timestamp.
         * @example
         *
         * _.defer(function(stamp) {
         *   console.log(_.now() - stamp);
         * }, _.now());
         * // => Logs the number of milliseconds it took for the deferred invocation.
         */
        var now = function () {
          return root.Date.now();
        };

        module.exports = now;

        /***/
      },
      /* 432 */
      /***/ function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function (global) {
          /** Detect free variable `global` from Node.js. */
          var freeGlobal =
            typeof global == "object" &&
            global &&
            global.Object === Object &&
            global;

          module.exports = freeGlobal;

          /* WEBPACK VAR INJECTION */
        }.call(this, __webpack_require__(56)));

        /***/
      },
      /* 433 */
      /***/ function (module, exports, __webpack_require__) {
        var isObject = __webpack_require__(237),
          isSymbol = __webpack_require__(434);

        /** Used as references for various `Number` constants. */
        var NAN = 0 / 0;

        /** Used to match leading and trailing whitespace. */
        var reTrim = /^\s+|\s+$/g;

        /** Used to detect bad signed hexadecimal string values. */
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

        /** Used to detect binary string values. */
        var reIsBinary = /^0b[01]+$/i;

        /** Used to detect octal string values. */
        var reIsOctal = /^0o[0-7]+$/i;

        /** Built-in method references without a dependency on `root`. */
        var freeParseInt = parseInt;

        /**
         * Converts `value` to a number.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to process.
         * @returns {number} Returns the number.
         * @example
         *
         * _.toNumber(3.2);
         * // => 3.2
         *
         * _.toNumber(Number.MIN_VALUE);
         * // => 5e-324
         *
         * _.toNumber(Infinity);
         * // => Infinity
         *
         * _.toNumber('3.2');
         * // => 3.2
         */
        function toNumber(value) {
          if (typeof value == "number") {
            return value;
          }
          if (isSymbol(value)) {
            return NAN;
          }
          if (isObject(value)) {
            var other =
              typeof value.valueOf == "function" ? value.valueOf() : value;
            value = isObject(other) ? other + "" : other;
          }
          if (typeof value != "string") {
            return value === 0 ? value : +value;
          }
          value = value.replace(reTrim, "");
          var isBinary = reIsBinary.test(value);
          return isBinary || reIsOctal.test(value)
            ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
            : reIsBadHex.test(value)
            ? NAN
            : +value;
        }

        module.exports = toNumber;

        /***/
      },
      /* 434 */
      /***/ function (module, exports, __webpack_require__) {
        var baseGetTag = __webpack_require__(435),
          isObjectLike = __webpack_require__(438);

        /** `Object#toString` result references. */
        var symbolTag = "[object Symbol]";

        /**
         * Checks if `value` is classified as a `Symbol` primitive or object.
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
         * @example
         *
         * _.isSymbol(Symbol.iterator);
         * // => true
         *
         * _.isSymbol('abc');
         * // => false
         */
        function isSymbol(value) {
          return (
            typeof value == "symbol" ||
            (isObjectLike(value) && baseGetTag(value) == symbolTag)
          );
        }

        module.exports = isSymbol;

        /***/
      },
      /* 435 */
      /***/ function (module, exports, __webpack_require__) {
        var Symbol = __webpack_require__(239),
          getRawTag = __webpack_require__(436),
          objectToString = __webpack_require__(437);

        /** `Object#toString` result references. */
        var nullTag = "[object Null]",
          undefinedTag = "[object Undefined]";

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * The base implementation of `getTag` without fallbacks for buggy environments.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the `toStringTag`.
         */
        function baseGetTag(value) {
          if (value == null) {
            return value === undefined ? undefinedTag : nullTag;
          }
          return symToStringTag && symToStringTag in Object(value)
            ? getRawTag(value)
            : objectToString(value);
        }

        module.exports = baseGetTag;

        /***/
      },
      /* 436 */
      /***/ function (module, exports, __webpack_require__) {
        var Symbol = __webpack_require__(239);

        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /** Used to check objects for own properties. */
        var hasOwnProperty = objectProto.hasOwnProperty;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /** Built-in value references. */
        var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

        /**
         * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
         *
         * @private
         * @param {*} value The value to query.
         * @returns {string} Returns the raw `toStringTag`.
         */
        function getRawTag(value) {
          var isOwn = hasOwnProperty.call(value, symToStringTag),
            tag = value[symToStringTag];

          try {
            value[symToStringTag] = undefined;
            var unmasked = true;
          } catch (e) {}

          var result = nativeObjectToString.call(value);
          if (unmasked) {
            if (isOwn) {
              value[symToStringTag] = tag;
            } else {
              delete value[symToStringTag];
            }
          }
          return result;
        }

        module.exports = getRawTag;

        /***/
      },
      /* 437 */
      /***/ function (module, exports) {
        /** Used for built-in method references. */
        var objectProto = Object.prototype;

        /**
         * Used to resolve the
         * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
         * of values.
         */
        var nativeObjectToString = objectProto.toString;

        /**
         * Converts `value` to a string using `Object.prototype.toString`.
         *
         * @private
         * @param {*} value The value to convert.
         * @returns {string} Returns the converted string.
         */
        function objectToString(value) {
          return nativeObjectToString.call(value);
        }

        module.exports = objectToString;

        /***/
      },
      /* 438 */
      /***/ function (module, exports) {
        /**
         * Checks if `value` is object-like. A value is object-like if it's not `null`
         * and has a `typeof` result of "object".
         *
         * @static
         * @memberOf _
         * @since 4.0.0
         * @category Lang
         * @param {*} value The value to check.
         * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
         * @example
         *
         * _.isObjectLike({});
         * // => true
         *
         * _.isObjectLike([1, 2, 3]);
         * // => true
         *
         * _.isObjectLike(_.noop);
         * // => false
         *
         * _.isObjectLike(null);
         * // => false
         */
        function isObjectLike(value) {
          return value != null && typeof value == "object";
        }

        module.exports = isObjectLike;

        /***/
      },
      /* 439 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        if (true) {
          module.exports = __webpack_require__(440);
        } else {
        }

        /***/
      },
      /* 440 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.13.1
         * react-is.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var b = "function" === typeof Symbol && Symbol.for,
          c = b ? Symbol.for("react.element") : 60103,
          d = b ? Symbol.for("react.portal") : 60106,
          e = b ? Symbol.for("react.fragment") : 60107,
          f = b ? Symbol.for("react.strict_mode") : 60108,
          g = b ? Symbol.for("react.profiler") : 60114,
          h = b ? Symbol.for("react.provider") : 60109,
          k = b ? Symbol.for("react.context") : 60110,
          l = b ? Symbol.for("react.async_mode") : 60111,
          m = b ? Symbol.for("react.concurrent_mode") : 60111,
          n = b ? Symbol.for("react.forward_ref") : 60112,
          p = b ? Symbol.for("react.suspense") : 60113,
          q = b ? Symbol.for("react.suspense_list") : 60120,
          r = b ? Symbol.for("react.memo") : 60115,
          t = b ? Symbol.for("react.lazy") : 60116,
          v = b ? Symbol.for("react.block") : 60121,
          w = b ? Symbol.for("react.fundamental") : 60117,
          x = b ? Symbol.for("react.responder") : 60118,
          y = b ? Symbol.for("react.scope") : 60119;
        function z(a) {
          if ("object" === typeof a && null !== a) {
            var u = a.$$typeof;
            switch (u) {
              case c:
                switch (((a = a.type), a)) {
                  case l:
                  case m:
                  case e:
                  case g:
                  case f:
                  case p:
                    return a;
                  default:
                    switch (((a = a && a.$$typeof), a)) {
                      case k:
                      case n:
                      case t:
                      case r:
                      case h:
                        return a;
                      default:
                        return u;
                    }
                }
              case d:
                return u;
            }
          }
        }
        function A(a) {
          return z(a) === m;
        }
        exports.AsyncMode = l;
        exports.ConcurrentMode = m;
        exports.ContextConsumer = k;
        exports.ContextProvider = h;
        exports.Element = c;
        exports.ForwardRef = n;
        exports.Fragment = e;
        exports.Lazy = t;
        exports.Memo = r;
        exports.Portal = d;
        exports.Profiler = g;
        exports.StrictMode = f;
        exports.Suspense = p;
        exports.isAsyncMode = function (a) {
          return A(a) || z(a) === l;
        };
        exports.isConcurrentMode = A;
        exports.isContextConsumer = function (a) {
          return z(a) === k;
        };
        exports.isContextProvider = function (a) {
          return z(a) === h;
        };
        exports.isElement = function (a) {
          return "object" === typeof a && null !== a && a.$$typeof === c;
        };
        exports.isForwardRef = function (a) {
          return z(a) === n;
        };
        exports.isFragment = function (a) {
          return z(a) === e;
        };
        exports.isLazy = function (a) {
          return z(a) === t;
        };
        exports.isMemo = function (a) {
          return z(a) === r;
        };
        exports.isPortal = function (a) {
          return z(a) === d;
        };
        exports.isProfiler = function (a) {
          return z(a) === g;
        };
        exports.isStrictMode = function (a) {
          return z(a) === f;
        };
        exports.isSuspense = function (a) {
          return z(a) === p;
        };
        exports.isValidElementType = function (a) {
          return (
            "string" === typeof a ||
            "function" === typeof a ||
            a === e ||
            a === m ||
            a === g ||
            a === f ||
            a === p ||
            a === q ||
            ("object" === typeof a &&
              null !== a &&
              (a.$$typeof === t ||
                a.$$typeof === r ||
                a.$$typeof === h ||
                a.$$typeof === k ||
                a.$$typeof === n ||
                a.$$typeof === w ||
                a.$$typeof === x ||
                a.$$typeof === y ||
                a.$$typeof === v))
          );
        };
        exports.typeOf = z;

        /***/
      },
      /* 441 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.14.0
         * react-dom.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
        var aa = __webpack_require__(0),
          n = __webpack_require__(103),
          r = __webpack_require__(442);
        function u(a) {
          for (
            var b =
                "https://reactjs.org/docs/error-decoder.html?invariant=" + a,
              c = 1;
            c < arguments.length;
            c++
          )
            b += "&args[]=" + encodeURIComponent(arguments[c]);
          return (
            "Minified React error #" +
            a +
            "; visit " +
            b +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
          );
        }
        if (!aa) throw Error(u(227));
        function ba(a, b, c, d, e, f, g, h, k) {
          var l = Array.prototype.slice.call(arguments, 3);
          try {
            b.apply(c, l);
          } catch (m) {
            this.onError(m);
          }
        }
        var da = !1,
          ea = null,
          fa = !1,
          ha = null,
          ia = {
            onError: function (a) {
              da = !0;
              ea = a;
            },
          };
        function ja(a, b, c, d, e, f, g, h, k) {
          da = !1;
          ea = null;
          ba.apply(ia, arguments);
        }
        function ka(a, b, c, d, e, f, g, h, k) {
          ja.apply(this, arguments);
          if (da) {
            if (da) {
              var l = ea;
              da = !1;
              ea = null;
            } else throw Error(u(198));
            fa || ((fa = !0), (ha = l));
          }
        }
        var la = null,
          ma = null,
          na = null;
        function oa(a, b, c) {
          var d = a.type || "unknown-event";
          a.currentTarget = na(c);
          ka(d, b, void 0, a);
          a.currentTarget = null;
        }
        var pa = null,
          qa = {};
        function ra() {
          if (pa)
            for (var a in qa) {
              var b = qa[a],
                c = pa.indexOf(a);
              if (!(-1 < c)) throw Error(u(96, a));
              if (!sa[c]) {
                if (!b.extractEvents) throw Error(u(97, a));
                sa[c] = b;
                c = b.eventTypes;
                for (var d in c) {
                  var e = void 0;
                  var f = c[d],
                    g = b,
                    h = d;
                  if (ta.hasOwnProperty(h)) throw Error(u(99, h));
                  ta[h] = f;
                  var k = f.phasedRegistrationNames;
                  if (k) {
                    for (e in k) k.hasOwnProperty(e) && ua(k[e], g, h);
                    e = !0;
                  } else
                    f.registrationName
                      ? (ua(f.registrationName, g, h), (e = !0))
                      : (e = !1);
                  if (!e) throw Error(u(98, d, a));
                }
              }
            }
        }
        function ua(a, b, c) {
          if (va[a]) throw Error(u(100, a));
          va[a] = b;
          wa[a] = b.eventTypes[c].dependencies;
        }
        var sa = [],
          ta = {},
          va = {},
          wa = {};
        function xa(a) {
          var b = !1,
            c;
          for (c in a)
            if (a.hasOwnProperty(c)) {
              var d = a[c];
              if (!qa.hasOwnProperty(c) || qa[c] !== d) {
                if (qa[c]) throw Error(u(102, c));
                qa[c] = d;
                b = !0;
              }
            }
          b && ra();
        }
        var ya = !(
            "undefined" === typeof window ||
            "undefined" === typeof window.document ||
            "undefined" === typeof window.document.createElement
          ),
          za = null,
          Aa = null,
          Ba = null;
        function Ca(a) {
          if ((a = ma(a))) {
            if ("function" !== typeof za) throw Error(u(280));
            var b = a.stateNode;
            b && ((b = la(b)), za(a.stateNode, a.type, b));
          }
        }
        function Da(a) {
          Aa ? (Ba ? Ba.push(a) : (Ba = [a])) : (Aa = a);
        }
        function Ea() {
          if (Aa) {
            var a = Aa,
              b = Ba;
            Ba = Aa = null;
            Ca(a);
            if (b) for (a = 0; a < b.length; a++) Ca(b[a]);
          }
        }
        function Fa(a, b) {
          return a(b);
        }
        function Ga(a, b, c, d, e) {
          return a(b, c, d, e);
        }
        function Ha() {}
        var Ia = Fa,
          Ja = !1,
          Ka = !1;
        function La() {
          if (null !== Aa || null !== Ba) Ha(), Ea();
        }
        function Ma(a, b, c) {
          if (Ka) return a(b, c);
          Ka = !0;
          try {
            return Ia(a, b, c);
          } finally {
            (Ka = !1), La();
          }
        }
        var Na = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          Oa = Object.prototype.hasOwnProperty,
          Pa = {},
          Qa = {};
        function Ra(a) {
          if (Oa.call(Qa, a)) return !0;
          if (Oa.call(Pa, a)) return !1;
          if (Na.test(a)) return (Qa[a] = !0);
          Pa[a] = !0;
          return !1;
        }
        function Sa(a, b, c, d) {
          if (null !== c && 0 === c.type) return !1;
          switch (typeof b) {
            case "function":
            case "symbol":
              return !0;
            case "boolean":
              if (d) return !1;
              if (null !== c) return !c.acceptsBooleans;
              a = a.toLowerCase().slice(0, 5);
              return "data-" !== a && "aria-" !== a;
            default:
              return !1;
          }
        }
        function Ta(a, b, c, d) {
          if (null === b || "undefined" === typeof b || Sa(a, b, c, d))
            return !0;
          if (d) return !1;
          if (null !== c)
            switch (c.type) {
              case 3:
                return !b;
              case 4:
                return !1 === b;
              case 5:
                return isNaN(b);
              case 6:
                return isNaN(b) || 1 > b;
            }
          return !1;
        }
        function v(a, b, c, d, e, f) {
          this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
          this.attributeName = d;
          this.attributeNamespace = e;
          this.mustUseProperty = c;
          this.propertyName = a;
          this.type = b;
          this.sanitizeURL = f;
        }
        var C = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
          .split(" ")
          .forEach(function (a) {
            C[a] = new v(a, 0, !1, a, null, !1);
          });
        [
          ["acceptCharset", "accept-charset"],
          ["className", "class"],
          ["htmlFor", "for"],
          ["httpEquiv", "http-equiv"],
        ].forEach(function (a) {
          var b = a[0];
          C[b] = new v(b, 1, !1, a[1], null, !1);
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(
          function (a) {
            C[a] = new v(a, 2, !1, a.toLowerCase(), null, !1);
          }
        );
        [
          "autoReverse",
          "externalResourcesRequired",
          "focusable",
          "preserveAlpha",
        ].forEach(function (a) {
          C[a] = new v(a, 2, !1, a, null, !1);
        });
        "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
          .split(" ")
          .forEach(function (a) {
            C[a] = new v(a, 3, !1, a.toLowerCase(), null, !1);
          });
        ["checked", "multiple", "muted", "selected"].forEach(function (a) {
          C[a] = new v(a, 3, !0, a, null, !1);
        });
        ["capture", "download"].forEach(function (a) {
          C[a] = new v(a, 4, !1, a, null, !1);
        });
        ["cols", "rows", "size", "span"].forEach(function (a) {
          C[a] = new v(a, 6, !1, a, null, !1);
        });
        ["rowSpan", "start"].forEach(function (a) {
          C[a] = new v(a, 5, !1, a.toLowerCase(), null, !1);
        });
        var Ua = /[\-:]([a-z])/g;
        function Va(a) {
          return a[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
          .split(" ")
          .forEach(function (a) {
            var b = a.replace(Ua, Va);
            C[b] = new v(b, 1, !1, a, null, !1);
          });
        "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
          .split(" ")
          .forEach(function (a) {
            var b = a.replace(Ua, Va);
            C[b] = new v(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1);
          });
        ["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
          var b = a.replace(Ua, Va);
          C[b] = new v(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1);
        });
        ["tabIndex", "crossOrigin"].forEach(function (a) {
          C[a] = new v(a, 1, !1, a.toLowerCase(), null, !1);
        });
        C.xlinkHref = new v(
          "xlinkHref",
          1,
          !1,
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          !0
        );
        ["src", "href", "action", "formAction"].forEach(function (a) {
          C[a] = new v(a, 1, !1, a.toLowerCase(), null, !0);
        });
        var Wa = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        Wa.hasOwnProperty("ReactCurrentDispatcher") ||
          (Wa.ReactCurrentDispatcher = { current: null });
        Wa.hasOwnProperty("ReactCurrentBatchConfig") ||
          (Wa.ReactCurrentBatchConfig = { suspense: null });
        function Xa(a, b, c, d) {
          var e = C.hasOwnProperty(b) ? C[b] : null;
          var f =
            null !== e
              ? 0 === e.type
              : d
              ? !1
              : !(2 < b.length) ||
                ("o" !== b[0] && "O" !== b[0]) ||
                ("n" !== b[1] && "N" !== b[1])
              ? !1
              : !0;
          f ||
            (Ta(b, c, e, d) && (c = null),
            d || null === e
              ? Ra(b) &&
                (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c))
              : e.mustUseProperty
              ? (a[e.propertyName] = null === c ? (3 === e.type ? !1 : "") : c)
              : ((b = e.attributeName),
                (d = e.attributeNamespace),
                null === c
                  ? a.removeAttribute(b)
                  : ((e = e.type),
                    (c = 3 === e || (4 === e && !0 === c) ? "" : "" + c),
                    d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
        }
        var Ya = /^(.*)[\\\/]/,
          E = "function" === typeof Symbol && Symbol.for,
          Za = E ? Symbol.for("react.element") : 60103,
          $a = E ? Symbol.for("react.portal") : 60106,
          ab = E ? Symbol.for("react.fragment") : 60107,
          bb = E ? Symbol.for("react.strict_mode") : 60108,
          cb = E ? Symbol.for("react.profiler") : 60114,
          db = E ? Symbol.for("react.provider") : 60109,
          eb = E ? Symbol.for("react.context") : 60110,
          fb = E ? Symbol.for("react.concurrent_mode") : 60111,
          gb = E ? Symbol.for("react.forward_ref") : 60112,
          hb = E ? Symbol.for("react.suspense") : 60113,
          ib = E ? Symbol.for("react.suspense_list") : 60120,
          jb = E ? Symbol.for("react.memo") : 60115,
          kb = E ? Symbol.for("react.lazy") : 60116,
          lb = E ? Symbol.for("react.block") : 60121,
          mb = "function" === typeof Symbol && Symbol.iterator;
        function nb(a) {
          if (null === a || "object" !== typeof a) return null;
          a = (mb && a[mb]) || a["@@iterator"];
          return "function" === typeof a ? a : null;
        }
        function ob(a) {
          if (-1 === a._status) {
            a._status = 0;
            var b = a._ctor;
            b = b();
            a._result = b;
            b.then(
              function (b) {
                0 === a._status &&
                  ((b = b.default), (a._status = 1), (a._result = b));
              },
              function (b) {
                0 === a._status && ((a._status = 2), (a._result = b));
              }
            );
          }
        }
        function pb(a) {
          if (null == a) return null;
          if ("function" === typeof a) return a.displayName || a.name || null;
          if ("string" === typeof a) return a;
          switch (a) {
            case ab:
              return "Fragment";
            case $a:
              return "Portal";
            case cb:
              return "Profiler";
            case bb:
              return "StrictMode";
            case hb:
              return "Suspense";
            case ib:
              return "SuspenseList";
          }
          if ("object" === typeof a)
            switch (a.$$typeof) {
              case eb:
                return "Context.Consumer";
              case db:
                return "Context.Provider";
              case gb:
                var b = a.render;
                b = b.displayName || b.name || "";
                return (
                  a.displayName ||
                  ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef")
                );
              case jb:
                return pb(a.type);
              case lb:
                return pb(a.render);
              case kb:
                if ((a = 1 === a._status ? a._result : null)) return pb(a);
            }
          return null;
        }
        function qb(a) {
          var b = "";
          do {
            a: switch (a.tag) {
              case 3:
              case 4:
              case 6:
              case 7:
              case 10:
              case 9:
                var c = "";
                break a;
              default:
                var d = a._debugOwner,
                  e = a._debugSource,
                  f = pb(a.type);
                c = null;
                d && (c = pb(d.type));
                d = f;
                f = "";
                e
                  ? (f =
                      " (at " +
                      e.fileName.replace(Ya, "") +
                      ":" +
                      e.lineNumber +
                      ")")
                  : c && (f = " (created by " + c + ")");
                c = "\n    in " + (d || "Unknown") + f;
            }
            b += c;
            a = a.return;
          } while (a);
          return b;
        }
        function rb(a) {
          switch (typeof a) {
            case "boolean":
            case "number":
            case "object":
            case "string":
            case "undefined":
              return a;
            default:
              return "";
          }
        }
        function sb(a) {
          var b = a.type;
          return (
            (a = a.nodeName) &&
            "input" === a.toLowerCase() &&
            ("checkbox" === b || "radio" === b)
          );
        }
        function tb(a) {
          var b = sb(a) ? "checked" : "value",
            c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
            d = "" + a[b];
          if (
            !a.hasOwnProperty(b) &&
            "undefined" !== typeof c &&
            "function" === typeof c.get &&
            "function" === typeof c.set
          ) {
            var e = c.get,
              f = c.set;
            Object.defineProperty(a, b, {
              configurable: !0,
              get: function () {
                return e.call(this);
              },
              set: function (a) {
                d = "" + a;
                f.call(this, a);
              },
            });
            Object.defineProperty(a, b, { enumerable: c.enumerable });
            return {
              getValue: function () {
                return d;
              },
              setValue: function (a) {
                d = "" + a;
              },
              stopTracking: function () {
                a._valueTracker = null;
                delete a[b];
              },
            };
          }
        }
        function xb(a) {
          a._valueTracker || (a._valueTracker = tb(a));
        }
        function yb(a) {
          if (!a) return !1;
          var b = a._valueTracker;
          if (!b) return !0;
          var c = b.getValue();
          var d = "";
          a && (d = sb(a) ? (a.checked ? "true" : "false") : a.value);
          a = d;
          return a !== c ? (b.setValue(a), !0) : !1;
        }
        function zb(a, b) {
          var c = b.checked;
          return n({}, b, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != c ? c : a._wrapperState.initialChecked,
          });
        }
        function Ab(a, b) {
          var c = null == b.defaultValue ? "" : b.defaultValue,
            d = null != b.checked ? b.checked : b.defaultChecked;
          c = rb(null != b.value ? b.value : c);
          a._wrapperState = {
            initialChecked: d,
            initialValue: c,
            controlled:
              "checkbox" === b.type || "radio" === b.type
                ? null != b.checked
                : null != b.value,
          };
        }
        function Bb(a, b) {
          b = b.checked;
          null != b && Xa(a, "checked", b, !1);
        }
        function Cb(a, b) {
          Bb(a, b);
          var c = rb(b.value),
            d = b.type;
          if (null != c)
            if ("number" === d) {
              if ((0 === c && "" === a.value) || a.value != c) a.value = "" + c;
            } else a.value !== "" + c && (a.value = "" + c);
          else if ("submit" === d || "reset" === d) {
            a.removeAttribute("value");
            return;
          }
          b.hasOwnProperty("value")
            ? Db(a, b.type, c)
            : b.hasOwnProperty("defaultValue") &&
              Db(a, b.type, rb(b.defaultValue));
          null == b.checked &&
            null != b.defaultChecked &&
            (a.defaultChecked = !!b.defaultChecked);
        }
        function Eb(a, b, c) {
          if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
            var d = b.type;
            if (
              !(
                ("submit" !== d && "reset" !== d) ||
                (void 0 !== b.value && null !== b.value)
              )
            )
              return;
            b = "" + a._wrapperState.initialValue;
            c || b === a.value || (a.value = b);
            a.defaultValue = b;
          }
          c = a.name;
          "" !== c && (a.name = "");
          a.defaultChecked = !!a._wrapperState.initialChecked;
          "" !== c && (a.name = c);
        }
        function Db(a, b, c) {
          if ("number" !== b || a.ownerDocument.activeElement !== a)
            null == c
              ? (a.defaultValue = "" + a._wrapperState.initialValue)
              : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
        }
        function Fb(a) {
          var b = "";
          aa.Children.forEach(a, function (a) {
            null != a && (b += a);
          });
          return b;
        }
        function Gb(a, b) {
          a = n({ children: void 0 }, b);
          if ((b = Fb(b.children))) a.children = b;
          return a;
        }
        function Hb(a, b, c, d) {
          a = a.options;
          if (b) {
            b = {};
            for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
            for (c = 0; c < a.length; c++)
              (e = b.hasOwnProperty("$" + a[c].value)),
                a[c].selected !== e && (a[c].selected = e),
                e && d && (a[c].defaultSelected = !0);
          } else {
            c = "" + rb(c);
            b = null;
            for (e = 0; e < a.length; e++) {
              if (a[e].value === c) {
                a[e].selected = !0;
                d && (a[e].defaultSelected = !0);
                return;
              }
              null !== b || a[e].disabled || (b = a[e]);
            }
            null !== b && (b.selected = !0);
          }
        }
        function Ib(a, b) {
          if (null != b.dangerouslySetInnerHTML) throw Error(u(91));
          return n({}, b, {
            value: void 0,
            defaultValue: void 0,
            children: "" + a._wrapperState.initialValue,
          });
        }
        function Jb(a, b) {
          var c = b.value;
          if (null == c) {
            c = b.children;
            b = b.defaultValue;
            if (null != c) {
              if (null != b) throw Error(u(92));
              if (Array.isArray(c)) {
                if (!(1 >= c.length)) throw Error(u(93));
                c = c[0];
              }
              b = c;
            }
            null == b && (b = "");
            c = b;
          }
          a._wrapperState = { initialValue: rb(c) };
        }
        function Kb(a, b) {
          var c = rb(b.value),
            d = rb(b.defaultValue);
          null != c &&
            ((c = "" + c),
            c !== a.value && (a.value = c),
            null == b.defaultValue &&
              a.defaultValue !== c &&
              (a.defaultValue = c));
          null != d && (a.defaultValue = "" + d);
        }
        function Lb(a) {
          var b = a.textContent;
          b === a._wrapperState.initialValue &&
            "" !== b &&
            null !== b &&
            (a.value = b);
        }
        var Mb = {
          html: "http://www.w3.org/1999/xhtml",
          mathml: "http://www.w3.org/1998/Math/MathML",
          svg: "http://www.w3.org/2000/svg",
        };
        function Nb(a) {
          switch (a) {
            case "svg":
              return "http://www.w3.org/2000/svg";
            case "math":
              return "http://www.w3.org/1998/Math/MathML";
            default:
              return "http://www.w3.org/1999/xhtml";
          }
        }
        function Ob(a, b) {
          return null == a || "http://www.w3.org/1999/xhtml" === a
            ? Nb(b)
            : "http://www.w3.org/2000/svg" === a && "foreignObject" === b
            ? "http://www.w3.org/1999/xhtml"
            : a;
        }
        var Pb,
          Qb = (function (a) {
            return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (b, c, d, e) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return a(b, c, d, e);
                  });
                }
              : a;
          })(function (a, b) {
            if (a.namespaceURI !== Mb.svg || "innerHTML" in a) a.innerHTML = b;
            else {
              Pb = Pb || document.createElement("div");
              Pb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
              for (b = Pb.firstChild; a.firstChild; )
                a.removeChild(a.firstChild);
              for (; b.firstChild; ) a.appendChild(b.firstChild);
            }
          });
        function Rb(a, b) {
          if (b) {
            var c = a.firstChild;
            if (c && c === a.lastChild && 3 === c.nodeType) {
              c.nodeValue = b;
              return;
            }
          }
          a.textContent = b;
        }
        function Sb(a, b) {
          var c = {};
          c[a.toLowerCase()] = b.toLowerCase();
          c["Webkit" + a] = "webkit" + b;
          c["Moz" + a] = "moz" + b;
          return c;
        }
        var Tb = {
            animationend: Sb("Animation", "AnimationEnd"),
            animationiteration: Sb("Animation", "AnimationIteration"),
            animationstart: Sb("Animation", "AnimationStart"),
            transitionend: Sb("Transition", "TransitionEnd"),
          },
          Ub = {},
          Vb = {};
        ya &&
          ((Vb = document.createElement("div").style),
          "AnimationEvent" in window ||
            (delete Tb.animationend.animation,
            delete Tb.animationiteration.animation,
            delete Tb.animationstart.animation),
          "TransitionEvent" in window || delete Tb.transitionend.transition);
        function Wb(a) {
          if (Ub[a]) return Ub[a];
          if (!Tb[a]) return a;
          var b = Tb[a],
            c;
          for (c in b)
            if (b.hasOwnProperty(c) && c in Vb) return (Ub[a] = b[c]);
          return a;
        }
        var Xb = Wb("animationend"),
          Yb = Wb("animationiteration"),
          Zb = Wb("animationstart"),
          $b = Wb("transitionend"),
          ac = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(
            " "
          ),
          bc = new ("function" === typeof WeakMap ? WeakMap : Map)();
        function cc(a) {
          var b = bc.get(a);
          void 0 === b && ((b = new Map()), bc.set(a, b));
          return b;
        }
        function dc(a) {
          var b = a,
            c = a;
          if (a.alternate) for (; b.return; ) b = b.return;
          else {
            a = b;
            do
              (b = a),
                0 !== (b.effectTag & 1026) && (c = b.return),
                (a = b.return);
            while (a);
          }
          return 3 === b.tag ? c : null;
        }
        function ec(a) {
          if (13 === a.tag) {
            var b = a.memoizedState;
            null === b &&
              ((a = a.alternate), null !== a && (b = a.memoizedState));
            if (null !== b) return b.dehydrated;
          }
          return null;
        }
        function fc(a) {
          if (dc(a) !== a) throw Error(u(188));
        }
        function gc(a) {
          var b = a.alternate;
          if (!b) {
            b = dc(a);
            if (null === b) throw Error(u(188));
            return b !== a ? null : a;
          }
          for (var c = a, d = b; ; ) {
            var e = c.return;
            if (null === e) break;
            var f = e.alternate;
            if (null === f) {
              d = e.return;
              if (null !== d) {
                c = d;
                continue;
              }
              break;
            }
            if (e.child === f.child) {
              for (f = e.child; f; ) {
                if (f === c) return fc(e), a;
                if (f === d) return fc(e), b;
                f = f.sibling;
              }
              throw Error(u(188));
            }
            if (c.return !== d.return) (c = e), (d = f);
            else {
              for (var g = !1, h = e.child; h; ) {
                if (h === c) {
                  g = !0;
                  c = e;
                  d = f;
                  break;
                }
                if (h === d) {
                  g = !0;
                  d = e;
                  c = f;
                  break;
                }
                h = h.sibling;
              }
              if (!g) {
                for (h = f.child; h; ) {
                  if (h === c) {
                    g = !0;
                    c = f;
                    d = e;
                    break;
                  }
                  if (h === d) {
                    g = !0;
                    d = f;
                    c = e;
                    break;
                  }
                  h = h.sibling;
                }
                if (!g) throw Error(u(189));
              }
            }
            if (c.alternate !== d) throw Error(u(190));
          }
          if (3 !== c.tag) throw Error(u(188));
          return c.stateNode.current === c ? a : b;
        }
        function hc(a) {
          a = gc(a);
          if (!a) return null;
          for (var b = a; ; ) {
            if (5 === b.tag || 6 === b.tag) return b;
            if (b.child) (b.child.return = b), (b = b.child);
            else {
              if (b === a) break;
              for (; !b.sibling; ) {
                if (!b.return || b.return === a) return null;
                b = b.return;
              }
              b.sibling.return = b.return;
              b = b.sibling;
            }
          }
          return null;
        }
        function ic(a, b) {
          if (null == b) throw Error(u(30));
          if (null == a) return b;
          if (Array.isArray(a)) {
            if (Array.isArray(b)) return a.push.apply(a, b), a;
            a.push(b);
            return a;
          }
          return Array.isArray(b) ? [a].concat(b) : [a, b];
        }
        function jc(a, b, c) {
          Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
        }
        var kc = null;
        function lc(a) {
          if (a) {
            var b = a._dispatchListeners,
              c = a._dispatchInstances;
            if (Array.isArray(b))
              for (var d = 0; d < b.length && !a.isPropagationStopped(); d++)
                oa(a, b[d], c[d]);
            else b && oa(a, b, c);
            a._dispatchListeners = null;
            a._dispatchInstances = null;
            a.isPersistent() || a.constructor.release(a);
          }
        }
        function mc(a) {
          null !== a && (kc = ic(kc, a));
          a = kc;
          kc = null;
          if (a) {
            jc(a, lc);
            if (kc) throw Error(u(95));
            if (fa) throw ((a = ha), (fa = !1), (ha = null), a);
          }
        }
        function nc(a) {
          a = a.target || a.srcElement || window;
          a.correspondingUseElement && (a = a.correspondingUseElement);
          return 3 === a.nodeType ? a.parentNode : a;
        }
        function oc(a) {
          if (!ya) return !1;
          a = "on" + a;
          var b = a in document;
          b ||
            ((b = document.createElement("div")),
            b.setAttribute(a, "return;"),
            (b = "function" === typeof b[a]));
          return b;
        }
        var pc = [];
        function qc(a) {
          a.topLevelType = null;
          a.nativeEvent = null;
          a.targetInst = null;
          a.ancestors.length = 0;
          10 > pc.length && pc.push(a);
        }
        function rc(a, b, c, d) {
          if (pc.length) {
            var e = pc.pop();
            e.topLevelType = a;
            e.eventSystemFlags = d;
            e.nativeEvent = b;
            e.targetInst = c;
            return e;
          }
          return {
            topLevelType: a,
            eventSystemFlags: d,
            nativeEvent: b,
            targetInst: c,
            ancestors: [],
          };
        }
        function sc(a) {
          var b = a.targetInst,
            c = b;
          do {
            if (!c) {
              a.ancestors.push(c);
              break;
            }
            var d = c;
            if (3 === d.tag) d = d.stateNode.containerInfo;
            else {
              for (; d.return; ) d = d.return;
              d = 3 !== d.tag ? null : d.stateNode.containerInfo;
            }
            if (!d) break;
            b = c.tag;
            (5 !== b && 6 !== b) || a.ancestors.push(c);
            c = tc(d);
          } while (c);
          for (c = 0; c < a.ancestors.length; c++) {
            b = a.ancestors[c];
            var e = nc(a.nativeEvent);
            d = a.topLevelType;
            var f = a.nativeEvent,
              g = a.eventSystemFlags;
            0 === c && (g |= 64);
            for (var h = null, k = 0; k < sa.length; k++) {
              var l = sa[k];
              l && (l = l.extractEvents(d, b, f, e, g)) && (h = ic(h, l));
            }
            mc(h);
          }
        }
        function uc(a, b, c) {
          if (!c.has(a)) {
            switch (a) {
              case "scroll":
                vc(b, "scroll", !0);
                break;
              case "focus":
              case "blur":
                vc(b, "focus", !0);
                vc(b, "blur", !0);
                c.set("blur", null);
                c.set("focus", null);
                break;
              case "cancel":
              case "close":
                oc(a) && vc(b, a, !0);
                break;
              case "invalid":
              case "submit":
              case "reset":
                break;
              default:
                -1 === ac.indexOf(a) && F(a, b);
            }
            c.set(a, null);
          }
        }
        var wc,
          xc,
          yc,
          zc = !1,
          Ac = [],
          Bc = null,
          Cc = null,
          Dc = null,
          Ec = new Map(),
          Fc = new Map(),
          Gc = [],
          Hc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(
            " "
          ),
          Ic = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(
            " "
          );
        function Jc(a, b) {
          var c = cc(b);
          Hc.forEach(function (a) {
            uc(a, b, c);
          });
          Ic.forEach(function (a) {
            uc(a, b, c);
          });
        }
        function Kc(a, b, c, d, e) {
          return {
            blockedOn: a,
            topLevelType: b,
            eventSystemFlags: c | 32,
            nativeEvent: e,
            container: d,
          };
        }
        function Lc(a, b) {
          switch (a) {
            case "focus":
            case "blur":
              Bc = null;
              break;
            case "dragenter":
            case "dragleave":
              Cc = null;
              break;
            case "mouseover":
            case "mouseout":
              Dc = null;
              break;
            case "pointerover":
            case "pointerout":
              Ec.delete(b.pointerId);
              break;
            case "gotpointercapture":
            case "lostpointercapture":
              Fc.delete(b.pointerId);
          }
        }
        function Mc(a, b, c, d, e, f) {
          if (null === a || a.nativeEvent !== f)
            return (
              (a = Kc(b, c, d, e, f)),
              null !== b && ((b = Nc(b)), null !== b && xc(b)),
              a
            );
          a.eventSystemFlags |= d;
          return a;
        }
        function Oc(a, b, c, d, e) {
          switch (b) {
            case "focus":
              return (Bc = Mc(Bc, a, b, c, d, e)), !0;
            case "dragenter":
              return (Cc = Mc(Cc, a, b, c, d, e)), !0;
            case "mouseover":
              return (Dc = Mc(Dc, a, b, c, d, e)), !0;
            case "pointerover":
              var f = e.pointerId;
              Ec.set(f, Mc(Ec.get(f) || null, a, b, c, d, e));
              return !0;
            case "gotpointercapture":
              return (
                (f = e.pointerId),
                Fc.set(f, Mc(Fc.get(f) || null, a, b, c, d, e)),
                !0
              );
          }
          return !1;
        }
        function Pc(a) {
          var b = tc(a.target);
          if (null !== b) {
            var c = dc(b);
            if (null !== c)
              if (((b = c.tag), 13 === b)) {
                if (((b = ec(c)), null !== b)) {
                  a.blockedOn = b;
                  r.unstable_runWithPriority(a.priority, function () {
                    yc(c);
                  });
                  return;
                }
              } else if (3 === b && c.stateNode.hydrate) {
                a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
                return;
              }
          }
          a.blockedOn = null;
        }
        function Qc(a) {
          if (null !== a.blockedOn) return !1;
          var b = Rc(
            a.topLevelType,
            a.eventSystemFlags,
            a.container,
            a.nativeEvent
          );
          if (null !== b) {
            var c = Nc(b);
            null !== c && xc(c);
            a.blockedOn = b;
            return !1;
          }
          return !0;
        }
        function Sc(a, b, c) {
          Qc(a) && c.delete(b);
        }
        function Tc() {
          for (zc = !1; 0 < Ac.length; ) {
            var a = Ac[0];
            if (null !== a.blockedOn) {
              a = Nc(a.blockedOn);
              null !== a && wc(a);
              break;
            }
            var b = Rc(
              a.topLevelType,
              a.eventSystemFlags,
              a.container,
              a.nativeEvent
            );
            null !== b ? (a.blockedOn = b) : Ac.shift();
          }
          null !== Bc && Qc(Bc) && (Bc = null);
          null !== Cc && Qc(Cc) && (Cc = null);
          null !== Dc && Qc(Dc) && (Dc = null);
          Ec.forEach(Sc);
          Fc.forEach(Sc);
        }
        function Uc(a, b) {
          a.blockedOn === b &&
            ((a.blockedOn = null),
            zc ||
              ((zc = !0),
              r.unstable_scheduleCallback(r.unstable_NormalPriority, Tc)));
        }
        function Vc(a) {
          function b(b) {
            return Uc(b, a);
          }
          if (0 < Ac.length) {
            Uc(Ac[0], a);
            for (var c = 1; c < Ac.length; c++) {
              var d = Ac[c];
              d.blockedOn === a && (d.blockedOn = null);
            }
          }
          null !== Bc && Uc(Bc, a);
          null !== Cc && Uc(Cc, a);
          null !== Dc && Uc(Dc, a);
          Ec.forEach(b);
          Fc.forEach(b);
          for (c = 0; c < Gc.length; c++)
            (d = Gc[c]), d.blockedOn === a && (d.blockedOn = null);
          for (; 0 < Gc.length && ((c = Gc[0]), null === c.blockedOn); )
            Pc(c), null === c.blockedOn && Gc.shift();
        }
        var Wc = {},
          Yc = new Map(),
          Zc = new Map(),
          $c = [
            "abort",
            "abort",
            Xb,
            "animationEnd",
            Yb,
            "animationIteration",
            Zb,
            "animationStart",
            "canplay",
            "canPlay",
            "canplaythrough",
            "canPlayThrough",
            "durationchange",
            "durationChange",
            "emptied",
            "emptied",
            "encrypted",
            "encrypted",
            "ended",
            "ended",
            "error",
            "error",
            "gotpointercapture",
            "gotPointerCapture",
            "load",
            "load",
            "loadeddata",
            "loadedData",
            "loadedmetadata",
            "loadedMetadata",
            "loadstart",
            "loadStart",
            "lostpointercapture",
            "lostPointerCapture",
            "playing",
            "playing",
            "progress",
            "progress",
            "seeking",
            "seeking",
            "stalled",
            "stalled",
            "suspend",
            "suspend",
            "timeupdate",
            "timeUpdate",
            $b,
            "transitionEnd",
            "waiting",
            "waiting",
          ];
        function ad(a, b) {
          for (var c = 0; c < a.length; c += 2) {
            var d = a[c],
              e = a[c + 1],
              f = "on" + (e[0].toUpperCase() + e.slice(1));
            f = {
              phasedRegistrationNames: { bubbled: f, captured: f + "Capture" },
              dependencies: [d],
              eventPriority: b,
            };
            Zc.set(d, b);
            Yc.set(d, f);
            Wc[e] = f;
          }
        }
        ad(
          "blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(
            " "
          ),
          0
        );
        ad(
          "drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(
            " "
          ),
          1
        );
        ad($c, 2);
        for (
          var bd = "change selectionchange textInput compositionstart compositionend compositionupdate".split(
              " "
            ),
            cd = 0;
          cd < bd.length;
          cd++
        )
          Zc.set(bd[cd], 0);
        var dd = r.unstable_UserBlockingPriority,
          ed = r.unstable_runWithPriority,
          fd = !0;
        function F(a, b) {
          vc(b, a, !1);
        }
        function vc(a, b, c) {
          var d = Zc.get(b);
          switch (void 0 === d ? 2 : d) {
            case 0:
              d = gd.bind(null, b, 1, a);
              break;
            case 1:
              d = hd.bind(null, b, 1, a);
              break;
            default:
              d = id.bind(null, b, 1, a);
          }
          c ? a.addEventListener(b, d, !0) : a.addEventListener(b, d, !1);
        }
        function gd(a, b, c, d) {
          Ja || Ha();
          var e = id,
            f = Ja;
          Ja = !0;
          try {
            Ga(e, a, b, c, d);
          } finally {
            (Ja = f) || La();
          }
        }
        function hd(a, b, c, d) {
          ed(dd, id.bind(null, a, b, c, d));
        }
        function id(a, b, c, d) {
          if (fd)
            if (0 < Ac.length && -1 < Hc.indexOf(a))
              (a = Kc(null, a, b, c, d)), Ac.push(a);
            else {
              var e = Rc(a, b, c, d);
              if (null === e) Lc(a, d);
              else if (-1 < Hc.indexOf(a)) (a = Kc(e, a, b, c, d)), Ac.push(a);
              else if (!Oc(e, a, b, c, d)) {
                Lc(a, d);
                a = rc(a, d, null, b);
                try {
                  Ma(sc, a);
                } finally {
                  qc(a);
                }
              }
            }
        }
        function Rc(a, b, c, d) {
          c = nc(d);
          c = tc(c);
          if (null !== c) {
            var e = dc(c);
            if (null === e) c = null;
            else {
              var f = e.tag;
              if (13 === f) {
                c = ec(e);
                if (null !== c) return c;
                c = null;
              } else if (3 === f) {
                if (e.stateNode.hydrate)
                  return 3 === e.tag ? e.stateNode.containerInfo : null;
                c = null;
              } else e !== c && (c = null);
            }
          }
          a = rc(a, d, c, b);
          try {
            Ma(sc, a);
          } finally {
            qc(a);
          }
          return null;
        }
        var jd = {
            animationIterationCount: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          kd = ["Webkit", "ms", "Moz", "O"];
        Object.keys(jd).forEach(function (a) {
          kd.forEach(function (b) {
            b = b + a.charAt(0).toUpperCase() + a.substring(1);
            jd[b] = jd[a];
          });
        });
        function ld(a, b, c) {
          return null == b || "boolean" === typeof b || "" === b
            ? ""
            : c ||
              "number" !== typeof b ||
              0 === b ||
              (jd.hasOwnProperty(a) && jd[a])
            ? ("" + b).trim()
            : b + "px";
        }
        function md(a, b) {
          a = a.style;
          for (var c in b)
            if (b.hasOwnProperty(c)) {
              var d = 0 === c.indexOf("--"),
                e = ld(c, b[c], d);
              "float" === c && (c = "cssFloat");
              d ? a.setProperty(c, e) : (a[c] = e);
            }
        }
        var nd = n(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          }
        );
        function od(a, b) {
          if (b) {
            if (
              nd[a] &&
              (null != b.children || null != b.dangerouslySetInnerHTML)
            )
              throw Error(u(137, a, ""));
            if (null != b.dangerouslySetInnerHTML) {
              if (null != b.children) throw Error(u(60));
              if (
                !(
                  "object" === typeof b.dangerouslySetInnerHTML &&
                  "__html" in b.dangerouslySetInnerHTML
                )
              )
                throw Error(u(61));
            }
            if (null != b.style && "object" !== typeof b.style)
              throw Error(u(62, ""));
          }
        }
        function pd(a, b) {
          if (-1 === a.indexOf("-")) return "string" === typeof b.is;
          switch (a) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return !1;
            default:
              return !0;
          }
        }
        var qd = Mb.html;
        function rd(a, b) {
          a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;
          var c = cc(a);
          b = wa[b];
          for (var d = 0; d < b.length; d++) uc(b[d], a, c);
        }
        function sd() {}
        function td(a) {
          a = a || ("undefined" !== typeof document ? document : void 0);
          if ("undefined" === typeof a) return null;
          try {
            return a.activeElement || a.body;
          } catch (b) {
            return a.body;
          }
        }
        function ud(a) {
          for (; a && a.firstChild; ) a = a.firstChild;
          return a;
        }
        function vd(a, b) {
          var c = ud(a);
          a = 0;
          for (var d; c; ) {
            if (3 === c.nodeType) {
              d = a + c.textContent.length;
              if (a <= b && d >= b) return { node: c, offset: b - a };
              a = d;
            }
            a: {
              for (; c; ) {
                if (c.nextSibling) {
                  c = c.nextSibling;
                  break a;
                }
                c = c.parentNode;
              }
              c = void 0;
            }
            c = ud(c);
          }
        }
        function wd(a, b) {
          return a && b
            ? a === b
              ? !0
              : a && 3 === a.nodeType
              ? !1
              : b && 3 === b.nodeType
              ? wd(a, b.parentNode)
              : "contains" in a
              ? a.contains(b)
              : a.compareDocumentPosition
              ? !!(a.compareDocumentPosition(b) & 16)
              : !1
            : !1;
        }
        function xd() {
          for (var a = window, b = td(); b instanceof a.HTMLIFrameElement; ) {
            try {
              var c = "string" === typeof b.contentWindow.location.href;
            } catch (d) {
              c = !1;
            }
            if (c) a = b.contentWindow;
            else break;
            b = td(a.document);
          }
          return b;
        }
        function yd(a) {
          var b = a && a.nodeName && a.nodeName.toLowerCase();
          return (
            b &&
            (("input" === b &&
              ("text" === a.type ||
                "search" === a.type ||
                "tel" === a.type ||
                "url" === a.type ||
                "password" === a.type)) ||
              "textarea" === b ||
              "true" === a.contentEditable)
          );
        }
        var zd = "$",
          Ad = "/$",
          Bd = "$?",
          Cd = "$!",
          Dd = null,
          Ed = null;
        function Fd(a, b) {
          switch (a) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!b.autoFocus;
          }
          return !1;
        }
        function Gd(a, b) {
          return (
            "textarea" === a ||
            "option" === a ||
            "noscript" === a ||
            "string" === typeof b.children ||
            "number" === typeof b.children ||
            ("object" === typeof b.dangerouslySetInnerHTML &&
              null !== b.dangerouslySetInnerHTML &&
              null != b.dangerouslySetInnerHTML.__html)
          );
        }
        var Hd = "function" === typeof setTimeout ? setTimeout : void 0,
          Id = "function" === typeof clearTimeout ? clearTimeout : void 0;
        function Jd(a) {
          for (; null != a; a = a.nextSibling) {
            var b = a.nodeType;
            if (1 === b || 3 === b) break;
          }
          return a;
        }
        function Kd(a) {
          a = a.previousSibling;
          for (var b = 0; a; ) {
            if (8 === a.nodeType) {
              var c = a.data;
              if (c === zd || c === Cd || c === Bd) {
                if (0 === b) return a;
                b--;
              } else c === Ad && b++;
            }
            a = a.previousSibling;
          }
          return null;
        }
        var Ld = Math.random().toString(36).slice(2),
          Md = "__reactInternalInstance$" + Ld,
          Nd = "__reactEventHandlers$" + Ld,
          Od = "__reactContainere$" + Ld;
        function tc(a) {
          var b = a[Md];
          if (b) return b;
          for (var c = a.parentNode; c; ) {
            if ((b = c[Od] || c[Md])) {
              c = b.alternate;
              if (null !== b.child || (null !== c && null !== c.child))
                for (a = Kd(a); null !== a; ) {
                  if ((c = a[Md])) return c;
                  a = Kd(a);
                }
              return b;
            }
            a = c;
            c = a.parentNode;
          }
          return null;
        }
        function Nc(a) {
          a = a[Md] || a[Od];
          return !a ||
            (5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag)
            ? null
            : a;
        }
        function Pd(a) {
          if (5 === a.tag || 6 === a.tag) return a.stateNode;
          throw Error(u(33));
        }
        function Qd(a) {
          return a[Nd] || null;
        }
        function Rd(a) {
          do a = a.return;
          while (a && 5 !== a.tag);
          return a ? a : null;
        }
        function Sd(a, b) {
          var c = a.stateNode;
          if (!c) return null;
          var d = la(c);
          if (!d) return null;
          c = d[b];
          a: switch (b) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              (d = !d.disabled) ||
                ((a = a.type),
                (d = !(
                  "button" === a ||
                  "input" === a ||
                  "select" === a ||
                  "textarea" === a
                )));
              a = !d;
              break a;
            default:
              a = !1;
          }
          if (a) return null;
          if (c && "function" !== typeof c) throw Error(u(231, b, typeof c));
          return c;
        }
        function Td(a, b, c) {
          if ((b = Sd(a, c.dispatchConfig.phasedRegistrationNames[b])))
            (c._dispatchListeners = ic(c._dispatchListeners, b)),
              (c._dispatchInstances = ic(c._dispatchInstances, a));
        }
        function Ud(a) {
          if (a && a.dispatchConfig.phasedRegistrationNames) {
            for (var b = a._targetInst, c = []; b; ) c.push(b), (b = Rd(b));
            for (b = c.length; 0 < b--; ) Td(c[b], "captured", a);
            for (b = 0; b < c.length; b++) Td(c[b], "bubbled", a);
          }
        }
        function Vd(a, b, c) {
          a &&
            c &&
            c.dispatchConfig.registrationName &&
            (b = Sd(a, c.dispatchConfig.registrationName)) &&
            ((c._dispatchListeners = ic(c._dispatchListeners, b)),
            (c._dispatchInstances = ic(c._dispatchInstances, a)));
        }
        function Wd(a) {
          a && a.dispatchConfig.registrationName && Vd(a._targetInst, null, a);
        }
        function Xd(a) {
          jc(a, Ud);
        }
        var Yd = null,
          Zd = null,
          $d = null;
        function ae() {
          if ($d) return $d;
          var a,
            b = Zd,
            c = b.length,
            d,
            e = "value" in Yd ? Yd.value : Yd.textContent,
            f = e.length;
          for (a = 0; a < c && b[a] === e[a]; a++);
          var g = c - a;
          for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
          return ($d = e.slice(a, 1 < d ? 1 - d : void 0));
        }
        function be() {
          return !0;
        }
        function ce() {
          return !1;
        }
        function G(a, b, c, d) {
          this.dispatchConfig = a;
          this._targetInst = b;
          this.nativeEvent = c;
          a = this.constructor.Interface;
          for (var e in a)
            a.hasOwnProperty(e) &&
              ((b = a[e])
                ? (this[e] = b(c))
                : "target" === e
                ? (this.target = d)
                : (this[e] = c[e]));
          this.isDefaultPrevented = (
            null != c.defaultPrevented
              ? c.defaultPrevented
              : !1 === c.returnValue
          )
            ? be
            : ce;
          this.isPropagationStopped = ce;
          return this;
        }
        n(G.prototype, {
          preventDefault: function () {
            this.defaultPrevented = !0;
            var a = this.nativeEvent;
            a &&
              (a.preventDefault
                ? a.preventDefault()
                : "unknown" !== typeof a.returnValue && (a.returnValue = !1),
              (this.isDefaultPrevented = be));
          },
          stopPropagation: function () {
            var a = this.nativeEvent;
            a &&
              (a.stopPropagation
                ? a.stopPropagation()
                : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0),
              (this.isPropagationStopped = be));
          },
          persist: function () {
            this.isPersistent = be;
          },
          isPersistent: ce,
          destructor: function () {
            var a = this.constructor.Interface,
              b;
            for (b in a) this[b] = null;
            this.nativeEvent = this._targetInst = this.dispatchConfig = null;
            this.isPropagationStopped = this.isDefaultPrevented = ce;
            this._dispatchInstances = this._dispatchListeners = null;
          },
        });
        G.Interface = {
          type: null,
          target: null,
          currentTarget: function () {
            return null;
          },
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function (a) {
            return a.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null,
        };
        G.extend = function (a) {
          function b() {}
          function c() {
            return d.apply(this, arguments);
          }
          var d = this;
          b.prototype = d.prototype;
          var e = new b();
          n(e, c.prototype);
          c.prototype = e;
          c.prototype.constructor = c;
          c.Interface = n({}, d.Interface, a);
          c.extend = d.extend;
          de(c);
          return c;
        };
        de(G);
        function ee(a, b, c, d) {
          if (this.eventPool.length) {
            var e = this.eventPool.pop();
            this.call(e, a, b, c, d);
            return e;
          }
          return new this(a, b, c, d);
        }
        function fe(a) {
          if (!(a instanceof this)) throw Error(u(279));
          a.destructor();
          10 > this.eventPool.length && this.eventPool.push(a);
        }
        function de(a) {
          a.eventPool = [];
          a.getPooled = ee;
          a.release = fe;
        }
        var ge = G.extend({ data: null }),
          he = G.extend({ data: null }),
          ie = [9, 13, 27, 32],
          je = ya && "CompositionEvent" in window,
          ke = null;
        ya && "documentMode" in document && (ke = document.documentMode);
        var le = ya && "TextEvent" in window && !ke,
          me = ya && (!je || (ke && 8 < ke && 11 >= ke)),
          ne = String.fromCharCode(32),
          oe = {
            beforeInput: {
              phasedRegistrationNames: {
                bubbled: "onBeforeInput",
                captured: "onBeforeInputCapture",
              },
              dependencies: [
                "compositionend",
                "keypress",
                "textInput",
                "paste",
              ],
            },
            compositionEnd: {
              phasedRegistrationNames: {
                bubbled: "onCompositionEnd",
                captured: "onCompositionEndCapture",
              },
              dependencies: "blur compositionend keydown keypress keyup mousedown".split(
                " "
              ),
            },
            compositionStart: {
              phasedRegistrationNames: {
                bubbled: "onCompositionStart",
                captured: "onCompositionStartCapture",
              },
              dependencies: "blur compositionstart keydown keypress keyup mousedown".split(
                " "
              ),
            },
            compositionUpdate: {
              phasedRegistrationNames: {
                bubbled: "onCompositionUpdate",
                captured: "onCompositionUpdateCapture",
              },
              dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(
                " "
              ),
            },
          },
          pe = !1;
        function qe(a, b) {
          switch (a) {
            case "keyup":
              return -1 !== ie.indexOf(b.keyCode);
            case "keydown":
              return 229 !== b.keyCode;
            case "keypress":
            case "mousedown":
            case "blur":
              return !0;
            default:
              return !1;
          }
        }
        function re(a) {
          a = a.detail;
          return "object" === typeof a && "data" in a ? a.data : null;
        }
        var se = !1;
        function te(a, b) {
          switch (a) {
            case "compositionend":
              return re(b);
            case "keypress":
              if (32 !== b.which) return null;
              pe = !0;
              return ne;
            case "textInput":
              return (a = b.data), a === ne && pe ? null : a;
            default:
              return null;
          }
        }
        function ue(a, b) {
          if (se)
            return "compositionend" === a || (!je && qe(a, b))
              ? ((a = ae()), ($d = Zd = Yd = null), (se = !1), a)
              : null;
          switch (a) {
            case "paste":
              return null;
            case "keypress":
              if (
                !(b.ctrlKey || b.altKey || b.metaKey) ||
                (b.ctrlKey && b.altKey)
              ) {
                if (b.char && 1 < b.char.length) return b.char;
                if (b.which) return String.fromCharCode(b.which);
              }
              return null;
            case "compositionend":
              return me && "ko" !== b.locale ? null : b.data;
            default:
              return null;
          }
        }
        var ve = {
            eventTypes: oe,
            extractEvents: function (a, b, c, d) {
              var e;
              if (je)
                b: {
                  switch (a) {
                    case "compositionstart":
                      var f = oe.compositionStart;
                      break b;
                    case "compositionend":
                      f = oe.compositionEnd;
                      break b;
                    case "compositionupdate":
                      f = oe.compositionUpdate;
                      break b;
                  }
                  f = void 0;
                }
              else
                se
                  ? qe(a, c) && (f = oe.compositionEnd)
                  : "keydown" === a &&
                    229 === c.keyCode &&
                    (f = oe.compositionStart);
              f
                ? (me &&
                    "ko" !== c.locale &&
                    (se || f !== oe.compositionStart
                      ? f === oe.compositionEnd && se && (e = ae())
                      : ((Yd = d),
                        (Zd = "value" in Yd ? Yd.value : Yd.textContent),
                        (se = !0))),
                  (f = ge.getPooled(f, b, c, d)),
                  e ? (f.data = e) : ((e = re(c)), null !== e && (f.data = e)),
                  Xd(f),
                  (e = f))
                : (e = null);
              (a = le ? te(a, c) : ue(a, c))
                ? ((b = he.getPooled(oe.beforeInput, b, c, d)),
                  (b.data = a),
                  Xd(b))
                : (b = null);
              return null === e ? b : null === b ? e : [e, b];
            },
          },
          we = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
          };
        function xe(a) {
          var b = a && a.nodeName && a.nodeName.toLowerCase();
          return "input" === b ? !!we[a.type] : "textarea" === b ? !0 : !1;
        }
        var ye = {
          change: {
            phasedRegistrationNames: {
              bubbled: "onChange",
              captured: "onChangeCapture",
            },
            dependencies: "blur change click focus input keydown keyup selectionchange".split(
              " "
            ),
          },
        };
        function ze(a, b, c) {
          a = G.getPooled(ye.change, a, b, c);
          a.type = "change";
          Da(c);
          Xd(a);
          return a;
        }
        var Ae = null,
          Be = null;
        function Ce(a) {
          mc(a);
        }
        function De(a) {
          var b = Pd(a);
          if (yb(b)) return a;
        }
        function Ee(a, b) {
          if ("change" === a) return b;
        }
        var Fe = !1;
        ya &&
          (Fe =
            oc("input") &&
            (!document.documentMode || 9 < document.documentMode));
        function Ge() {
          Ae && (Ae.detachEvent("onpropertychange", He), (Be = Ae = null));
        }
        function He(a) {
          if ("value" === a.propertyName && De(Be))
            if (((a = ze(Be, a, nc(a))), Ja)) mc(a);
            else {
              Ja = !0;
              try {
                Fa(Ce, a);
              } finally {
                (Ja = !1), La();
              }
            }
        }
        function Ie(a, b, c) {
          "focus" === a
            ? (Ge(), (Ae = b), (Be = c), Ae.attachEvent("onpropertychange", He))
            : "blur" === a && Ge();
        }
        function Je(a) {
          if ("selectionchange" === a || "keyup" === a || "keydown" === a)
            return De(Be);
        }
        function Ke(a, b) {
          if ("click" === a) return De(b);
        }
        function Le(a, b) {
          if ("input" === a || "change" === a) return De(b);
        }
        var Me = {
            eventTypes: ye,
            _isInputEventSupported: Fe,
            extractEvents: function (a, b, c, d) {
              var e = b ? Pd(b) : window,
                f = e.nodeName && e.nodeName.toLowerCase();
              if ("select" === f || ("input" === f && "file" === e.type))
                var g = Ee;
              else if (xe(e))
                if (Fe) g = Le;
                else {
                  g = Je;
                  var h = Ie;
                }
              else
                (f = e.nodeName) &&
                  "input" === f.toLowerCase() &&
                  ("checkbox" === e.type || "radio" === e.type) &&
                  (g = Ke);
              if (g && (g = g(a, b))) return ze(g, c, d);
              h && h(a, e, b);
              "blur" === a &&
                (a = e._wrapperState) &&
                a.controlled &&
                "number" === e.type &&
                Db(e, "number", e.value);
            },
          },
          Ne = G.extend({ view: null, detail: null }),
          Oe = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
          };
        function Pe(a) {
          var b = this.nativeEvent;
          return b.getModifierState
            ? b.getModifierState(a)
            : (a = Oe[a])
            ? !!b[a]
            : !1;
        }
        function Qe() {
          return Pe;
        }
        var Re = 0,
          Se = 0,
          Te = !1,
          Ue = !1,
          Ve = Ne.extend({
            screenX: null,
            screenY: null,
            clientX: null,
            clientY: null,
            pageX: null,
            pageY: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            getModifierState: Qe,
            button: null,
            buttons: null,
            relatedTarget: function (a) {
              return (
                a.relatedTarget ||
                (a.fromElement === a.srcElement ? a.toElement : a.fromElement)
              );
            },
            movementX: function (a) {
              if ("movementX" in a) return a.movementX;
              var b = Re;
              Re = a.screenX;
              return Te
                ? "mousemove" === a.type
                  ? a.screenX - b
                  : 0
                : ((Te = !0), 0);
            },
            movementY: function (a) {
              if ("movementY" in a) return a.movementY;
              var b = Se;
              Se = a.screenY;
              return Ue
                ? "mousemove" === a.type
                  ? a.screenY - b
                  : 0
                : ((Ue = !0), 0);
            },
          }),
          We = Ve.extend({
            pointerId: null,
            width: null,
            height: null,
            pressure: null,
            tangentialPressure: null,
            tiltX: null,
            tiltY: null,
            twist: null,
            pointerType: null,
            isPrimary: null,
          }),
          Xe = {
            mouseEnter: {
              registrationName: "onMouseEnter",
              dependencies: ["mouseout", "mouseover"],
            },
            mouseLeave: {
              registrationName: "onMouseLeave",
              dependencies: ["mouseout", "mouseover"],
            },
            pointerEnter: {
              registrationName: "onPointerEnter",
              dependencies: ["pointerout", "pointerover"],
            },
            pointerLeave: {
              registrationName: "onPointerLeave",
              dependencies: ["pointerout", "pointerover"],
            },
          },
          Ye = {
            eventTypes: Xe,
            extractEvents: function (a, b, c, d, e) {
              var f = "mouseover" === a || "pointerover" === a,
                g = "mouseout" === a || "pointerout" === a;
              if (
                (f && 0 === (e & 32) && (c.relatedTarget || c.fromElement)) ||
                (!g && !f)
              )
                return null;
              f =
                d.window === d
                  ? d
                  : (f = d.ownerDocument)
                  ? f.defaultView || f.parentWindow
                  : window;
              if (g) {
                if (
                  ((g = b),
                  (b = (b = c.relatedTarget || c.toElement) ? tc(b) : null),
                  null !== b)
                ) {
                  var h = dc(b);
                  if (b !== h || (5 !== b.tag && 6 !== b.tag)) b = null;
                }
              } else g = null;
              if (g === b) return null;
              if ("mouseout" === a || "mouseover" === a) {
                var k = Ve;
                var l = Xe.mouseLeave;
                var m = Xe.mouseEnter;
                var p = "mouse";
              } else if ("pointerout" === a || "pointerover" === a)
                (k = We),
                  (l = Xe.pointerLeave),
                  (m = Xe.pointerEnter),
                  (p = "pointer");
              a = null == g ? f : Pd(g);
              f = null == b ? f : Pd(b);
              l = k.getPooled(l, g, c, d);
              l.type = p + "leave";
              l.target = a;
              l.relatedTarget = f;
              c = k.getPooled(m, b, c, d);
              c.type = p + "enter";
              c.target = f;
              c.relatedTarget = a;
              d = g;
              p = b;
              if (d && p)
                a: {
                  k = d;
                  m = p;
                  g = 0;
                  for (a = k; a; a = Rd(a)) g++;
                  a = 0;
                  for (b = m; b; b = Rd(b)) a++;
                  for (; 0 < g - a; ) (k = Rd(k)), g--;
                  for (; 0 < a - g; ) (m = Rd(m)), a--;
                  for (; g--; ) {
                    if (k === m || k === m.alternate) break a;
                    k = Rd(k);
                    m = Rd(m);
                  }
                  k = null;
                }
              else k = null;
              m = k;
              for (k = []; d && d !== m; ) {
                g = d.alternate;
                if (null !== g && g === m) break;
                k.push(d);
                d = Rd(d);
              }
              for (d = []; p && p !== m; ) {
                g = p.alternate;
                if (null !== g && g === m) break;
                d.push(p);
                p = Rd(p);
              }
              for (p = 0; p < k.length; p++) Vd(k[p], "bubbled", l);
              for (p = d.length; 0 < p--; ) Vd(d[p], "captured", c);
              return 0 === (e & 64) ? [l] : [l, c];
            },
          };
        function Ze(a, b) {
          return (
            (a === b && (0 !== a || 1 / a === 1 / b)) || (a !== a && b !== b)
          );
        }
        var $e = "function" === typeof Object.is ? Object.is : Ze,
          af = Object.prototype.hasOwnProperty;
        function bf(a, b) {
          if ($e(a, b)) return !0;
          if (
            "object" !== typeof a ||
            null === a ||
            "object" !== typeof b ||
            null === b
          )
            return !1;
          var c = Object.keys(a),
            d = Object.keys(b);
          if (c.length !== d.length) return !1;
          for (d = 0; d < c.length; d++)
            if (!af.call(b, c[d]) || !$e(a[c[d]], b[c[d]])) return !1;
          return !0;
        }
        var cf =
            ya && "documentMode" in document && 11 >= document.documentMode,
          df = {
            select: {
              phasedRegistrationNames: {
                bubbled: "onSelect",
                captured: "onSelectCapture",
              },
              dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(
                " "
              ),
            },
          },
          ef = null,
          ff = null,
          gf = null,
          hf = !1;
        function jf(a, b) {
          var c =
            b.window === b
              ? b.document
              : 9 === b.nodeType
              ? b
              : b.ownerDocument;
          if (hf || null == ef || ef !== td(c)) return null;
          c = ef;
          "selectionStart" in c && yd(c)
            ? (c = { start: c.selectionStart, end: c.selectionEnd })
            : ((c = (
                (c.ownerDocument && c.ownerDocument.defaultView) ||
                window
              ).getSelection()),
              (c = {
                anchorNode: c.anchorNode,
                anchorOffset: c.anchorOffset,
                focusNode: c.focusNode,
                focusOffset: c.focusOffset,
              }));
          return gf && bf(gf, c)
            ? null
            : ((gf = c),
              (a = G.getPooled(df.select, ff, a, b)),
              (a.type = "select"),
              (a.target = ef),
              Xd(a),
              a);
        }
        var kf = {
            eventTypes: df,
            extractEvents: function (a, b, c, d, e, f) {
              e =
                f ||
                (d.window === d
                  ? d.document
                  : 9 === d.nodeType
                  ? d
                  : d.ownerDocument);
              if (!(f = !e)) {
                a: {
                  e = cc(e);
                  f = wa.onSelect;
                  for (var g = 0; g < f.length; g++)
                    if (!e.has(f[g])) {
                      e = !1;
                      break a;
                    }
                  e = !0;
                }
                f = !e;
              }
              if (f) return null;
              e = b ? Pd(b) : window;
              switch (a) {
                case "focus":
                  if (xe(e) || "true" === e.contentEditable)
                    (ef = e), (ff = b), (gf = null);
                  break;
                case "blur":
                  gf = ff = ef = null;
                  break;
                case "mousedown":
                  hf = !0;
                  break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                  return (hf = !1), jf(c, d);
                case "selectionchange":
                  if (cf) break;
                case "keydown":
                case "keyup":
                  return jf(c, d);
              }
              return null;
            },
          },
          lf = G.extend({
            animationName: null,
            elapsedTime: null,
            pseudoElement: null,
          }),
          mf = G.extend({
            clipboardData: function (a) {
              return "clipboardData" in a
                ? a.clipboardData
                : window.clipboardData;
            },
          }),
          nf = Ne.extend({ relatedTarget: null });
        function of(a) {
          var b = a.keyCode;
          "charCode" in a
            ? ((a = a.charCode), 0 === a && 13 === b && (a = 13))
            : (a = b);
          10 === a && (a = 13);
          return 32 <= a || 13 === a ? a : 0;
        }
        var pf = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
          },
          qf = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
          },
          rf = Ne.extend({
            key: function (a) {
              if (a.key) {
                var b = pf[a.key] || a.key;
                if ("Unidentified" !== b) return b;
              }
              return "keypress" === a.type
                ? ((a = of(a)), 13 === a ? "Enter" : String.fromCharCode(a))
                : "keydown" === a.type || "keyup" === a.type
                ? qf[a.keyCode] || "Unidentified"
                : "";
            },
            location: null,
            ctrlKey: null,
            shiftKey: null,
            altKey: null,
            metaKey: null,
            repeat: null,
            locale: null,
            getModifierState: Qe,
            charCode: function (a) {
              return "keypress" === a.type ? of(a) : 0;
            },
            keyCode: function (a) {
              return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
            },
            which: function (a) {
              return "keypress" === a.type
                ? of(a)
                : "keydown" === a.type || "keyup" === a.type
                ? a.keyCode
                : 0;
            },
          }),
          sf = Ve.extend({ dataTransfer: null }),
          tf = Ne.extend({
            touches: null,
            targetTouches: null,
            changedTouches: null,
            altKey: null,
            metaKey: null,
            ctrlKey: null,
            shiftKey: null,
            getModifierState: Qe,
          }),
          uf = G.extend({
            propertyName: null,
            elapsedTime: null,
            pseudoElement: null,
          }),
          vf = Ve.extend({
            deltaX: function (a) {
              return "deltaX" in a
                ? a.deltaX
                : "wheelDeltaX" in a
                ? -a.wheelDeltaX
                : 0;
            },
            deltaY: function (a) {
              return "deltaY" in a
                ? a.deltaY
                : "wheelDeltaY" in a
                ? -a.wheelDeltaY
                : "wheelDelta" in a
                ? -a.wheelDelta
                : 0;
            },
            deltaZ: null,
            deltaMode: null,
          }),
          wf = {
            eventTypes: Wc,
            extractEvents: function (a, b, c, d) {
              var e = Yc.get(a);
              if (!e) return null;
              switch (a) {
                case "keypress":
                  if (0 === of(c)) return null;
                case "keydown":
                case "keyup":
                  a = rf;
                  break;
                case "blur":
                case "focus":
                  a = nf;
                  break;
                case "click":
                  if (2 === c.button) return null;
                case "auxclick":
                case "dblclick":
                case "mousedown":
                case "mousemove":
                case "mouseup":
                case "mouseout":
                case "mouseover":
                case "contextmenu":
                  a = Ve;
                  break;
                case "drag":
                case "dragend":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "dragstart":
                case "drop":
                  a = sf;
                  break;
                case "touchcancel":
                case "touchend":
                case "touchmove":
                case "touchstart":
                  a = tf;
                  break;
                case Xb:
                case Yb:
                case Zb:
                  a = lf;
                  break;
                case $b:
                  a = uf;
                  break;
                case "scroll":
                  a = Ne;
                  break;
                case "wheel":
                  a = vf;
                  break;
                case "copy":
                case "cut":
                case "paste":
                  a = mf;
                  break;
                case "gotpointercapture":
                case "lostpointercapture":
                case "pointercancel":
                case "pointerdown":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "pointerup":
                  a = We;
                  break;
                default:
                  a = G;
              }
              b = a.getPooled(e, b, c, d);
              Xd(b);
              return b;
            },
          };
        if (pa) throw Error(u(101));
        pa = Array.prototype.slice.call(
          "ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(
            " "
          )
        );
        ra();
        var xf = Nc;
        la = Qd;
        ma = xf;
        na = Pd;
        xa({
          SimpleEventPlugin: wf,
          EnterLeaveEventPlugin: Ye,
          ChangeEventPlugin: Me,
          SelectEventPlugin: kf,
          BeforeInputEventPlugin: ve,
        });
        var yf = [],
          zf = -1;
        function H(a) {
          0 > zf || ((a.current = yf[zf]), (yf[zf] = null), zf--);
        }
        function I(a, b) {
          zf++;
          yf[zf] = a.current;
          a.current = b;
        }
        var Af = {},
          J = { current: Af },
          K = { current: !1 },
          Bf = Af;
        function Cf(a, b) {
          var c = a.type.contextTypes;
          if (!c) return Af;
          var d = a.stateNode;
          if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
            return d.__reactInternalMemoizedMaskedChildContext;
          var e = {},
            f;
          for (f in c) e[f] = b[f];
          d &&
            ((a = a.stateNode),
            (a.__reactInternalMemoizedUnmaskedChildContext = b),
            (a.__reactInternalMemoizedMaskedChildContext = e));
          return e;
        }
        function L(a) {
          a = a.childContextTypes;
          return null !== a && void 0 !== a;
        }
        function Df() {
          H(K);
          H(J);
        }
        function Ef(a, b, c) {
          if (J.current !== Af) throw Error(u(168));
          I(J, b);
          I(K, c);
        }
        function Ff(a, b, c) {
          var d = a.stateNode;
          a = b.childContextTypes;
          if ("function" !== typeof d.getChildContext) return c;
          d = d.getChildContext();
          for (var e in d)
            if (!(e in a)) throw Error(u(108, pb(b) || "Unknown", e));
          return n({}, c, {}, d);
        }
        function Gf(a) {
          a =
            ((a = a.stateNode) &&
              a.__reactInternalMemoizedMergedChildContext) ||
            Af;
          Bf = J.current;
          I(J, a);
          I(K, K.current);
          return !0;
        }
        function Hf(a, b, c) {
          var d = a.stateNode;
          if (!d) throw Error(u(169));
          c
            ? ((a = Ff(a, b, Bf)),
              (d.__reactInternalMemoizedMergedChildContext = a),
              H(K),
              H(J),
              I(J, a))
            : H(K);
          I(K, c);
        }
        var If = r.unstable_runWithPriority,
          Jf = r.unstable_scheduleCallback,
          Kf = r.unstable_cancelCallback,
          Lf = r.unstable_requestPaint,
          Mf = r.unstable_now,
          Nf = r.unstable_getCurrentPriorityLevel,
          Of = r.unstable_ImmediatePriority,
          Pf = r.unstable_UserBlockingPriority,
          Qf = r.unstable_NormalPriority,
          Rf = r.unstable_LowPriority,
          Sf = r.unstable_IdlePriority,
          Tf = {},
          Uf = r.unstable_shouldYield,
          Vf = void 0 !== Lf ? Lf : function () {},
          Wf = null,
          Xf = null,
          Yf = !1,
          Zf = Mf(),
          $f =
            1e4 > Zf
              ? Mf
              : function () {
                  return Mf() - Zf;
                };
        function ag() {
          switch (Nf()) {
            case Of:
              return 99;
            case Pf:
              return 98;
            case Qf:
              return 97;
            case Rf:
              return 96;
            case Sf:
              return 95;
            default:
              throw Error(u(332));
          }
        }
        function bg(a) {
          switch (a) {
            case 99:
              return Of;
            case 98:
              return Pf;
            case 97:
              return Qf;
            case 96:
              return Rf;
            case 95:
              return Sf;
            default:
              throw Error(u(332));
          }
        }
        function cg(a, b) {
          a = bg(a);
          return If(a, b);
        }
        function dg(a, b, c) {
          a = bg(a);
          return Jf(a, b, c);
        }
        function eg(a) {
          null === Wf ? ((Wf = [a]), (Xf = Jf(Of, fg))) : Wf.push(a);
          return Tf;
        }
        function gg() {
          if (null !== Xf) {
            var a = Xf;
            Xf = null;
            Kf(a);
          }
          fg();
        }
        function fg() {
          if (!Yf && null !== Wf) {
            Yf = !0;
            var a = 0;
            try {
              var b = Wf;
              cg(99, function () {
                for (; a < b.length; a++) {
                  var c = b[a];
                  do c = c(!0);
                  while (null !== c);
                }
              });
              Wf = null;
            } catch (c) {
              throw (null !== Wf && (Wf = Wf.slice(a + 1)), Jf(Of, gg), c);
            } finally {
              Yf = !1;
            }
          }
        }
        function hg(a, b, c) {
          c /= 10;
          return 1073741821 - ((((1073741821 - a + b / 10) / c) | 0) + 1) * c;
        }
        function ig(a, b) {
          if (a && a.defaultProps) {
            b = n({}, b);
            a = a.defaultProps;
            for (var c in a) void 0 === b[c] && (b[c] = a[c]);
          }
          return b;
        }
        var jg = { current: null },
          kg = null,
          lg = null,
          mg = null;
        function ng() {
          mg = lg = kg = null;
        }
        function og(a) {
          var b = jg.current;
          H(jg);
          a.type._context._currentValue = b;
        }
        function pg(a, b) {
          for (; null !== a; ) {
            var c = a.alternate;
            if (a.childExpirationTime < b)
              (a.childExpirationTime = b),
                null !== c &&
                  c.childExpirationTime < b &&
                  (c.childExpirationTime = b);
            else if (null !== c && c.childExpirationTime < b)
              c.childExpirationTime = b;
            else break;
            a = a.return;
          }
        }
        function qg(a, b) {
          kg = a;
          mg = lg = null;
          a = a.dependencies;
          null !== a &&
            null !== a.firstContext &&
            (a.expirationTime >= b && (rg = !0), (a.firstContext = null));
        }
        function sg(a, b) {
          if (mg !== a && !1 !== b && 0 !== b) {
            if ("number" !== typeof b || 1073741823 === b)
              (mg = a), (b = 1073741823);
            b = { context: a, observedBits: b, next: null };
            if (null === lg) {
              if (null === kg) throw Error(u(308));
              lg = b;
              kg.dependencies = {
                expirationTime: 0,
                firstContext: b,
                responders: null,
              };
            } else lg = lg.next = b;
          }
          return a._currentValue;
        }
        var tg = !1;
        function ug(a) {
          a.updateQueue = {
            baseState: a.memoizedState,
            baseQueue: null,
            shared: { pending: null },
            effects: null,
          };
        }
        function vg(a, b) {
          a = a.updateQueue;
          b.updateQueue === a &&
            (b.updateQueue = {
              baseState: a.baseState,
              baseQueue: a.baseQueue,
              shared: a.shared,
              effects: a.effects,
            });
        }
        function wg(a, b) {
          a = {
            expirationTime: a,
            suspenseConfig: b,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
          };
          return (a.next = a);
        }
        function xg(a, b) {
          a = a.updateQueue;
          if (null !== a) {
            a = a.shared;
            var c = a.pending;
            null === c ? (b.next = b) : ((b.next = c.next), (c.next = b));
            a.pending = b;
          }
        }
        function yg(a, b) {
          var c = a.alternate;
          null !== c && vg(c, a);
          a = a.updateQueue;
          c = a.baseQueue;
          null === c
            ? ((a.baseQueue = b.next = b), (b.next = b))
            : ((b.next = c.next), (c.next = b));
        }
        function zg(a, b, c, d) {
          var e = a.updateQueue;
          tg = !1;
          var f = e.baseQueue,
            g = e.shared.pending;
          if (null !== g) {
            if (null !== f) {
              var h = f.next;
              f.next = g.next;
              g.next = h;
            }
            f = g;
            e.shared.pending = null;
            h = a.alternate;
            null !== h &&
              ((h = h.updateQueue), null !== h && (h.baseQueue = g));
          }
          if (null !== f) {
            h = f.next;
            var k = e.baseState,
              l = 0,
              m = null,
              p = null,
              x = null;
            if (null !== h) {
              var z = h;
              do {
                g = z.expirationTime;
                if (g < d) {
                  var ca = {
                    expirationTime: z.expirationTime,
                    suspenseConfig: z.suspenseConfig,
                    tag: z.tag,
                    payload: z.payload,
                    callback: z.callback,
                    next: null,
                  };
                  null === x ? ((p = x = ca), (m = k)) : (x = x.next = ca);
                  g > l && (l = g);
                } else {
                  null !== x &&
                    (x = x.next = {
                      expirationTime: 1073741823,
                      suspenseConfig: z.suspenseConfig,
                      tag: z.tag,
                      payload: z.payload,
                      callback: z.callback,
                      next: null,
                    });
                  Ag(g, z.suspenseConfig);
                  a: {
                    var D = a,
                      t = z;
                    g = b;
                    ca = c;
                    switch (t.tag) {
                      case 1:
                        D = t.payload;
                        if ("function" === typeof D) {
                          k = D.call(ca, k, g);
                          break a;
                        }
                        k = D;
                        break a;
                      case 3:
                        D.effectTag = (D.effectTag & -4097) | 64;
                      case 0:
                        D = t.payload;
                        g = "function" === typeof D ? D.call(ca, k, g) : D;
                        if (null === g || void 0 === g) break a;
                        k = n({}, k, g);
                        break a;
                      case 2:
                        tg = !0;
                    }
                  }
                  null !== z.callback &&
                    ((a.effectTag |= 32),
                    (g = e.effects),
                    null === g ? (e.effects = [z]) : g.push(z));
                }
                z = z.next;
                if (null === z || z === h)
                  if (((g = e.shared.pending), null === g)) break;
                  else
                    (z = f.next = g.next),
                      (g.next = h),
                      (e.baseQueue = f = g),
                      (e.shared.pending = null);
              } while (1);
            }
            null === x ? (m = k) : (x.next = p);
            e.baseState = m;
            e.baseQueue = x;
            Bg(l);
            a.expirationTime = l;
            a.memoizedState = k;
          }
        }
        function Cg(a, b, c) {
          a = b.effects;
          b.effects = null;
          if (null !== a)
            for (b = 0; b < a.length; b++) {
              var d = a[b],
                e = d.callback;
              if (null !== e) {
                d.callback = null;
                d = e;
                e = c;
                if ("function" !== typeof d) throw Error(u(191, d));
                d.call(e);
              }
            }
        }
        var Dg = Wa.ReactCurrentBatchConfig,
          Eg = new aa.Component().refs;
        function Fg(a, b, c, d) {
          b = a.memoizedState;
          c = c(d, b);
          c = null === c || void 0 === c ? b : n({}, b, c);
          a.memoizedState = c;
          0 === a.expirationTime && (a.updateQueue.baseState = c);
        }
        var Jg = {
          isMounted: function (a) {
            return (a = a._reactInternalFiber) ? dc(a) === a : !1;
          },
          enqueueSetState: function (a, b, c) {
            a = a._reactInternalFiber;
            var d = Gg(),
              e = Dg.suspense;
            d = Hg(d, a, e);
            e = wg(d, e);
            e.payload = b;
            void 0 !== c && null !== c && (e.callback = c);
            xg(a, e);
            Ig(a, d);
          },
          enqueueReplaceState: function (a, b, c) {
            a = a._reactInternalFiber;
            var d = Gg(),
              e = Dg.suspense;
            d = Hg(d, a, e);
            e = wg(d, e);
            e.tag = 1;
            e.payload = b;
            void 0 !== c && null !== c && (e.callback = c);
            xg(a, e);
            Ig(a, d);
          },
          enqueueForceUpdate: function (a, b) {
            a = a._reactInternalFiber;
            var c = Gg(),
              d = Dg.suspense;
            c = Hg(c, a, d);
            d = wg(c, d);
            d.tag = 2;
            void 0 !== b && null !== b && (d.callback = b);
            xg(a, d);
            Ig(a, c);
          },
        };
        function Kg(a, b, c, d, e, f, g) {
          a = a.stateNode;
          return "function" === typeof a.shouldComponentUpdate
            ? a.shouldComponentUpdate(d, f, g)
            : b.prototype && b.prototype.isPureReactComponent
            ? !bf(c, d) || !bf(e, f)
            : !0;
        }
        function Lg(a, b, c) {
          var d = !1,
            e = Af;
          var f = b.contextType;
          "object" === typeof f && null !== f
            ? (f = sg(f))
            : ((e = L(b) ? Bf : J.current),
              (d = b.contextTypes),
              (f = (d = null !== d && void 0 !== d) ? Cf(a, e) : Af));
          b = new b(c, f);
          a.memoizedState =
            null !== b.state && void 0 !== b.state ? b.state : null;
          b.updater = Jg;
          a.stateNode = b;
          b._reactInternalFiber = a;
          d &&
            ((a = a.stateNode),
            (a.__reactInternalMemoizedUnmaskedChildContext = e),
            (a.__reactInternalMemoizedMaskedChildContext = f));
          return b;
        }
        function Mg(a, b, c, d) {
          a = b.state;
          "function" === typeof b.componentWillReceiveProps &&
            b.componentWillReceiveProps(c, d);
          "function" === typeof b.UNSAFE_componentWillReceiveProps &&
            b.UNSAFE_componentWillReceiveProps(c, d);
          b.state !== a && Jg.enqueueReplaceState(b, b.state, null);
        }
        function Ng(a, b, c, d) {
          var e = a.stateNode;
          e.props = c;
          e.state = a.memoizedState;
          e.refs = Eg;
          ug(a);
          var f = b.contextType;
          "object" === typeof f && null !== f
            ? (e.context = sg(f))
            : ((f = L(b) ? Bf : J.current), (e.context = Cf(a, f)));
          zg(a, c, e, d);
          e.state = a.memoizedState;
          f = b.getDerivedStateFromProps;
          "function" === typeof f &&
            (Fg(a, b, f, c), (e.state = a.memoizedState));
          "function" === typeof b.getDerivedStateFromProps ||
            "function" === typeof e.getSnapshotBeforeUpdate ||
            ("function" !== typeof e.UNSAFE_componentWillMount &&
              "function" !== typeof e.componentWillMount) ||
            ((b = e.state),
            "function" === typeof e.componentWillMount &&
              e.componentWillMount(),
            "function" === typeof e.UNSAFE_componentWillMount &&
              e.UNSAFE_componentWillMount(),
            b !== e.state && Jg.enqueueReplaceState(e, e.state, null),
            zg(a, c, e, d),
            (e.state = a.memoizedState));
          "function" === typeof e.componentDidMount && (a.effectTag |= 4);
        }
        var Og = Array.isArray;
        function Pg(a, b, c) {
          a = c.ref;
          if (null !== a && "function" !== typeof a && "object" !== typeof a) {
            if (c._owner) {
              c = c._owner;
              if (c) {
                if (1 !== c.tag) throw Error(u(309));
                var d = c.stateNode;
              }
              if (!d) throw Error(u(147, a));
              var e = "" + a;
              if (
                null !== b &&
                null !== b.ref &&
                "function" === typeof b.ref &&
                b.ref._stringRef === e
              )
                return b.ref;
              b = function (a) {
                var b = d.refs;
                b === Eg && (b = d.refs = {});
                null === a ? delete b[e] : (b[e] = a);
              };
              b._stringRef = e;
              return b;
            }
            if ("string" !== typeof a) throw Error(u(284));
            if (!c._owner) throw Error(u(290, a));
          }
          return a;
        }
        function Qg(a, b) {
          if ("textarea" !== a.type)
            throw Error(
              u(
                31,
                "[object Object]" === Object.prototype.toString.call(b)
                  ? "object with keys {" + Object.keys(b).join(", ") + "}"
                  : b,
                ""
              )
            );
        }
        function Rg(a) {
          function b(b, c) {
            if (a) {
              var d = b.lastEffect;
              null !== d
                ? ((d.nextEffect = c), (b.lastEffect = c))
                : (b.firstEffect = b.lastEffect = c);
              c.nextEffect = null;
              c.effectTag = 8;
            }
          }
          function c(c, d) {
            if (!a) return null;
            for (; null !== d; ) b(c, d), (d = d.sibling);
            return null;
          }
          function d(a, b) {
            for (a = new Map(); null !== b; )
              null !== b.key ? a.set(b.key, b) : a.set(b.index, b),
                (b = b.sibling);
            return a;
          }
          function e(a, b) {
            a = Sg(a, b);
            a.index = 0;
            a.sibling = null;
            return a;
          }
          function f(b, c, d) {
            b.index = d;
            if (!a) return c;
            d = b.alternate;
            if (null !== d)
              return (d = d.index), d < c ? ((b.effectTag = 2), c) : d;
            b.effectTag = 2;
            return c;
          }
          function g(b) {
            a && null === b.alternate && (b.effectTag = 2);
            return b;
          }
          function h(a, b, c, d) {
            if (null === b || 6 !== b.tag)
              return (b = Tg(c, a.mode, d)), (b.return = a), b;
            b = e(b, c);
            b.return = a;
            return b;
          }
          function k(a, b, c, d) {
            if (null !== b && b.elementType === c.type)
              return (
                (d = e(b, c.props)), (d.ref = Pg(a, b, c)), (d.return = a), d
              );
            d = Ug(c.type, c.key, c.props, null, a.mode, d);
            d.ref = Pg(a, b, c);
            d.return = a;
            return d;
          }
          function l(a, b, c, d) {
            if (
              null === b ||
              4 !== b.tag ||
              b.stateNode.containerInfo !== c.containerInfo ||
              b.stateNode.implementation !== c.implementation
            )
              return (b = Vg(c, a.mode, d)), (b.return = a), b;
            b = e(b, c.children || []);
            b.return = a;
            return b;
          }
          function m(a, b, c, d, f) {
            if (null === b || 7 !== b.tag)
              return (b = Wg(c, a.mode, d, f)), (b.return = a), b;
            b = e(b, c);
            b.return = a;
            return b;
          }
          function p(a, b, c) {
            if ("string" === typeof b || "number" === typeof b)
              return (b = Tg("" + b, a.mode, c)), (b.return = a), b;
            if ("object" === typeof b && null !== b) {
              switch (b.$$typeof) {
                case Za:
                  return (
                    (c = Ug(b.type, b.key, b.props, null, a.mode, c)),
                    (c.ref = Pg(a, null, b)),
                    (c.return = a),
                    c
                  );
                case $a:
                  return (b = Vg(b, a.mode, c)), (b.return = a), b;
              }
              if (Og(b) || nb(b))
                return (b = Wg(b, a.mode, c, null)), (b.return = a), b;
              Qg(a, b);
            }
            return null;
          }
          function x(a, b, c, d) {
            var e = null !== b ? b.key : null;
            if ("string" === typeof c || "number" === typeof c)
              return null !== e ? null : h(a, b, "" + c, d);
            if ("object" === typeof c && null !== c) {
              switch (c.$$typeof) {
                case Za:
                  return c.key === e
                    ? c.type === ab
                      ? m(a, b, c.props.children, d, e)
                      : k(a, b, c, d)
                    : null;
                case $a:
                  return c.key === e ? l(a, b, c, d) : null;
              }
              if (Og(c) || nb(c))
                return null !== e ? null : m(a, b, c, d, null);
              Qg(a, c);
            }
            return null;
          }
          function z(a, b, c, d, e) {
            if ("string" === typeof d || "number" === typeof d)
              return (a = a.get(c) || null), h(b, a, "" + d, e);
            if ("object" === typeof d && null !== d) {
              switch (d.$$typeof) {
                case Za:
                  return (
                    (a = a.get(null === d.key ? c : d.key) || null),
                    d.type === ab
                      ? m(b, a, d.props.children, e, d.key)
                      : k(b, a, d, e)
                  );
                case $a:
                  return (
                    (a = a.get(null === d.key ? c : d.key) || null),
                    l(b, a, d, e)
                  );
              }
              if (Og(d) || nb(d))
                return (a = a.get(c) || null), m(b, a, d, e, null);
              Qg(b, d);
            }
            return null;
          }
          function ca(e, g, h, k) {
            for (
              var l = null, t = null, m = g, y = (g = 0), A = null;
              null !== m && y < h.length;
              y++
            ) {
              m.index > y ? ((A = m), (m = null)) : (A = m.sibling);
              var q = x(e, m, h[y], k);
              if (null === q) {
                null === m && (m = A);
                break;
              }
              a && m && null === q.alternate && b(e, m);
              g = f(q, g, y);
              null === t ? (l = q) : (t.sibling = q);
              t = q;
              m = A;
            }
            if (y === h.length) return c(e, m), l;
            if (null === m) {
              for (; y < h.length; y++)
                (m = p(e, h[y], k)),
                  null !== m &&
                    ((g = f(m, g, y)),
                    null === t ? (l = m) : (t.sibling = m),
                    (t = m));
              return l;
            }
            for (m = d(e, m); y < h.length; y++)
              (A = z(m, e, y, h[y], k)),
                null !== A &&
                  (a &&
                    null !== A.alternate &&
                    m.delete(null === A.key ? y : A.key),
                  (g = f(A, g, y)),
                  null === t ? (l = A) : (t.sibling = A),
                  (t = A));
            a &&
              m.forEach(function (a) {
                return b(e, a);
              });
            return l;
          }
          function D(e, g, h, l) {
            var k = nb(h);
            if ("function" !== typeof k) throw Error(u(150));
            h = k.call(h);
            if (null == h) throw Error(u(151));
            for (
              var m = (k = null), t = g, y = (g = 0), A = null, q = h.next();
              null !== t && !q.done;
              y++, q = h.next()
            ) {
              t.index > y ? ((A = t), (t = null)) : (A = t.sibling);
              var D = x(e, t, q.value, l);
              if (null === D) {
                null === t && (t = A);
                break;
              }
              a && t && null === D.alternate && b(e, t);
              g = f(D, g, y);
              null === m ? (k = D) : (m.sibling = D);
              m = D;
              t = A;
            }
            if (q.done) return c(e, t), k;
            if (null === t) {
              for (; !q.done; y++, q = h.next())
                (q = p(e, q.value, l)),
                  null !== q &&
                    ((g = f(q, g, y)),
                    null === m ? (k = q) : (m.sibling = q),
                    (m = q));
              return k;
            }
            for (t = d(e, t); !q.done; y++, q = h.next())
              (q = z(t, e, y, q.value, l)),
                null !== q &&
                  (a &&
                    null !== q.alternate &&
                    t.delete(null === q.key ? y : q.key),
                  (g = f(q, g, y)),
                  null === m ? (k = q) : (m.sibling = q),
                  (m = q));
            a &&
              t.forEach(function (a) {
                return b(e, a);
              });
            return k;
          }
          return function (a, d, f, h) {
            var k =
              "object" === typeof f &&
              null !== f &&
              f.type === ab &&
              null === f.key;
            k && (f = f.props.children);
            var l = "object" === typeof f && null !== f;
            if (l)
              switch (f.$$typeof) {
                case Za:
                  a: {
                    l = f.key;
                    for (k = d; null !== k; ) {
                      if (k.key === l) {
                        switch (k.tag) {
                          case 7:
                            if (f.type === ab) {
                              c(a, k.sibling);
                              d = e(k, f.props.children);
                              d.return = a;
                              a = d;
                              break a;
                            }
                            break;
                          default:
                            if (k.elementType === f.type) {
                              c(a, k.sibling);
                              d = e(k, f.props);
                              d.ref = Pg(a, k, f);
                              d.return = a;
                              a = d;
                              break a;
                            }
                        }
                        c(a, k);
                        break;
                      } else b(a, k);
                      k = k.sibling;
                    }
                    f.type === ab
                      ? ((d = Wg(f.props.children, a.mode, h, f.key)),
                        (d.return = a),
                        (a = d))
                      : ((h = Ug(f.type, f.key, f.props, null, a.mode, h)),
                        (h.ref = Pg(a, d, f)),
                        (h.return = a),
                        (a = h));
                  }
                  return g(a);
                case $a:
                  a: {
                    for (k = f.key; null !== d; ) {
                      if (d.key === k)
                        if (
                          4 === d.tag &&
                          d.stateNode.containerInfo === f.containerInfo &&
                          d.stateNode.implementation === f.implementation
                        ) {
                          c(a, d.sibling);
                          d = e(d, f.children || []);
                          d.return = a;
                          a = d;
                          break a;
                        } else {
                          c(a, d);
                          break;
                        }
                      else b(a, d);
                      d = d.sibling;
                    }
                    d = Vg(f, a.mode, h);
                    d.return = a;
                    a = d;
                  }
                  return g(a);
              }
            if ("string" === typeof f || "number" === typeof f)
              return (
                (f = "" + f),
                null !== d && 6 === d.tag
                  ? (c(a, d.sibling), (d = e(d, f)), (d.return = a), (a = d))
                  : (c(a, d), (d = Tg(f, a.mode, h)), (d.return = a), (a = d)),
                g(a)
              );
            if (Og(f)) return ca(a, d, f, h);
            if (nb(f)) return D(a, d, f, h);
            l && Qg(a, f);
            if ("undefined" === typeof f && !k)
              switch (a.tag) {
                case 1:
                case 0:
                  throw (
                    ((a = a.type),
                    Error(u(152, a.displayName || a.name || "Component")))
                  );
              }
            return c(a, d);
          };
        }
        var Xg = Rg(!0),
          Yg = Rg(!1),
          Zg = {},
          $g = { current: Zg },
          ah = { current: Zg },
          bh = { current: Zg };
        function ch(a) {
          if (a === Zg) throw Error(u(174));
          return a;
        }
        function dh(a, b) {
          I(bh, b);
          I(ah, a);
          I($g, Zg);
          a = b.nodeType;
          switch (a) {
            case 9:
            case 11:
              b = (b = b.documentElement) ? b.namespaceURI : Ob(null, "");
              break;
            default:
              (a = 8 === a ? b.parentNode : b),
                (b = a.namespaceURI || null),
                (a = a.tagName),
                (b = Ob(b, a));
          }
          H($g);
          I($g, b);
        }
        function eh() {
          H($g);
          H(ah);
          H(bh);
        }
        function fh(a) {
          ch(bh.current);
          var b = ch($g.current);
          var c = Ob(b, a.type);
          b !== c && (I(ah, a), I($g, c));
        }
        function gh(a) {
          ah.current === a && (H($g), H(ah));
        }
        var M = { current: 0 };
        function hh(a) {
          for (var b = a; null !== b; ) {
            if (13 === b.tag) {
              var c = b.memoizedState;
              if (
                null !== c &&
                ((c = c.dehydrated),
                null === c || c.data === Bd || c.data === Cd)
              )
                return b;
            } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
              if (0 !== (b.effectTag & 64)) return b;
            } else if (null !== b.child) {
              b.child.return = b;
              b = b.child;
              continue;
            }
            if (b === a) break;
            for (; null === b.sibling; ) {
              if (null === b.return || b.return === a) return null;
              b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
          }
          return null;
        }
        function ih(a, b) {
          return { responder: a, props: b };
        }
        var jh = Wa.ReactCurrentDispatcher,
          kh = Wa.ReactCurrentBatchConfig,
          lh = 0,
          N = null,
          O = null,
          P = null,
          mh = !1;
        function Q() {
          throw Error(u(321));
        }
        function nh(a, b) {
          if (null === b) return !1;
          for (var c = 0; c < b.length && c < a.length; c++)
            if (!$e(a[c], b[c])) return !1;
          return !0;
        }
        function oh(a, b, c, d, e, f) {
          lh = f;
          N = b;
          b.memoizedState = null;
          b.updateQueue = null;
          b.expirationTime = 0;
          jh.current = null === a || null === a.memoizedState ? ph : qh;
          a = c(d, e);
          if (b.expirationTime === lh) {
            f = 0;
            do {
              b.expirationTime = 0;
              if (!(25 > f)) throw Error(u(301));
              f += 1;
              P = O = null;
              b.updateQueue = null;
              jh.current = rh;
              a = c(d, e);
            } while (b.expirationTime === lh);
          }
          jh.current = sh;
          b = null !== O && null !== O.next;
          lh = 0;
          P = O = N = null;
          mh = !1;
          if (b) throw Error(u(300));
          return a;
        }
        function th() {
          var a = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
          };
          null === P ? (N.memoizedState = P = a) : (P = P.next = a);
          return P;
        }
        function uh() {
          if (null === O) {
            var a = N.alternate;
            a = null !== a ? a.memoizedState : null;
          } else a = O.next;
          var b = null === P ? N.memoizedState : P.next;
          if (null !== b) (P = b), (O = a);
          else {
            if (null === a) throw Error(u(310));
            O = a;
            a = {
              memoizedState: O.memoizedState,
              baseState: O.baseState,
              baseQueue: O.baseQueue,
              queue: O.queue,
              next: null,
            };
            null === P ? (N.memoizedState = P = a) : (P = P.next = a);
          }
          return P;
        }
        function vh(a, b) {
          return "function" === typeof b ? b(a) : b;
        }
        function wh(a) {
          var b = uh(),
            c = b.queue;
          if (null === c) throw Error(u(311));
          c.lastRenderedReducer = a;
          var d = O,
            e = d.baseQueue,
            f = c.pending;
          if (null !== f) {
            if (null !== e) {
              var g = e.next;
              e.next = f.next;
              f.next = g;
            }
            d.baseQueue = e = f;
            c.pending = null;
          }
          if (null !== e) {
            e = e.next;
            d = d.baseState;
            var h = (g = f = null),
              k = e;
            do {
              var l = k.expirationTime;
              if (l < lh) {
                var m = {
                  expirationTime: k.expirationTime,
                  suspenseConfig: k.suspenseConfig,
                  action: k.action,
                  eagerReducer: k.eagerReducer,
                  eagerState: k.eagerState,
                  next: null,
                };
                null === h ? ((g = h = m), (f = d)) : (h = h.next = m);
                l > N.expirationTime && ((N.expirationTime = l), Bg(l));
              } else
                null !== h &&
                  (h = h.next = {
                    expirationTime: 1073741823,
                    suspenseConfig: k.suspenseConfig,
                    action: k.action,
                    eagerReducer: k.eagerReducer,
                    eagerState: k.eagerState,
                    next: null,
                  }),
                  Ag(l, k.suspenseConfig),
                  (d = k.eagerReducer === a ? k.eagerState : a(d, k.action));
              k = k.next;
            } while (null !== k && k !== e);
            null === h ? (f = d) : (h.next = g);
            $e(d, b.memoizedState) || (rg = !0);
            b.memoizedState = d;
            b.baseState = f;
            b.baseQueue = h;
            c.lastRenderedState = d;
          }
          return [b.memoizedState, c.dispatch];
        }
        function xh(a) {
          var b = uh(),
            c = b.queue;
          if (null === c) throw Error(u(311));
          c.lastRenderedReducer = a;
          var d = c.dispatch,
            e = c.pending,
            f = b.memoizedState;
          if (null !== e) {
            c.pending = null;
            var g = (e = e.next);
            do (f = a(f, g.action)), (g = g.next);
            while (g !== e);
            $e(f, b.memoizedState) || (rg = !0);
            b.memoizedState = f;
            null === b.baseQueue && (b.baseState = f);
            c.lastRenderedState = f;
          }
          return [f, d];
        }
        function yh(a) {
          var b = th();
          "function" === typeof a && (a = a());
          b.memoizedState = b.baseState = a;
          a = b.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: vh,
            lastRenderedState: a,
          };
          a = a.dispatch = zh.bind(null, N, a);
          return [b.memoizedState, a];
        }
        function Ah(a, b, c, d) {
          a = { tag: a, create: b, destroy: c, deps: d, next: null };
          b = N.updateQueue;
          null === b
            ? ((b = { lastEffect: null }),
              (N.updateQueue = b),
              (b.lastEffect = a.next = a))
            : ((c = b.lastEffect),
              null === c
                ? (b.lastEffect = a.next = a)
                : ((d = c.next),
                  (c.next = a),
                  (a.next = d),
                  (b.lastEffect = a)));
          return a;
        }
        function Bh() {
          return uh().memoizedState;
        }
        function Ch(a, b, c, d) {
          var e = th();
          N.effectTag |= a;
          e.memoizedState = Ah(1 | b, c, void 0, void 0 === d ? null : d);
        }
        function Dh(a, b, c, d) {
          var e = uh();
          d = void 0 === d ? null : d;
          var f = void 0;
          if (null !== O) {
            var g = O.memoizedState;
            f = g.destroy;
            if (null !== d && nh(d, g.deps)) {
              Ah(b, c, f, d);
              return;
            }
          }
          N.effectTag |= a;
          e.memoizedState = Ah(1 | b, c, f, d);
        }
        function Eh(a, b) {
          return Ch(516, 4, a, b);
        }
        function Fh(a, b) {
          return Dh(516, 4, a, b);
        }
        function Gh(a, b) {
          return Dh(4, 2, a, b);
        }
        function Hh(a, b) {
          if ("function" === typeof b)
            return (
              (a = a()),
              b(a),
              function () {
                b(null);
              }
            );
          if (null !== b && void 0 !== b)
            return (
              (a = a()),
              (b.current = a),
              function () {
                b.current = null;
              }
            );
        }
        function Ih(a, b, c) {
          c = null !== c && void 0 !== c ? c.concat([a]) : null;
          return Dh(4, 2, Hh.bind(null, b, a), c);
        }
        function Jh() {}
        function Kh(a, b) {
          th().memoizedState = [a, void 0 === b ? null : b];
          return a;
        }
        function Lh(a, b) {
          var c = uh();
          b = void 0 === b ? null : b;
          var d = c.memoizedState;
          if (null !== d && null !== b && nh(b, d[1])) return d[0];
          c.memoizedState = [a, b];
          return a;
        }
        function Mh(a, b) {
          var c = uh();
          b = void 0 === b ? null : b;
          var d = c.memoizedState;
          if (null !== d && null !== b && nh(b, d[1])) return d[0];
          a = a();
          c.memoizedState = [a, b];
          return a;
        }
        function Nh(a, b, c) {
          var d = ag();
          cg(98 > d ? 98 : d, function () {
            a(!0);
          });
          cg(97 < d ? 97 : d, function () {
            var d = kh.suspense;
            kh.suspense = void 0 === b ? null : b;
            try {
              a(!1), c();
            } finally {
              kh.suspense = d;
            }
          });
        }
        function zh(a, b, c) {
          var d = Gg(),
            e = Dg.suspense;
          d = Hg(d, a, e);
          e = {
            expirationTime: d,
            suspenseConfig: e,
            action: c,
            eagerReducer: null,
            eagerState: null,
            next: null,
          };
          var f = b.pending;
          null === f ? (e.next = e) : ((e.next = f.next), (f.next = e));
          b.pending = e;
          f = a.alternate;
          if (a === N || (null !== f && f === N))
            (mh = !0), (e.expirationTime = lh), (N.expirationTime = lh);
          else {
            if (
              0 === a.expirationTime &&
              (null === f || 0 === f.expirationTime) &&
              ((f = b.lastRenderedReducer), null !== f)
            )
              try {
                var g = b.lastRenderedState,
                  h = f(g, c);
                e.eagerReducer = f;
                e.eagerState = h;
                if ($e(h, g)) return;
              } catch (k) {
              } finally {
              }
            Ig(a, d);
          }
        }
        var sh = {
            readContext: sg,
            useCallback: Q,
            useContext: Q,
            useEffect: Q,
            useImperativeHandle: Q,
            useLayoutEffect: Q,
            useMemo: Q,
            useReducer: Q,
            useRef: Q,
            useState: Q,
            useDebugValue: Q,
            useResponder: Q,
            useDeferredValue: Q,
            useTransition: Q,
          },
          ph = {
            readContext: sg,
            useCallback: Kh,
            useContext: sg,
            useEffect: Eh,
            useImperativeHandle: function (a, b, c) {
              c = null !== c && void 0 !== c ? c.concat([a]) : null;
              return Ch(4, 2, Hh.bind(null, b, a), c);
            },
            useLayoutEffect: function (a, b) {
              return Ch(4, 2, a, b);
            },
            useMemo: function (a, b) {
              var c = th();
              b = void 0 === b ? null : b;
              a = a();
              c.memoizedState = [a, b];
              return a;
            },
            useReducer: function (a, b, c) {
              var d = th();
              b = void 0 !== c ? c(b) : b;
              d.memoizedState = d.baseState = b;
              a = d.queue = {
                pending: null,
                dispatch: null,
                lastRenderedReducer: a,
                lastRenderedState: b,
              };
              a = a.dispatch = zh.bind(null, N, a);
              return [d.memoizedState, a];
            },
            useRef: function (a) {
              var b = th();
              a = { current: a };
              return (b.memoizedState = a);
            },
            useState: yh,
            useDebugValue: Jh,
            useResponder: ih,
            useDeferredValue: function (a, b) {
              var c = yh(a),
                d = c[0],
                e = c[1];
              Eh(
                function () {
                  var c = kh.suspense;
                  kh.suspense = void 0 === b ? null : b;
                  try {
                    e(a);
                  } finally {
                    kh.suspense = c;
                  }
                },
                [a, b]
              );
              return d;
            },
            useTransition: function (a) {
              var b = yh(!1),
                c = b[0];
              b = b[1];
              return [Kh(Nh.bind(null, b, a), [b, a]), c];
            },
          },
          qh = {
            readContext: sg,
            useCallback: Lh,
            useContext: sg,
            useEffect: Fh,
            useImperativeHandle: Ih,
            useLayoutEffect: Gh,
            useMemo: Mh,
            useReducer: wh,
            useRef: Bh,
            useState: function () {
              return wh(vh);
            },
            useDebugValue: Jh,
            useResponder: ih,
            useDeferredValue: function (a, b) {
              var c = wh(vh),
                d = c[0],
                e = c[1];
              Fh(
                function () {
                  var c = kh.suspense;
                  kh.suspense = void 0 === b ? null : b;
                  try {
                    e(a);
                  } finally {
                    kh.suspense = c;
                  }
                },
                [a, b]
              );
              return d;
            },
            useTransition: function (a) {
              var b = wh(vh),
                c = b[0];
              b = b[1];
              return [Lh(Nh.bind(null, b, a), [b, a]), c];
            },
          },
          rh = {
            readContext: sg,
            useCallback: Lh,
            useContext: sg,
            useEffect: Fh,
            useImperativeHandle: Ih,
            useLayoutEffect: Gh,
            useMemo: Mh,
            useReducer: xh,
            useRef: Bh,
            useState: function () {
              return xh(vh);
            },
            useDebugValue: Jh,
            useResponder: ih,
            useDeferredValue: function (a, b) {
              var c = xh(vh),
                d = c[0],
                e = c[1];
              Fh(
                function () {
                  var c = kh.suspense;
                  kh.suspense = void 0 === b ? null : b;
                  try {
                    e(a);
                  } finally {
                    kh.suspense = c;
                  }
                },
                [a, b]
              );
              return d;
            },
            useTransition: function (a) {
              var b = xh(vh),
                c = b[0];
              b = b[1];
              return [Lh(Nh.bind(null, b, a), [b, a]), c];
            },
          },
          Oh = null,
          Ph = null,
          Qh = !1;
        function Rh(a, b) {
          var c = Sh(5, null, null, 0);
          c.elementType = "DELETED";
          c.type = "DELETED";
          c.stateNode = b;
          c.return = a;
          c.effectTag = 8;
          null !== a.lastEffect
            ? ((a.lastEffect.nextEffect = c), (a.lastEffect = c))
            : (a.firstEffect = a.lastEffect = c);
        }
        function Th(a, b) {
          switch (a.tag) {
            case 5:
              var c = a.type;
              b =
                1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase()
                  ? null
                  : b;
              return null !== b ? ((a.stateNode = b), !0) : !1;
            case 6:
              return (
                (b = "" === a.pendingProps || 3 !== b.nodeType ? null : b),
                null !== b ? ((a.stateNode = b), !0) : !1
              );
            case 13:
              return !1;
            default:
              return !1;
          }
        }
        function Uh(a) {
          if (Qh) {
            var b = Ph;
            if (b) {
              var c = b;
              if (!Th(a, b)) {
                b = Jd(c.nextSibling);
                if (!b || !Th(a, b)) {
                  a.effectTag = (a.effectTag & -1025) | 2;
                  Qh = !1;
                  Oh = a;
                  return;
                }
                Rh(Oh, c);
              }
              Oh = a;
              Ph = Jd(b.firstChild);
            } else
              (a.effectTag = (a.effectTag & -1025) | 2), (Qh = !1), (Oh = a);
          }
        }
        function Vh(a) {
          for (
            a = a.return;
            null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;

          )
            a = a.return;
          Oh = a;
        }
        function Wh(a) {
          if (a !== Oh) return !1;
          if (!Qh) return Vh(a), (Qh = !0), !1;
          var b = a.type;
          if (
            5 !== a.tag ||
            ("head" !== b && "body" !== b && !Gd(b, a.memoizedProps))
          )
            for (b = Ph; b; ) Rh(a, b), (b = Jd(b.nextSibling));
          Vh(a);
          if (13 === a.tag) {
            a = a.memoizedState;
            a = null !== a ? a.dehydrated : null;
            if (!a) throw Error(u(317));
            a: {
              a = a.nextSibling;
              for (b = 0; a; ) {
                if (8 === a.nodeType) {
                  var c = a.data;
                  if (c === Ad) {
                    if (0 === b) {
                      Ph = Jd(a.nextSibling);
                      break a;
                    }
                    b--;
                  } else (c !== zd && c !== Cd && c !== Bd) || b++;
                }
                a = a.nextSibling;
              }
              Ph = null;
            }
          } else Ph = Oh ? Jd(a.stateNode.nextSibling) : null;
          return !0;
        }
        function Xh() {
          Ph = Oh = null;
          Qh = !1;
        }
        var Yh = Wa.ReactCurrentOwner,
          rg = !1;
        function R(a, b, c, d) {
          b.child = null === a ? Yg(b, null, c, d) : Xg(b, a.child, c, d);
        }
        function Zh(a, b, c, d, e) {
          c = c.render;
          var f = b.ref;
          qg(b, e);
          d = oh(a, b, c, d, f, e);
          if (null !== a && !rg)
            return (
              (b.updateQueue = a.updateQueue),
              (b.effectTag &= -517),
              a.expirationTime <= e && (a.expirationTime = 0),
              $h(a, b, e)
            );
          b.effectTag |= 1;
          R(a, b, d, e);
          return b.child;
        }
        function ai(a, b, c, d, e, f) {
          if (null === a) {
            var g = c.type;
            if (
              "function" === typeof g &&
              !bi(g) &&
              void 0 === g.defaultProps &&
              null === c.compare &&
              void 0 === c.defaultProps
            )
              return (b.tag = 15), (b.type = g), ci(a, b, g, d, e, f);
            a = Ug(c.type, null, d, null, b.mode, f);
            a.ref = b.ref;
            a.return = b;
            return (b.child = a);
          }
          g = a.child;
          if (
            e < f &&
            ((e = g.memoizedProps),
            (c = c.compare),
            (c = null !== c ? c : bf),
            c(e, d) && a.ref === b.ref)
          )
            return $h(a, b, f);
          b.effectTag |= 1;
          a = Sg(g, d);
          a.ref = b.ref;
          a.return = b;
          return (b.child = a);
        }
        function ci(a, b, c, d, e, f) {
          return null !== a &&
            bf(a.memoizedProps, d) &&
            a.ref === b.ref &&
            ((rg = !1), e < f)
            ? ((b.expirationTime = a.expirationTime), $h(a, b, f))
            : di(a, b, c, d, f);
        }
        function ei(a, b) {
          var c = b.ref;
          if ((null === a && null !== c) || (null !== a && a.ref !== c))
            b.effectTag |= 128;
        }
        function di(a, b, c, d, e) {
          var f = L(c) ? Bf : J.current;
          f = Cf(b, f);
          qg(b, e);
          c = oh(a, b, c, d, f, e);
          if (null !== a && !rg)
            return (
              (b.updateQueue = a.updateQueue),
              (b.effectTag &= -517),
              a.expirationTime <= e && (a.expirationTime = 0),
              $h(a, b, e)
            );
          b.effectTag |= 1;
          R(a, b, c, e);
          return b.child;
        }
        function fi(a, b, c, d, e) {
          if (L(c)) {
            var f = !0;
            Gf(b);
          } else f = !1;
          qg(b, e);
          if (null === b.stateNode)
            null !== a &&
              ((a.alternate = null), (b.alternate = null), (b.effectTag |= 2)),
              Lg(b, c, d),
              Ng(b, c, d, e),
              (d = !0);
          else if (null === a) {
            var g = b.stateNode,
              h = b.memoizedProps;
            g.props = h;
            var k = g.context,
              l = c.contextType;
            "object" === typeof l && null !== l
              ? (l = sg(l))
              : ((l = L(c) ? Bf : J.current), (l = Cf(b, l)));
            var m = c.getDerivedStateFromProps,
              p =
                "function" === typeof m ||
                "function" === typeof g.getSnapshotBeforeUpdate;
            p ||
              ("function" !== typeof g.UNSAFE_componentWillReceiveProps &&
                "function" !== typeof g.componentWillReceiveProps) ||
              ((h !== d || k !== l) && Mg(b, g, d, l));
            tg = !1;
            var x = b.memoizedState;
            g.state = x;
            zg(b, d, g, e);
            k = b.memoizedState;
            h !== d || x !== k || K.current || tg
              ? ("function" === typeof m &&
                  (Fg(b, c, m, d), (k = b.memoizedState)),
                (h = tg || Kg(b, c, h, d, x, k, l))
                  ? (p ||
                      ("function" !== typeof g.UNSAFE_componentWillMount &&
                        "function" !== typeof g.componentWillMount) ||
                      ("function" === typeof g.componentWillMount &&
                        g.componentWillMount(),
                      "function" === typeof g.UNSAFE_componentWillMount &&
                        g.UNSAFE_componentWillMount()),
                    "function" === typeof g.componentDidMount &&
                      (b.effectTag |= 4))
                  : ("function" === typeof g.componentDidMount &&
                      (b.effectTag |= 4),
                    (b.memoizedProps = d),
                    (b.memoizedState = k)),
                (g.props = d),
                (g.state = k),
                (g.context = l),
                (d = h))
              : ("function" === typeof g.componentDidMount &&
                  (b.effectTag |= 4),
                (d = !1));
          } else
            (g = b.stateNode),
              vg(a, b),
              (h = b.memoizedProps),
              (g.props = b.type === b.elementType ? h : ig(b.type, h)),
              (k = g.context),
              (l = c.contextType),
              "object" === typeof l && null !== l
                ? (l = sg(l))
                : ((l = L(c) ? Bf : J.current), (l = Cf(b, l))),
              (m = c.getDerivedStateFromProps),
              (p =
                "function" === typeof m ||
                "function" === typeof g.getSnapshotBeforeUpdate) ||
                ("function" !== typeof g.UNSAFE_componentWillReceiveProps &&
                  "function" !== typeof g.componentWillReceiveProps) ||
                ((h !== d || k !== l) && Mg(b, g, d, l)),
              (tg = !1),
              (k = b.memoizedState),
              (g.state = k),
              zg(b, d, g, e),
              (x = b.memoizedState),
              h !== d || k !== x || K.current || tg
                ? ("function" === typeof m &&
                    (Fg(b, c, m, d), (x = b.memoizedState)),
                  (m = tg || Kg(b, c, h, d, k, x, l))
                    ? (p ||
                        ("function" !== typeof g.UNSAFE_componentWillUpdate &&
                          "function" !== typeof g.componentWillUpdate) ||
                        ("function" === typeof g.componentWillUpdate &&
                          g.componentWillUpdate(d, x, l),
                        "function" === typeof g.UNSAFE_componentWillUpdate &&
                          g.UNSAFE_componentWillUpdate(d, x, l)),
                      "function" === typeof g.componentDidUpdate &&
                        (b.effectTag |= 4),
                      "function" === typeof g.getSnapshotBeforeUpdate &&
                        (b.effectTag |= 256))
                    : ("function" !== typeof g.componentDidUpdate ||
                        (h === a.memoizedProps && k === a.memoizedState) ||
                        (b.effectTag |= 4),
                      "function" !== typeof g.getSnapshotBeforeUpdate ||
                        (h === a.memoizedProps && k === a.memoizedState) ||
                        (b.effectTag |= 256),
                      (b.memoizedProps = d),
                      (b.memoizedState = x)),
                  (g.props = d),
                  (g.state = x),
                  (g.context = l),
                  (d = m))
                : ("function" !== typeof g.componentDidUpdate ||
                    (h === a.memoizedProps && k === a.memoizedState) ||
                    (b.effectTag |= 4),
                  "function" !== typeof g.getSnapshotBeforeUpdate ||
                    (h === a.memoizedProps && k === a.memoizedState) ||
                    (b.effectTag |= 256),
                  (d = !1));
          return gi(a, b, c, d, f, e);
        }
        function gi(a, b, c, d, e, f) {
          ei(a, b);
          var g = 0 !== (b.effectTag & 64);
          if (!d && !g) return e && Hf(b, c, !1), $h(a, b, f);
          d = b.stateNode;
          Yh.current = b;
          var h =
            g && "function" !== typeof c.getDerivedStateFromError
              ? null
              : d.render();
          b.effectTag |= 1;
          null !== a && g
            ? ((b.child = Xg(b, a.child, null, f)),
              (b.child = Xg(b, null, h, f)))
            : R(a, b, h, f);
          b.memoizedState = d.state;
          e && Hf(b, c, !0);
          return b.child;
        }
        function hi(a) {
          var b = a.stateNode;
          b.pendingContext
            ? Ef(a, b.pendingContext, b.pendingContext !== b.context)
            : b.context && Ef(a, b.context, !1);
          dh(a, b.containerInfo);
        }
        var ii = { dehydrated: null, retryTime: 0 };
        function ji(a, b, c) {
          var d = b.mode,
            e = b.pendingProps,
            f = M.current,
            g = !1,
            h;
          (h = 0 !== (b.effectTag & 64)) ||
            (h = 0 !== (f & 2) && (null === a || null !== a.memoizedState));
          h
            ? ((g = !0), (b.effectTag &= -65))
            : (null !== a && null === a.memoizedState) ||
              void 0 === e.fallback ||
              !0 === e.unstable_avoidThisFallback ||
              (f |= 1);
          I(M, f & 1);
          if (null === a) {
            void 0 !== e.fallback && Uh(b);
            if (g) {
              g = e.fallback;
              e = Wg(null, d, 0, null);
              e.return = b;
              if (0 === (b.mode & 2))
                for (
                  a = null !== b.memoizedState ? b.child.child : b.child,
                    e.child = a;
                  null !== a;

                )
                  (a.return = e), (a = a.sibling);
              c = Wg(g, d, c, null);
              c.return = b;
              e.sibling = c;
              b.memoizedState = ii;
              b.child = e;
              return c;
            }
            d = e.children;
            b.memoizedState = null;
            return (b.child = Yg(b, null, d, c));
          }
          if (null !== a.memoizedState) {
            a = a.child;
            d = a.sibling;
            if (g) {
              e = e.fallback;
              c = Sg(a, a.pendingProps);
              c.return = b;
              if (
                0 === (b.mode & 2) &&
                ((g = null !== b.memoizedState ? b.child.child : b.child),
                g !== a.child)
              )
                for (c.child = g; null !== g; ) (g.return = c), (g = g.sibling);
              d = Sg(d, e);
              d.return = b;
              c.sibling = d;
              c.childExpirationTime = 0;
              b.memoizedState = ii;
              b.child = c;
              return d;
            }
            c = Xg(b, a.child, e.children, c);
            b.memoizedState = null;
            return (b.child = c);
          }
          a = a.child;
          if (g) {
            g = e.fallback;
            e = Wg(null, d, 0, null);
            e.return = b;
            e.child = a;
            null !== a && (a.return = e);
            if (0 === (b.mode & 2))
              for (
                a = null !== b.memoizedState ? b.child.child : b.child,
                  e.child = a;
                null !== a;

              )
                (a.return = e), (a = a.sibling);
            c = Wg(g, d, c, null);
            c.return = b;
            e.sibling = c;
            c.effectTag |= 2;
            e.childExpirationTime = 0;
            b.memoizedState = ii;
            b.child = e;
            return c;
          }
          b.memoizedState = null;
          return (b.child = Xg(b, a, e.children, c));
        }
        function ki(a, b) {
          a.expirationTime < b && (a.expirationTime = b);
          var c = a.alternate;
          null !== c && c.expirationTime < b && (c.expirationTime = b);
          pg(a.return, b);
        }
        function li(a, b, c, d, e, f) {
          var g = a.memoizedState;
          null === g
            ? (a.memoizedState = {
                isBackwards: b,
                rendering: null,
                renderingStartTime: 0,
                last: d,
                tail: c,
                tailExpiration: 0,
                tailMode: e,
                lastEffect: f,
              })
            : ((g.isBackwards = b),
              (g.rendering = null),
              (g.renderingStartTime = 0),
              (g.last = d),
              (g.tail = c),
              (g.tailExpiration = 0),
              (g.tailMode = e),
              (g.lastEffect = f));
        }
        function mi(a, b, c) {
          var d = b.pendingProps,
            e = d.revealOrder,
            f = d.tail;
          R(a, b, d.children, c);
          d = M.current;
          if (0 !== (d & 2)) (d = (d & 1) | 2), (b.effectTag |= 64);
          else {
            if (null !== a && 0 !== (a.effectTag & 64))
              a: for (a = b.child; null !== a; ) {
                if (13 === a.tag) null !== a.memoizedState && ki(a, c);
                else if (19 === a.tag) ki(a, c);
                else if (null !== a.child) {
                  a.child.return = a;
                  a = a.child;
                  continue;
                }
                if (a === b) break a;
                for (; null === a.sibling; ) {
                  if (null === a.return || a.return === b) break a;
                  a = a.return;
                }
                a.sibling.return = a.return;
                a = a.sibling;
              }
            d &= 1;
          }
          I(M, d);
          if (0 === (b.mode & 2)) b.memoizedState = null;
          else
            switch (e) {
              case "forwards":
                c = b.child;
                for (e = null; null !== c; )
                  (a = c.alternate),
                    null !== a && null === hh(a) && (e = c),
                    (c = c.sibling);
                c = e;
                null === c
                  ? ((e = b.child), (b.child = null))
                  : ((e = c.sibling), (c.sibling = null));
                li(b, !1, e, c, f, b.lastEffect);
                break;
              case "backwards":
                c = null;
                e = b.child;
                for (b.child = null; null !== e; ) {
                  a = e.alternate;
                  if (null !== a && null === hh(a)) {
                    b.child = e;
                    break;
                  }
                  a = e.sibling;
                  e.sibling = c;
                  c = e;
                  e = a;
                }
                li(b, !0, c, null, f, b.lastEffect);
                break;
              case "together":
                li(b, !1, null, null, void 0, b.lastEffect);
                break;
              default:
                b.memoizedState = null;
            }
          return b.child;
        }
        function $h(a, b, c) {
          null !== a && (b.dependencies = a.dependencies);
          var d = b.expirationTime;
          0 !== d && Bg(d);
          if (b.childExpirationTime < c) return null;
          if (null !== a && b.child !== a.child) throw Error(u(153));
          if (null !== b.child) {
            a = b.child;
            c = Sg(a, a.pendingProps);
            b.child = c;
            for (c.return = b; null !== a.sibling; )
              (a = a.sibling),
                (c = c.sibling = Sg(a, a.pendingProps)),
                (c.return = b);
            c.sibling = null;
          }
          return b.child;
        }
        var ni, oi, pi, qi;
        ni = function (a, b) {
          for (var c = b.child; null !== c; ) {
            if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
            else if (4 !== c.tag && null !== c.child) {
              c.child.return = c;
              c = c.child;
              continue;
            }
            if (c === b) break;
            for (; null === c.sibling; ) {
              if (null === c.return || c.return === b) return;
              c = c.return;
            }
            c.sibling.return = c.return;
            c = c.sibling;
          }
        };
        oi = function () {};
        pi = function (a, b, c, d, e) {
          var f = a.memoizedProps;
          if (f !== d) {
            var g = b.stateNode;
            ch($g.current);
            a = null;
            switch (c) {
              case "input":
                f = zb(g, f);
                d = zb(g, d);
                a = [];
                break;
              case "option":
                f = Gb(g, f);
                d = Gb(g, d);
                a = [];
                break;
              case "select":
                f = n({}, f, { value: void 0 });
                d = n({}, d, { value: void 0 });
                a = [];
                break;
              case "textarea":
                f = Ib(g, f);
                d = Ib(g, d);
                a = [];
                break;
              default:
                "function" !== typeof f.onClick &&
                  "function" === typeof d.onClick &&
                  (g.onclick = sd);
            }
            od(c, d);
            var h, k;
            c = null;
            for (h in f)
              if (!d.hasOwnProperty(h) && f.hasOwnProperty(h) && null != f[h])
                if ("style" === h)
                  for (k in ((g = f[h]), g))
                    g.hasOwnProperty(k) && (c || (c = {}), (c[k] = ""));
                else
                  "dangerouslySetInnerHTML" !== h &&
                    "children" !== h &&
                    "suppressContentEditableWarning" !== h &&
                    "suppressHydrationWarning" !== h &&
                    "autoFocus" !== h &&
                    (va.hasOwnProperty(h)
                      ? a || (a = [])
                      : (a = a || []).push(h, null));
            for (h in d) {
              var l = d[h];
              g = null != f ? f[h] : void 0;
              if (d.hasOwnProperty(h) && l !== g && (null != l || null != g))
                if ("style" === h)
                  if (g) {
                    for (k in g)
                      !g.hasOwnProperty(k) ||
                        (l && l.hasOwnProperty(k)) ||
                        (c || (c = {}), (c[k] = ""));
                    for (k in l)
                      l.hasOwnProperty(k) &&
                        g[k] !== l[k] &&
                        (c || (c = {}), (c[k] = l[k]));
                  } else c || (a || (a = []), a.push(h, c)), (c = l);
                else
                  "dangerouslySetInnerHTML" === h
                    ? ((l = l ? l.__html : void 0),
                      (g = g ? g.__html : void 0),
                      null != l && g !== l && (a = a || []).push(h, l))
                    : "children" === h
                    ? g === l ||
                      ("string" !== typeof l && "number" !== typeof l) ||
                      (a = a || []).push(h, "" + l)
                    : "suppressContentEditableWarning" !== h &&
                      "suppressHydrationWarning" !== h &&
                      (va.hasOwnProperty(h)
                        ? (null != l && rd(e, h), a || g === l || (a = []))
                        : (a = a || []).push(h, l));
            }
            c && (a = a || []).push("style", c);
            e = a;
            if ((b.updateQueue = e)) b.effectTag |= 4;
          }
        };
        qi = function (a, b, c, d) {
          c !== d && (b.effectTag |= 4);
        };
        function ri(a, b) {
          switch (a.tailMode) {
            case "hidden":
              b = a.tail;
              for (var c = null; null !== b; )
                null !== b.alternate && (c = b), (b = b.sibling);
              null === c ? (a.tail = null) : (c.sibling = null);
              break;
            case "collapsed":
              c = a.tail;
              for (var d = null; null !== c; )
                null !== c.alternate && (d = c), (c = c.sibling);
              null === d
                ? b || null === a.tail
                  ? (a.tail = null)
                  : (a.tail.sibling = null)
                : (d.sibling = null);
          }
        }
        function si(a, b, c) {
          var d = b.pendingProps;
          switch (b.tag) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return null;
            case 1:
              return L(b.type) && Df(), null;
            case 3:
              return (
                eh(),
                H(K),
                H(J),
                (c = b.stateNode),
                c.pendingContext &&
                  ((c.context = c.pendingContext), (c.pendingContext = null)),
                (null !== a && null !== a.child) ||
                  !Wh(b) ||
                  (b.effectTag |= 4),
                oi(b),
                null
              );
            case 5:
              gh(b);
              c = ch(bh.current);
              var e = b.type;
              if (null !== a && null != b.stateNode)
                pi(a, b, e, d, c), a.ref !== b.ref && (b.effectTag |= 128);
              else {
                if (!d) {
                  if (null === b.stateNode) throw Error(u(166));
                  return null;
                }
                a = ch($g.current);
                if (Wh(b)) {
                  d = b.stateNode;
                  e = b.type;
                  var f = b.memoizedProps;
                  d[Md] = b;
                  d[Nd] = f;
                  switch (e) {
                    case "iframe":
                    case "object":
                    case "embed":
                      F("load", d);
                      break;
                    case "video":
                    case "audio":
                      for (a = 0; a < ac.length; a++) F(ac[a], d);
                      break;
                    case "source":
                      F("error", d);
                      break;
                    case "img":
                    case "image":
                    case "link":
                      F("error", d);
                      F("load", d);
                      break;
                    case "form":
                      F("reset", d);
                      F("submit", d);
                      break;
                    case "details":
                      F("toggle", d);
                      break;
                    case "input":
                      Ab(d, f);
                      F("invalid", d);
                      rd(c, "onChange");
                      break;
                    case "select":
                      d._wrapperState = { wasMultiple: !!f.multiple };
                      F("invalid", d);
                      rd(c, "onChange");
                      break;
                    case "textarea":
                      Jb(d, f), F("invalid", d), rd(c, "onChange");
                  }
                  od(e, f);
                  a = null;
                  for (var g in f)
                    if (f.hasOwnProperty(g)) {
                      var h = f[g];
                      "children" === g
                        ? "string" === typeof h
                          ? d.textContent !== h && (a = ["children", h])
                          : "number" === typeof h &&
                            d.textContent !== "" + h &&
                            (a = ["children", "" + h])
                        : va.hasOwnProperty(g) && null != h && rd(c, g);
                    }
                  switch (e) {
                    case "input":
                      xb(d);
                      Eb(d, f, !0);
                      break;
                    case "textarea":
                      xb(d);
                      Lb(d);
                      break;
                    case "select":
                    case "option":
                      break;
                    default:
                      "function" === typeof f.onClick && (d.onclick = sd);
                  }
                  c = a;
                  b.updateQueue = c;
                  null !== c && (b.effectTag |= 4);
                } else {
                  g = 9 === c.nodeType ? c : c.ownerDocument;
                  a === qd && (a = Nb(e));
                  a === qd
                    ? "script" === e
                      ? ((a = g.createElement("div")),
                        (a.innerHTML = "<script>\x3c/script>"),
                        (a = a.removeChild(a.firstChild)))
                      : "string" === typeof d.is
                      ? (a = g.createElement(e, { is: d.is }))
                      : ((a = g.createElement(e)),
                        "select" === e &&
                          ((g = a),
                          d.multiple
                            ? (g.multiple = !0)
                            : d.size && (g.size = d.size)))
                    : (a = g.createElementNS(a, e));
                  a[Md] = b;
                  a[Nd] = d;
                  ni(a, b, !1, !1);
                  b.stateNode = a;
                  g = pd(e, d);
                  switch (e) {
                    case "iframe":
                    case "object":
                    case "embed":
                      F("load", a);
                      h = d;
                      break;
                    case "video":
                    case "audio":
                      for (h = 0; h < ac.length; h++) F(ac[h], a);
                      h = d;
                      break;
                    case "source":
                      F("error", a);
                      h = d;
                      break;
                    case "img":
                    case "image":
                    case "link":
                      F("error", a);
                      F("load", a);
                      h = d;
                      break;
                    case "form":
                      F("reset", a);
                      F("submit", a);
                      h = d;
                      break;
                    case "details":
                      F("toggle", a);
                      h = d;
                      break;
                    case "input":
                      Ab(a, d);
                      h = zb(a, d);
                      F("invalid", a);
                      rd(c, "onChange");
                      break;
                    case "option":
                      h = Gb(a, d);
                      break;
                    case "select":
                      a._wrapperState = { wasMultiple: !!d.multiple };
                      h = n({}, d, { value: void 0 });
                      F("invalid", a);
                      rd(c, "onChange");
                      break;
                    case "textarea":
                      Jb(a, d);
                      h = Ib(a, d);
                      F("invalid", a);
                      rd(c, "onChange");
                      break;
                    default:
                      h = d;
                  }
                  od(e, h);
                  var k = h;
                  for (f in k)
                    if (k.hasOwnProperty(f)) {
                      var l = k[f];
                      "style" === f
                        ? md(a, l)
                        : "dangerouslySetInnerHTML" === f
                        ? ((l = l ? l.__html : void 0), null != l && Qb(a, l))
                        : "children" === f
                        ? "string" === typeof l
                          ? ("textarea" !== e || "" !== l) && Rb(a, l)
                          : "number" === typeof l && Rb(a, "" + l)
                        : "suppressContentEditableWarning" !== f &&
                          "suppressHydrationWarning" !== f &&
                          "autoFocus" !== f &&
                          (va.hasOwnProperty(f)
                            ? null != l && rd(c, f)
                            : null != l && Xa(a, f, l, g));
                    }
                  switch (e) {
                    case "input":
                      xb(a);
                      Eb(a, d, !1);
                      break;
                    case "textarea":
                      xb(a);
                      Lb(a);
                      break;
                    case "option":
                      null != d.value &&
                        a.setAttribute("value", "" + rb(d.value));
                      break;
                    case "select":
                      a.multiple = !!d.multiple;
                      c = d.value;
                      null != c
                        ? Hb(a, !!d.multiple, c, !1)
                        : null != d.defaultValue &&
                          Hb(a, !!d.multiple, d.defaultValue, !0);
                      break;
                    default:
                      "function" === typeof h.onClick && (a.onclick = sd);
                  }
                  Fd(e, d) && (b.effectTag |= 4);
                }
                null !== b.ref && (b.effectTag |= 128);
              }
              return null;
            case 6:
              if (a && null != b.stateNode) qi(a, b, a.memoizedProps, d);
              else {
                if ("string" !== typeof d && null === b.stateNode)
                  throw Error(u(166));
                c = ch(bh.current);
                ch($g.current);
                Wh(b)
                  ? ((c = b.stateNode),
                    (d = b.memoizedProps),
                    (c[Md] = b),
                    c.nodeValue !== d && (b.effectTag |= 4))
                  : ((c = (9 === c.nodeType
                      ? c
                      : c.ownerDocument
                    ).createTextNode(d)),
                    (c[Md] = b),
                    (b.stateNode = c));
              }
              return null;
            case 13:
              H(M);
              d = b.memoizedState;
              if (0 !== (b.effectTag & 64)) return (b.expirationTime = c), b;
              c = null !== d;
              d = !1;
              null === a
                ? void 0 !== b.memoizedProps.fallback && Wh(b)
                : ((e = a.memoizedState),
                  (d = null !== e),
                  c ||
                    null === e ||
                    ((e = a.child.sibling),
                    null !== e &&
                      ((f = b.firstEffect),
                      null !== f
                        ? ((b.firstEffect = e), (e.nextEffect = f))
                        : ((b.firstEffect = b.lastEffect = e),
                          (e.nextEffect = null)),
                      (e.effectTag = 8))));
              if (c && !d && 0 !== (b.mode & 2))
                if (
                  (null === a &&
                    !0 !== b.memoizedProps.unstable_avoidThisFallback) ||
                  0 !== (M.current & 1)
                )
                  S === ti && (S = ui);
                else {
                  if (S === ti || S === ui) S = vi;
                  0 !== wi && null !== T && (xi(T, U), yi(T, wi));
                }
              if (c || d) b.effectTag |= 4;
              return null;
            case 4:
              return eh(), oi(b), null;
            case 10:
              return og(b), null;
            case 17:
              return L(b.type) && Df(), null;
            case 19:
              H(M);
              d = b.memoizedState;
              if (null === d) return null;
              e = 0 !== (b.effectTag & 64);
              f = d.rendering;
              if (null === f)
                if (e) ri(d, !1);
                else {
                  if (S !== ti || (null !== a && 0 !== (a.effectTag & 64)))
                    for (f = b.child; null !== f; ) {
                      a = hh(f);
                      if (null !== a) {
                        b.effectTag |= 64;
                        ri(d, !1);
                        e = a.updateQueue;
                        null !== e && ((b.updateQueue = e), (b.effectTag |= 4));
                        null === d.lastEffect && (b.firstEffect = null);
                        b.lastEffect = d.lastEffect;
                        for (d = b.child; null !== d; )
                          (e = d),
                            (f = c),
                            (e.effectTag &= 2),
                            (e.nextEffect = null),
                            (e.firstEffect = null),
                            (e.lastEffect = null),
                            (a = e.alternate),
                            null === a
                              ? ((e.childExpirationTime = 0),
                                (e.expirationTime = f),
                                (e.child = null),
                                (e.memoizedProps = null),
                                (e.memoizedState = null),
                                (e.updateQueue = null),
                                (e.dependencies = null))
                              : ((e.childExpirationTime =
                                  a.childExpirationTime),
                                (e.expirationTime = a.expirationTime),
                                (e.child = a.child),
                                (e.memoizedProps = a.memoizedProps),
                                (e.memoizedState = a.memoizedState),
                                (e.updateQueue = a.updateQueue),
                                (f = a.dependencies),
                                (e.dependencies =
                                  null === f
                                    ? null
                                    : {
                                        expirationTime: f.expirationTime,
                                        firstContext: f.firstContext,
                                        responders: f.responders,
                                      })),
                            (d = d.sibling);
                        I(M, (M.current & 1) | 2);
                        return b.child;
                      }
                      f = f.sibling;
                    }
                }
              else {
                if (!e)
                  if (((a = hh(f)), null !== a)) {
                    if (
                      ((b.effectTag |= 64),
                      (e = !0),
                      (c = a.updateQueue),
                      null !== c && ((b.updateQueue = c), (b.effectTag |= 4)),
                      ri(d, !0),
                      null === d.tail &&
                        "hidden" === d.tailMode &&
                        !f.alternate)
                    )
                      return (
                        (b = b.lastEffect = d.lastEffect),
                        null !== b && (b.nextEffect = null),
                        null
                      );
                  } else
                    2 * $f() - d.renderingStartTime > d.tailExpiration &&
                      1 < c &&
                      ((b.effectTag |= 64),
                      (e = !0),
                      ri(d, !1),
                      (b.expirationTime = b.childExpirationTime = c - 1));
                d.isBackwards
                  ? ((f.sibling = b.child), (b.child = f))
                  : ((c = d.last),
                    null !== c ? (c.sibling = f) : (b.child = f),
                    (d.last = f));
              }
              return null !== d.tail
                ? (0 === d.tailExpiration && (d.tailExpiration = $f() + 500),
                  (c = d.tail),
                  (d.rendering = c),
                  (d.tail = c.sibling),
                  (d.lastEffect = b.lastEffect),
                  (d.renderingStartTime = $f()),
                  (c.sibling = null),
                  (b = M.current),
                  I(M, e ? (b & 1) | 2 : b & 1),
                  c)
                : null;
          }
          throw Error(u(156, b.tag));
        }
        function zi(a) {
          switch (a.tag) {
            case 1:
              L(a.type) && Df();
              var b = a.effectTag;
              return b & 4096 ? ((a.effectTag = (b & -4097) | 64), a) : null;
            case 3:
              eh();
              H(K);
              H(J);
              b = a.effectTag;
              if (0 !== (b & 64)) throw Error(u(285));
              a.effectTag = (b & -4097) | 64;
              return a;
            case 5:
              return gh(a), null;
            case 13:
              return (
                H(M),
                (b = a.effectTag),
                b & 4096 ? ((a.effectTag = (b & -4097) | 64), a) : null
              );
            case 19:
              return H(M), null;
            case 4:
              return eh(), null;
            case 10:
              return og(a), null;
            default:
              return null;
          }
        }
        function Ai(a, b) {
          return { value: a, source: b, stack: qb(b) };
        }
        var Bi = "function" === typeof WeakSet ? WeakSet : Set;
        function Ci(a, b) {
          var c = b.source,
            d = b.stack;
          null === d && null !== c && (d = qb(c));
          null !== c && pb(c.type);
          b = b.value;
          null !== a && 1 === a.tag && pb(a.type);
          try {
            console.error(b);
          } catch (e) {
            setTimeout(function () {
              throw e;
            });
          }
        }
        function Di(a, b) {
          try {
            (b.props = a.memoizedProps),
              (b.state = a.memoizedState),
              b.componentWillUnmount();
          } catch (c) {
            Ei(a, c);
          }
        }
        function Fi(a) {
          var b = a.ref;
          if (null !== b)
            if ("function" === typeof b)
              try {
                b(null);
              } catch (c) {
                Ei(a, c);
              }
            else b.current = null;
        }
        function Gi(a, b) {
          switch (b.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
              return;
            case 1:
              if (b.effectTag & 256 && null !== a) {
                var c = a.memoizedProps,
                  d = a.memoizedState;
                a = b.stateNode;
                b = a.getSnapshotBeforeUpdate(
                  b.elementType === b.type ? c : ig(b.type, c),
                  d
                );
                a.__reactInternalSnapshotBeforeUpdate = b;
              }
              return;
            case 3:
            case 5:
            case 6:
            case 4:
            case 17:
              return;
          }
          throw Error(u(163));
        }
        function Hi(a, b) {
          b = b.updateQueue;
          b = null !== b ? b.lastEffect : null;
          if (null !== b) {
            var c = (b = b.next);
            do {
              if ((c.tag & a) === a) {
                var d = c.destroy;
                c.destroy = void 0;
                void 0 !== d && d();
              }
              c = c.next;
            } while (c !== b);
          }
        }
        function Ii(a, b) {
          b = b.updateQueue;
          b = null !== b ? b.lastEffect : null;
          if (null !== b) {
            var c = (b = b.next);
            do {
              if ((c.tag & a) === a) {
                var d = c.create;
                c.destroy = d();
              }
              c = c.next;
            } while (c !== b);
          }
        }
        function Ji(a, b, c) {
          switch (c.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
              Ii(3, c);
              return;
            case 1:
              a = c.stateNode;
              if (c.effectTag & 4)
                if (null === b) a.componentDidMount();
                else {
                  var d =
                    c.elementType === c.type
                      ? b.memoizedProps
                      : ig(c.type, b.memoizedProps);
                  a.componentDidUpdate(
                    d,
                    b.memoizedState,
                    a.__reactInternalSnapshotBeforeUpdate
                  );
                }
              b = c.updateQueue;
              null !== b && Cg(c, b, a);
              return;
            case 3:
              b = c.updateQueue;
              if (null !== b) {
                a = null;
                if (null !== c.child)
                  switch (c.child.tag) {
                    case 5:
                      a = c.child.stateNode;
                      break;
                    case 1:
                      a = c.child.stateNode;
                  }
                Cg(c, b, a);
              }
              return;
            case 5:
              a = c.stateNode;
              null === b &&
                c.effectTag & 4 &&
                Fd(c.type, c.memoizedProps) &&
                a.focus();
              return;
            case 6:
              return;
            case 4:
              return;
            case 12:
              return;
            case 13:
              null === c.memoizedState &&
                ((c = c.alternate),
                null !== c &&
                  ((c = c.memoizedState),
                  null !== c && ((c = c.dehydrated), null !== c && Vc(c))));
              return;
            case 19:
            case 17:
            case 20:
            case 21:
              return;
          }
          throw Error(u(163));
        }
        function Ki(a, b, c) {
          "function" === typeof Li && Li(b);
          switch (b.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
              a = b.updateQueue;
              if (null !== a && ((a = a.lastEffect), null !== a)) {
                var d = a.next;
                cg(97 < c ? 97 : c, function () {
                  var a = d;
                  do {
                    var c = a.destroy;
                    if (void 0 !== c) {
                      var g = b;
                      try {
                        c();
                      } catch (h) {
                        Ei(g, h);
                      }
                    }
                    a = a.next;
                  } while (a !== d);
                });
              }
              break;
            case 1:
              Fi(b);
              c = b.stateNode;
              "function" === typeof c.componentWillUnmount && Di(b, c);
              break;
            case 5:
              Fi(b);
              break;
            case 4:
              Mi(a, b, c);
          }
        }
        function Ni(a) {
          var b = a.alternate;
          a.return = null;
          a.child = null;
          a.memoizedState = null;
          a.updateQueue = null;
          a.dependencies = null;
          a.alternate = null;
          a.firstEffect = null;
          a.lastEffect = null;
          a.pendingProps = null;
          a.memoizedProps = null;
          a.stateNode = null;
          null !== b && Ni(b);
        }
        function Oi(a) {
          return 5 === a.tag || 3 === a.tag || 4 === a.tag;
        }
        function Pi(a) {
          a: {
            for (var b = a.return; null !== b; ) {
              if (Oi(b)) {
                var c = b;
                break a;
              }
              b = b.return;
            }
            throw Error(u(160));
          }
          b = c.stateNode;
          switch (c.tag) {
            case 5:
              var d = !1;
              break;
            case 3:
              b = b.containerInfo;
              d = !0;
              break;
            case 4:
              b = b.containerInfo;
              d = !0;
              break;
            default:
              throw Error(u(161));
          }
          c.effectTag & 16 && (Rb(b, ""), (c.effectTag &= -17));
          a: b: for (c = a; ; ) {
            for (; null === c.sibling; ) {
              if (null === c.return || Oi(c.return)) {
                c = null;
                break a;
              }
              c = c.return;
            }
            c.sibling.return = c.return;
            for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag; ) {
              if (c.effectTag & 2) continue b;
              if (null === c.child || 4 === c.tag) continue b;
              else (c.child.return = c), (c = c.child);
            }
            if (!(c.effectTag & 2)) {
              c = c.stateNode;
              break a;
            }
          }
          d ? Qi(a, c, b) : Ri(a, c, b);
        }
        function Qi(a, b, c) {
          var d = a.tag,
            e = 5 === d || 6 === d;
          if (e)
            (a = e ? a.stateNode : a.stateNode.instance),
              b
                ? 8 === c.nodeType
                  ? c.parentNode.insertBefore(a, b)
                  : c.insertBefore(a, b)
                : (8 === c.nodeType
                    ? ((b = c.parentNode), b.insertBefore(a, c))
                    : ((b = c), b.appendChild(a)),
                  (c = c._reactRootContainer),
                  (null !== c && void 0 !== c) ||
                    null !== b.onclick ||
                    (b.onclick = sd));
          else if (4 !== d && ((a = a.child), null !== a))
            for (Qi(a, b, c), a = a.sibling; null !== a; )
              Qi(a, b, c), (a = a.sibling);
        }
        function Ri(a, b, c) {
          var d = a.tag,
            e = 5 === d || 6 === d;
          if (e)
            (a = e ? a.stateNode : a.stateNode.instance),
              b ? c.insertBefore(a, b) : c.appendChild(a);
          else if (4 !== d && ((a = a.child), null !== a))
            for (Ri(a, b, c), a = a.sibling; null !== a; )
              Ri(a, b, c), (a = a.sibling);
        }
        function Mi(a, b, c) {
          for (var d = b, e = !1, f, g; ; ) {
            if (!e) {
              e = d.return;
              a: for (;;) {
                if (null === e) throw Error(u(160));
                f = e.stateNode;
                switch (e.tag) {
                  case 5:
                    g = !1;
                    break a;
                  case 3:
                    f = f.containerInfo;
                    g = !0;
                    break a;
                  case 4:
                    f = f.containerInfo;
                    g = !0;
                    break a;
                }
                e = e.return;
              }
              e = !0;
            }
            if (5 === d.tag || 6 === d.tag) {
              a: for (var h = a, k = d, l = c, m = k; ; )
                if ((Ki(h, m, l), null !== m.child && 4 !== m.tag))
                  (m.child.return = m), (m = m.child);
                else {
                  if (m === k) break a;
                  for (; null === m.sibling; ) {
                    if (null === m.return || m.return === k) break a;
                    m = m.return;
                  }
                  m.sibling.return = m.return;
                  m = m.sibling;
                }
              g
                ? ((h = f),
                  (k = d.stateNode),
                  8 === h.nodeType
                    ? h.parentNode.removeChild(k)
                    : h.removeChild(k))
                : f.removeChild(d.stateNode);
            } else if (4 === d.tag) {
              if (null !== d.child) {
                f = d.stateNode.containerInfo;
                g = !0;
                d.child.return = d;
                d = d.child;
                continue;
              }
            } else if ((Ki(a, d, c), null !== d.child)) {
              d.child.return = d;
              d = d.child;
              continue;
            }
            if (d === b) break;
            for (; null === d.sibling; ) {
              if (null === d.return || d.return === b) return;
              d = d.return;
              4 === d.tag && (e = !1);
            }
            d.sibling.return = d.return;
            d = d.sibling;
          }
        }
        function Si(a, b) {
          switch (b.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
              Hi(3, b);
              return;
            case 1:
              return;
            case 5:
              var c = b.stateNode;
              if (null != c) {
                var d = b.memoizedProps,
                  e = null !== a ? a.memoizedProps : d;
                a = b.type;
                var f = b.updateQueue;
                b.updateQueue = null;
                if (null !== f) {
                  c[Nd] = d;
                  "input" === a &&
                    "radio" === d.type &&
                    null != d.name &&
                    Bb(c, d);
                  pd(a, e);
                  b = pd(a, d);
                  for (e = 0; e < f.length; e += 2) {
                    var g = f[e],
                      h = f[e + 1];
                    "style" === g
                      ? md(c, h)
                      : "dangerouslySetInnerHTML" === g
                      ? Qb(c, h)
                      : "children" === g
                      ? Rb(c, h)
                      : Xa(c, g, h, b);
                  }
                  switch (a) {
                    case "input":
                      Cb(c, d);
                      break;
                    case "textarea":
                      Kb(c, d);
                      break;
                    case "select":
                      (b = c._wrapperState.wasMultiple),
                        (c._wrapperState.wasMultiple = !!d.multiple),
                        (a = d.value),
                        null != a
                          ? Hb(c, !!d.multiple, a, !1)
                          : b !== !!d.multiple &&
                            (null != d.defaultValue
                              ? Hb(c, !!d.multiple, d.defaultValue, !0)
                              : Hb(c, !!d.multiple, d.multiple ? [] : "", !1));
                  }
                }
              }
              return;
            case 6:
              if (null === b.stateNode) throw Error(u(162));
              b.stateNode.nodeValue = b.memoizedProps;
              return;
            case 3:
              b = b.stateNode;
              b.hydrate && ((b.hydrate = !1), Vc(b.containerInfo));
              return;
            case 12:
              return;
            case 13:
              c = b;
              null === b.memoizedState
                ? (d = !1)
                : ((d = !0), (c = b.child), (Ti = $f()));
              if (null !== c)
                a: for (a = c; ; ) {
                  if (5 === a.tag)
                    (f = a.stateNode),
                      d
                        ? ((f = f.style),
                          "function" === typeof f.setProperty
                            ? f.setProperty("display", "none", "important")
                            : (f.display = "none"))
                        : ((f = a.stateNode),
                          (e = a.memoizedProps.style),
                          (e =
                            void 0 !== e &&
                            null !== e &&
                            e.hasOwnProperty("display")
                              ? e.display
                              : null),
                          (f.style.display = ld("display", e)));
                  else if (6 === a.tag)
                    a.stateNode.nodeValue = d ? "" : a.memoizedProps;
                  else if (
                    13 === a.tag &&
                    null !== a.memoizedState &&
                    null === a.memoizedState.dehydrated
                  ) {
                    f = a.child.sibling;
                    f.return = a;
                    a = f;
                    continue;
                  } else if (null !== a.child) {
                    a.child.return = a;
                    a = a.child;
                    continue;
                  }
                  if (a === c) break;
                  for (; null === a.sibling; ) {
                    if (null === a.return || a.return === c) break a;
                    a = a.return;
                  }
                  a.sibling.return = a.return;
                  a = a.sibling;
                }
              Ui(b);
              return;
            case 19:
              Ui(b);
              return;
            case 17:
              return;
          }
          throw Error(u(163));
        }
        function Ui(a) {
          var b = a.updateQueue;
          if (null !== b) {
            a.updateQueue = null;
            var c = a.stateNode;
            null === c && (c = a.stateNode = new Bi());
            b.forEach(function (b) {
              var d = Vi.bind(null, a, b);
              c.has(b) || (c.add(b), b.then(d, d));
            });
          }
        }
        var Wi = "function" === typeof WeakMap ? WeakMap : Map;
        function Xi(a, b, c) {
          c = wg(c, null);
          c.tag = 3;
          c.payload = { element: null };
          var d = b.value;
          c.callback = function () {
            Yi || ((Yi = !0), (Zi = d));
            Ci(a, b);
          };
          return c;
        }
        function $i(a, b, c) {
          c = wg(c, null);
          c.tag = 3;
          var d = a.type.getDerivedStateFromError;
          if ("function" === typeof d) {
            var e = b.value;
            c.payload = function () {
              Ci(a, b);
              return d(e);
            };
          }
          var f = a.stateNode;
          null !== f &&
            "function" === typeof f.componentDidCatch &&
            (c.callback = function () {
              "function" !== typeof d &&
                (null === aj ? (aj = new Set([this])) : aj.add(this), Ci(a, b));
              var c = b.stack;
              this.componentDidCatch(b.value, {
                componentStack: null !== c ? c : "",
              });
            });
          return c;
        }
        var bj = Math.ceil,
          cj = Wa.ReactCurrentDispatcher,
          dj = Wa.ReactCurrentOwner,
          V = 0,
          ej = 8,
          fj = 16,
          gj = 32,
          ti = 0,
          hj = 1,
          ij = 2,
          ui = 3,
          vi = 4,
          jj = 5,
          W = V,
          T = null,
          X = null,
          U = 0,
          S = ti,
          kj = null,
          lj = 1073741823,
          mj = 1073741823,
          nj = null,
          wi = 0,
          oj = !1,
          Ti = 0,
          pj = 500,
          Y = null,
          Yi = !1,
          Zi = null,
          aj = null,
          qj = !1,
          rj = null,
          sj = 90,
          tj = null,
          uj = 0,
          vj = null,
          wj = 0;
        function Gg() {
          return (W & (fj | gj)) !== V
            ? 1073741821 - (($f() / 10) | 0)
            : 0 !== wj
            ? wj
            : (wj = 1073741821 - (($f() / 10) | 0));
        }
        function Hg(a, b, c) {
          b = b.mode;
          if (0 === (b & 2)) return 1073741823;
          var d = ag();
          if (0 === (b & 4)) return 99 === d ? 1073741823 : 1073741822;
          if ((W & fj) !== V) return U;
          if (null !== c) a = hg(a, c.timeoutMs | 0 || 5e3, 250);
          else
            switch (d) {
              case 99:
                a = 1073741823;
                break;
              case 98:
                a = hg(a, 150, 100);
                break;
              case 97:
              case 96:
                a = hg(a, 5e3, 250);
                break;
              case 95:
                a = 2;
                break;
              default:
                throw Error(u(326));
            }
          null !== T && a === U && --a;
          return a;
        }
        function Ig(a, b) {
          if (50 < uj) throw ((uj = 0), (vj = null), Error(u(185)));
          a = xj(a, b);
          if (null !== a) {
            var c = ag();
            1073741823 === b
              ? (W & ej) !== V && (W & (fj | gj)) === V
                ? yj(a)
                : (Z(a), W === V && gg())
              : Z(a);
            (W & 4) === V ||
              (98 !== c && 99 !== c) ||
              (null === tj
                ? (tj = new Map([[a, b]]))
                : ((c = tj.get(a)), (void 0 === c || c > b) && tj.set(a, b)));
          }
        }
        function xj(a, b) {
          a.expirationTime < b && (a.expirationTime = b);
          var c = a.alternate;
          null !== c && c.expirationTime < b && (c.expirationTime = b);
          var d = a.return,
            e = null;
          if (null === d && 3 === a.tag) e = a.stateNode;
          else
            for (; null !== d; ) {
              c = d.alternate;
              d.childExpirationTime < b && (d.childExpirationTime = b);
              null !== c &&
                c.childExpirationTime < b &&
                (c.childExpirationTime = b);
              if (null === d.return && 3 === d.tag) {
                e = d.stateNode;
                break;
              }
              d = d.return;
            }
          null !== e && (T === e && (Bg(b), S === vi && xi(e, U)), yi(e, b));
          return e;
        }
        function zj(a) {
          var b = a.lastExpiredTime;
          if (0 !== b) return b;
          b = a.firstPendingTime;
          if (!Aj(a, b)) return b;
          var c = a.lastPingedTime;
          a = a.nextKnownPendingLevel;
          a = c > a ? c : a;
          return 2 >= a && b !== a ? 0 : a;
        }
        function Z(a) {
          if (0 !== a.lastExpiredTime)
            (a.callbackExpirationTime = 1073741823),
              (a.callbackPriority = 99),
              (a.callbackNode = eg(yj.bind(null, a)));
          else {
            var b = zj(a),
              c = a.callbackNode;
            if (0 === b)
              null !== c &&
                ((a.callbackNode = null),
                (a.callbackExpirationTime = 0),
                (a.callbackPriority = 90));
            else {
              var d = Gg();
              1073741823 === b
                ? (d = 99)
                : 1 === b || 2 === b
                ? (d = 95)
                : ((d = 10 * (1073741821 - b) - 10 * (1073741821 - d)),
                  (d = 0 >= d ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95));
              if (null !== c) {
                var e = a.callbackPriority;
                if (a.callbackExpirationTime === b && e >= d) return;
                c !== Tf && Kf(c);
              }
              a.callbackExpirationTime = b;
              a.callbackPriority = d;
              b =
                1073741823 === b
                  ? eg(yj.bind(null, a))
                  : dg(d, Bj.bind(null, a), {
                      timeout: 10 * (1073741821 - b) - $f(),
                    });
              a.callbackNode = b;
            }
          }
        }
        function Bj(a, b) {
          wj = 0;
          if (b) return (b = Gg()), Cj(a, b), Z(a), null;
          var c = zj(a);
          if (0 !== c) {
            b = a.callbackNode;
            if ((W & (fj | gj)) !== V) throw Error(u(327));
            Dj();
            (a === T && c === U) || Ej(a, c);
            if (null !== X) {
              var d = W;
              W |= fj;
              var e = Fj();
              do
                try {
                  Gj();
                  break;
                } catch (h) {
                  Hj(a, h);
                }
              while (1);
              ng();
              W = d;
              cj.current = e;
              if (S === hj) throw ((b = kj), Ej(a, c), xi(a, c), Z(a), b);
              if (null === X)
                switch (
                  ((e = a.finishedWork = a.current.alternate),
                  (a.finishedExpirationTime = c),
                  (d = S),
                  (T = null),
                  d)
                ) {
                  case ti:
                  case hj:
                    throw Error(u(345));
                  case ij:
                    Cj(a, 2 < c ? 2 : c);
                    break;
                  case ui:
                    xi(a, c);
                    d = a.lastSuspendedTime;
                    c === d && (a.nextKnownPendingLevel = Ij(e));
                    if (1073741823 === lj && ((e = Ti + pj - $f()), 10 < e)) {
                      if (oj) {
                        var f = a.lastPingedTime;
                        if (0 === f || f >= c) {
                          a.lastPingedTime = c;
                          Ej(a, c);
                          break;
                        }
                      }
                      f = zj(a);
                      if (0 !== f && f !== c) break;
                      if (0 !== d && d !== c) {
                        a.lastPingedTime = d;
                        break;
                      }
                      a.timeoutHandle = Hd(Jj.bind(null, a), e);
                      break;
                    }
                    Jj(a);
                    break;
                  case vi:
                    xi(a, c);
                    d = a.lastSuspendedTime;
                    c === d && (a.nextKnownPendingLevel = Ij(e));
                    if (oj && ((e = a.lastPingedTime), 0 === e || e >= c)) {
                      a.lastPingedTime = c;
                      Ej(a, c);
                      break;
                    }
                    e = zj(a);
                    if (0 !== e && e !== c) break;
                    if (0 !== d && d !== c) {
                      a.lastPingedTime = d;
                      break;
                    }
                    1073741823 !== mj
                      ? (d = 10 * (1073741821 - mj) - $f())
                      : 1073741823 === lj
                      ? (d = 0)
                      : ((d = 10 * (1073741821 - lj) - 5e3),
                        (e = $f()),
                        (c = 10 * (1073741821 - c) - e),
                        (d = e - d),
                        0 > d && (d = 0),
                        (d =
                          (120 > d
                            ? 120
                            : 480 > d
                            ? 480
                            : 1080 > d
                            ? 1080
                            : 1920 > d
                            ? 1920
                            : 3e3 > d
                            ? 3e3
                            : 4320 > d
                            ? 4320
                            : 1960 * bj(d / 1960)) - d),
                        c < d && (d = c));
                    if (10 < d) {
                      a.timeoutHandle = Hd(Jj.bind(null, a), d);
                      break;
                    }
                    Jj(a);
                    break;
                  case jj:
                    if (1073741823 !== lj && null !== nj) {
                      f = lj;
                      var g = nj;
                      d = g.busyMinDurationMs | 0;
                      0 >= d
                        ? (d = 0)
                        : ((e = g.busyDelayMs | 0),
                          (f =
                            $f() -
                            (10 * (1073741821 - f) - (g.timeoutMs | 0 || 5e3))),
                          (d = f <= e ? 0 : e + d - f));
                      if (10 < d) {
                        xi(a, c);
                        a.timeoutHandle = Hd(Jj.bind(null, a), d);
                        break;
                      }
                    }
                    Jj(a);
                    break;
                  default:
                    throw Error(u(329));
                }
              Z(a);
              if (a.callbackNode === b) return Bj.bind(null, a);
            }
          }
          return null;
        }
        function yj(a) {
          var b = a.lastExpiredTime;
          b = 0 !== b ? b : 1073741823;
          if ((W & (fj | gj)) !== V) throw Error(u(327));
          Dj();
          (a === T && b === U) || Ej(a, b);
          if (null !== X) {
            var c = W;
            W |= fj;
            var d = Fj();
            do
              try {
                Kj();
                break;
              } catch (e) {
                Hj(a, e);
              }
            while (1);
            ng();
            W = c;
            cj.current = d;
            if (S === hj) throw ((c = kj), Ej(a, b), xi(a, b), Z(a), c);
            if (null !== X) throw Error(u(261));
            a.finishedWork = a.current.alternate;
            a.finishedExpirationTime = b;
            T = null;
            Jj(a);
            Z(a);
          }
          return null;
        }
        function Lj() {
          if (null !== tj) {
            var a = tj;
            tj = null;
            a.forEach(function (a, c) {
              Cj(c, a);
              Z(c);
            });
            gg();
          }
        }
        function Mj(a, b) {
          var c = W;
          W |= 1;
          try {
            return a(b);
          } finally {
            (W = c), W === V && gg();
          }
        }
        function Nj(a, b) {
          var c = W;
          W &= -2;
          W |= ej;
          try {
            return a(b);
          } finally {
            (W = c), W === V && gg();
          }
        }
        function Ej(a, b) {
          a.finishedWork = null;
          a.finishedExpirationTime = 0;
          var c = a.timeoutHandle;
          -1 !== c && ((a.timeoutHandle = -1), Id(c));
          if (null !== X)
            for (c = X.return; null !== c; ) {
              var d = c;
              switch (d.tag) {
                case 1:
                  d = d.type.childContextTypes;
                  null !== d && void 0 !== d && Df();
                  break;
                case 3:
                  eh();
                  H(K);
                  H(J);
                  break;
                case 5:
                  gh(d);
                  break;
                case 4:
                  eh();
                  break;
                case 13:
                  H(M);
                  break;
                case 19:
                  H(M);
                  break;
                case 10:
                  og(d);
              }
              c = c.return;
            }
          T = a;
          X = Sg(a.current, null);
          U = b;
          S = ti;
          kj = null;
          mj = lj = 1073741823;
          nj = null;
          wi = 0;
          oj = !1;
        }
        function Hj(a, b) {
          do {
            try {
              ng();
              jh.current = sh;
              if (mh)
                for (var c = N.memoizedState; null !== c; ) {
                  var d = c.queue;
                  null !== d && (d.pending = null);
                  c = c.next;
                }
              lh = 0;
              P = O = N = null;
              mh = !1;
              if (null === X || null === X.return)
                return (S = hj), (kj = b), (X = null);
              a: {
                var e = a,
                  f = X.return,
                  g = X,
                  h = b;
                b = U;
                g.effectTag |= 2048;
                g.firstEffect = g.lastEffect = null;
                if (
                  null !== h &&
                  "object" === typeof h &&
                  "function" === typeof h.then
                ) {
                  var k = h;
                  if (0 === (g.mode & 2)) {
                    var l = g.alternate;
                    l
                      ? ((g.updateQueue = l.updateQueue),
                        (g.memoizedState = l.memoizedState),
                        (g.expirationTime = l.expirationTime))
                      : ((g.updateQueue = null), (g.memoizedState = null));
                  }
                  var m = 0 !== (M.current & 1),
                    p = f;
                  do {
                    var x;
                    if ((x = 13 === p.tag)) {
                      var z = p.memoizedState;
                      if (null !== z) x = null !== z.dehydrated ? !0 : !1;
                      else {
                        var ca = p.memoizedProps;
                        x =
                          void 0 === ca.fallback
                            ? !1
                            : !0 !== ca.unstable_avoidThisFallback
                            ? !0
                            : m
                            ? !1
                            : !0;
                      }
                    }
                    if (x) {
                      var D = p.updateQueue;
                      if (null === D) {
                        var t = new Set();
                        t.add(k);
                        p.updateQueue = t;
                      } else D.add(k);
                      if (0 === (p.mode & 2)) {
                        p.effectTag |= 64;
                        g.effectTag &= -2981;
                        if (1 === g.tag)
                          if (null === g.alternate) g.tag = 17;
                          else {
                            var y = wg(1073741823, null);
                            y.tag = 2;
                            xg(g, y);
                          }
                        g.expirationTime = 1073741823;
                        break a;
                      }
                      h = void 0;
                      g = b;
                      var A = e.pingCache;
                      null === A
                        ? ((A = e.pingCache = new Wi()),
                          (h = new Set()),
                          A.set(k, h))
                        : ((h = A.get(k)),
                          void 0 === h && ((h = new Set()), A.set(k, h)));
                      if (!h.has(g)) {
                        h.add(g);
                        var q = Oj.bind(null, e, k, g);
                        k.then(q, q);
                      }
                      p.effectTag |= 4096;
                      p.expirationTime = b;
                      break a;
                    }
                    p = p.return;
                  } while (null !== p);
                  h = Error(
                    (pb(g.type) || "A React component") +
                      " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." +
                      qb(g)
                  );
                }
                S !== jj && (S = ij);
                h = Ai(h, g);
                p = f;
                do {
                  switch (p.tag) {
                    case 3:
                      k = h;
                      p.effectTag |= 4096;
                      p.expirationTime = b;
                      var B = Xi(p, k, b);
                      yg(p, B);
                      break a;
                    case 1:
                      k = h;
                      var w = p.type,
                        ub = p.stateNode;
                      if (
                        0 === (p.effectTag & 64) &&
                        ("function" === typeof w.getDerivedStateFromError ||
                          (null !== ub &&
                            "function" === typeof ub.componentDidCatch &&
                            (null === aj || !aj.has(ub))))
                      ) {
                        p.effectTag |= 4096;
                        p.expirationTime = b;
                        var vb = $i(p, k, b);
                        yg(p, vb);
                        break a;
                      }
                  }
                  p = p.return;
                } while (null !== p);
              }
              X = Pj(X);
            } catch (Xc) {
              b = Xc;
              continue;
            }
            break;
          } while (1);
        }
        function Fj() {
          var a = cj.current;
          cj.current = sh;
          return null === a ? sh : a;
        }
        function Ag(a, b) {
          a < lj && 2 < a && (lj = a);
          null !== b && a < mj && 2 < a && ((mj = a), (nj = b));
        }
        function Bg(a) {
          a > wi && (wi = a);
        }
        function Kj() {
          for (; null !== X; ) X = Qj(X);
        }
        function Gj() {
          for (; null !== X && !Uf(); ) X = Qj(X);
        }
        function Qj(a) {
          var b = Rj(a.alternate, a, U);
          a.memoizedProps = a.pendingProps;
          null === b && (b = Pj(a));
          dj.current = null;
          return b;
        }
        function Pj(a) {
          X = a;
          do {
            var b = X.alternate;
            a = X.return;
            if (0 === (X.effectTag & 2048)) {
              b = si(b, X, U);
              if (1 === U || 1 !== X.childExpirationTime) {
                for (var c = 0, d = X.child; null !== d; ) {
                  var e = d.expirationTime,
                    f = d.childExpirationTime;
                  e > c && (c = e);
                  f > c && (c = f);
                  d = d.sibling;
                }
                X.childExpirationTime = c;
              }
              if (null !== b) return b;
              null !== a &&
                0 === (a.effectTag & 2048) &&
                (null === a.firstEffect && (a.firstEffect = X.firstEffect),
                null !== X.lastEffect &&
                  (null !== a.lastEffect &&
                    (a.lastEffect.nextEffect = X.firstEffect),
                  (a.lastEffect = X.lastEffect)),
                1 < X.effectTag &&
                  (null !== a.lastEffect
                    ? (a.lastEffect.nextEffect = X)
                    : (a.firstEffect = X),
                  (a.lastEffect = X)));
            } else {
              b = zi(X);
              if (null !== b) return (b.effectTag &= 2047), b;
              null !== a &&
                ((a.firstEffect = a.lastEffect = null), (a.effectTag |= 2048));
            }
            b = X.sibling;
            if (null !== b) return b;
            X = a;
          } while (null !== X);
          S === ti && (S = jj);
          return null;
        }
        function Ij(a) {
          var b = a.expirationTime;
          a = a.childExpirationTime;
          return b > a ? b : a;
        }
        function Jj(a) {
          var b = ag();
          cg(99, Sj.bind(null, a, b));
          return null;
        }
        function Sj(a, b) {
          do Dj();
          while (null !== rj);
          if ((W & (fj | gj)) !== V) throw Error(u(327));
          var c = a.finishedWork,
            d = a.finishedExpirationTime;
          if (null === c) return null;
          a.finishedWork = null;
          a.finishedExpirationTime = 0;
          if (c === a.current) throw Error(u(177));
          a.callbackNode = null;
          a.callbackExpirationTime = 0;
          a.callbackPriority = 90;
          a.nextKnownPendingLevel = 0;
          var e = Ij(c);
          a.firstPendingTime = e;
          d <= a.lastSuspendedTime
            ? (a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0)
            : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1);
          d <= a.lastPingedTime && (a.lastPingedTime = 0);
          d <= a.lastExpiredTime && (a.lastExpiredTime = 0);
          a === T && ((X = T = null), (U = 0));
          1 < c.effectTag
            ? null !== c.lastEffect
              ? ((c.lastEffect.nextEffect = c), (e = c.firstEffect))
              : (e = c)
            : (e = c.firstEffect);
          if (null !== e) {
            var f = W;
            W |= gj;
            dj.current = null;
            Dd = fd;
            var g = xd();
            if (yd(g)) {
              if ("selectionStart" in g)
                var h = { start: g.selectionStart, end: g.selectionEnd };
              else
                a: {
                  h = ((h = g.ownerDocument) && h.defaultView) || window;
                  var k = h.getSelection && h.getSelection();
                  if (k && 0 !== k.rangeCount) {
                    h = k.anchorNode;
                    var l = k.anchorOffset,
                      m = k.focusNode;
                    k = k.focusOffset;
                    try {
                      h.nodeType, m.nodeType;
                    } catch (wb) {
                      h = null;
                      break a;
                    }
                    var p = 0,
                      x = -1,
                      z = -1,
                      ca = 0,
                      D = 0,
                      t = g,
                      y = null;
                    b: for (;;) {
                      for (var A; ; ) {
                        t !== h || (0 !== l && 3 !== t.nodeType) || (x = p + l);
                        t !== m || (0 !== k && 3 !== t.nodeType) || (z = p + k);
                        3 === t.nodeType && (p += t.nodeValue.length);
                        if (null === (A = t.firstChild)) break;
                        y = t;
                        t = A;
                      }
                      for (;;) {
                        if (t === g) break b;
                        y === h && ++ca === l && (x = p);
                        y === m && ++D === k && (z = p);
                        if (null !== (A = t.nextSibling)) break;
                        t = y;
                        y = t.parentNode;
                      }
                      t = A;
                    }
                    h = -1 === x || -1 === z ? null : { start: x, end: z };
                  } else h = null;
                }
              h = h || { start: 0, end: 0 };
            } else h = null;
            Ed = {
              activeElementDetached: null,
              focusedElem: g,
              selectionRange: h,
            };
            fd = !1;
            Y = e;
            do
              try {
                Tj();
              } catch (wb) {
                if (null === Y) throw Error(u(330));
                Ei(Y, wb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            Y = e;
            do
              try {
                for (g = a, h = b; null !== Y; ) {
                  var q = Y.effectTag;
                  q & 16 && Rb(Y.stateNode, "");
                  if (q & 128) {
                    var B = Y.alternate;
                    if (null !== B) {
                      var w = B.ref;
                      null !== w &&
                        ("function" === typeof w
                          ? w(null)
                          : (w.current = null));
                    }
                  }
                  switch (q & 1038) {
                    case 2:
                      Pi(Y);
                      Y.effectTag &= -3;
                      break;
                    case 6:
                      Pi(Y);
                      Y.effectTag &= -3;
                      Si(Y.alternate, Y);
                      break;
                    case 1024:
                      Y.effectTag &= -1025;
                      break;
                    case 1028:
                      Y.effectTag &= -1025;
                      Si(Y.alternate, Y);
                      break;
                    case 4:
                      Si(Y.alternate, Y);
                      break;
                    case 8:
                      (l = Y), Mi(g, l, h), Ni(l);
                  }
                  Y = Y.nextEffect;
                }
              } catch (wb) {
                if (null === Y) throw Error(u(330));
                Ei(Y, wb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            w = Ed;
            B = xd();
            q = w.focusedElem;
            h = w.selectionRange;
            if (
              B !== q &&
              q &&
              q.ownerDocument &&
              wd(q.ownerDocument.documentElement, q)
            ) {
              null !== h &&
                yd(q) &&
                ((B = h.start),
                (w = h.end),
                void 0 === w && (w = B),
                "selectionStart" in q
                  ? ((q.selectionStart = B),
                    (q.selectionEnd = Math.min(w, q.value.length)))
                  : ((w =
                      ((B = q.ownerDocument || document) && B.defaultView) ||
                      window),
                    w.getSelection &&
                      ((w = w.getSelection()),
                      (l = q.textContent.length),
                      (g = Math.min(h.start, l)),
                      (h = void 0 === h.end ? g : Math.min(h.end, l)),
                      !w.extend && g > h && ((l = h), (h = g), (g = l)),
                      (l = vd(q, g)),
                      (m = vd(q, h)),
                      l &&
                        m &&
                        (1 !== w.rangeCount ||
                          w.anchorNode !== l.node ||
                          w.anchorOffset !== l.offset ||
                          w.focusNode !== m.node ||
                          w.focusOffset !== m.offset) &&
                        ((B = B.createRange()),
                        B.setStart(l.node, l.offset),
                        w.removeAllRanges(),
                        g > h
                          ? (w.addRange(B), w.extend(m.node, m.offset))
                          : (B.setEnd(m.node, m.offset), w.addRange(B))))));
              B = [];
              for (w = q; (w = w.parentNode); )
                1 === w.nodeType &&
                  B.push({ element: w, left: w.scrollLeft, top: w.scrollTop });
              "function" === typeof q.focus && q.focus();
              for (q = 0; q < B.length; q++)
                (w = B[q]),
                  (w.element.scrollLeft = w.left),
                  (w.element.scrollTop = w.top);
            }
            fd = !!Dd;
            Ed = Dd = null;
            a.current = c;
            Y = e;
            do
              try {
                for (q = a; null !== Y; ) {
                  var ub = Y.effectTag;
                  ub & 36 && Ji(q, Y.alternate, Y);
                  if (ub & 128) {
                    B = void 0;
                    var vb = Y.ref;
                    if (null !== vb) {
                      var Xc = Y.stateNode;
                      switch (Y.tag) {
                        case 5:
                          B = Xc;
                          break;
                        default:
                          B = Xc;
                      }
                      "function" === typeof vb ? vb(B) : (vb.current = B);
                    }
                  }
                  Y = Y.nextEffect;
                }
              } catch (wb) {
                if (null === Y) throw Error(u(330));
                Ei(Y, wb);
                Y = Y.nextEffect;
              }
            while (null !== Y);
            Y = null;
            Vf();
            W = f;
          } else a.current = c;
          if (qj) (qj = !1), (rj = a), (sj = b);
          else
            for (Y = e; null !== Y; )
              (b = Y.nextEffect), (Y.nextEffect = null), (Y = b);
          b = a.firstPendingTime;
          0 === b && (aj = null);
          1073741823 === b
            ? a === vj
              ? uj++
              : ((uj = 0), (vj = a))
            : (uj = 0);
          "function" === typeof Uj && Uj(c.stateNode, d);
          Z(a);
          if (Yi) throw ((Yi = !1), (a = Zi), (Zi = null), a);
          if ((W & ej) !== V) return null;
          gg();
          return null;
        }
        function Tj() {
          for (; null !== Y; ) {
            var a = Y.effectTag;
            0 !== (a & 256) && Gi(Y.alternate, Y);
            0 === (a & 512) ||
              qj ||
              ((qj = !0),
              dg(97, function () {
                Dj();
                return null;
              }));
            Y = Y.nextEffect;
          }
        }
        function Dj() {
          if (90 !== sj) {
            var a = 97 < sj ? 97 : sj;
            sj = 90;
            return cg(a, Vj);
          }
        }
        function Vj() {
          if (null === rj) return !1;
          var a = rj;
          rj = null;
          if ((W & (fj | gj)) !== V) throw Error(u(331));
          var b = W;
          W |= gj;
          for (a = a.current.firstEffect; null !== a; ) {
            try {
              var c = a;
              if (0 !== (c.effectTag & 512))
                switch (c.tag) {
                  case 0:
                  case 11:
                  case 15:
                  case 22:
                    Hi(5, c), Ii(5, c);
                }
            } catch (d) {
              if (null === a) throw Error(u(330));
              Ei(a, d);
            }
            c = a.nextEffect;
            a.nextEffect = null;
            a = c;
          }
          W = b;
          gg();
          return !0;
        }
        function Wj(a, b, c) {
          b = Ai(c, b);
          b = Xi(a, b, 1073741823);
          xg(a, b);
          a = xj(a, 1073741823);
          null !== a && Z(a);
        }
        function Ei(a, b) {
          if (3 === a.tag) Wj(a, a, b);
          else
            for (var c = a.return; null !== c; ) {
              if (3 === c.tag) {
                Wj(c, a, b);
                break;
              } else if (1 === c.tag) {
                var d = c.stateNode;
                if (
                  "function" === typeof c.type.getDerivedStateFromError ||
                  ("function" === typeof d.componentDidCatch &&
                    (null === aj || !aj.has(d)))
                ) {
                  a = Ai(b, a);
                  a = $i(c, a, 1073741823);
                  xg(c, a);
                  c = xj(c, 1073741823);
                  null !== c && Z(c);
                  break;
                }
              }
              c = c.return;
            }
        }
        function Oj(a, b, c) {
          var d = a.pingCache;
          null !== d && d.delete(b);
          T === a && U === c
            ? S === vi || (S === ui && 1073741823 === lj && $f() - Ti < pj)
              ? Ej(a, U)
              : (oj = !0)
            : Aj(a, c) &&
              ((b = a.lastPingedTime),
              (0 !== b && b < c) || ((a.lastPingedTime = c), Z(a)));
        }
        function Vi(a, b) {
          var c = a.stateNode;
          null !== c && c.delete(b);
          b = 0;
          0 === b && ((b = Gg()), (b = Hg(b, a, null)));
          a = xj(a, b);
          null !== a && Z(a);
        }
        var Rj;
        Rj = function (a, b, c) {
          var d = b.expirationTime;
          if (null !== a) {
            var e = b.pendingProps;
            if (a.memoizedProps !== e || K.current) rg = !0;
            else {
              if (d < c) {
                rg = !1;
                switch (b.tag) {
                  case 3:
                    hi(b);
                    Xh();
                    break;
                  case 5:
                    fh(b);
                    if (b.mode & 4 && 1 !== c && e.hidden)
                      return (
                        (b.expirationTime = b.childExpirationTime = 1), null
                      );
                    break;
                  case 1:
                    L(b.type) && Gf(b);
                    break;
                  case 4:
                    dh(b, b.stateNode.containerInfo);
                    break;
                  case 10:
                    d = b.memoizedProps.value;
                    e = b.type._context;
                    I(jg, e._currentValue);
                    e._currentValue = d;
                    break;
                  case 13:
                    if (null !== b.memoizedState) {
                      d = b.child.childExpirationTime;
                      if (0 !== d && d >= c) return ji(a, b, c);
                      I(M, M.current & 1);
                      b = $h(a, b, c);
                      return null !== b ? b.sibling : null;
                    }
                    I(M, M.current & 1);
                    break;
                  case 19:
                    d = b.childExpirationTime >= c;
                    if (0 !== (a.effectTag & 64)) {
                      if (d) return mi(a, b, c);
                      b.effectTag |= 64;
                    }
                    e = b.memoizedState;
                    null !== e && ((e.rendering = null), (e.tail = null));
                    I(M, M.current);
                    if (!d) return null;
                }
                return $h(a, b, c);
              }
              rg = !1;
            }
          } else rg = !1;
          b.expirationTime = 0;
          switch (b.tag) {
            case 2:
              d = b.type;
              null !== a &&
                ((a.alternate = null),
                (b.alternate = null),
                (b.effectTag |= 2));
              a = b.pendingProps;
              e = Cf(b, J.current);
              qg(b, c);
              e = oh(null, b, d, a, e, c);
              b.effectTag |= 1;
              if (
                "object" === typeof e &&
                null !== e &&
                "function" === typeof e.render &&
                void 0 === e.$$typeof
              ) {
                b.tag = 1;
                b.memoizedState = null;
                b.updateQueue = null;
                if (L(d)) {
                  var f = !0;
                  Gf(b);
                } else f = !1;
                b.memoizedState =
                  null !== e.state && void 0 !== e.state ? e.state : null;
                ug(b);
                var g = d.getDerivedStateFromProps;
                "function" === typeof g && Fg(b, d, g, a);
                e.updater = Jg;
                b.stateNode = e;
                e._reactInternalFiber = b;
                Ng(b, d, a, c);
                b = gi(null, b, d, !0, f, c);
              } else (b.tag = 0), R(null, b, e, c), (b = b.child);
              return b;
            case 16:
              a: {
                e = b.elementType;
                null !== a &&
                  ((a.alternate = null),
                  (b.alternate = null),
                  (b.effectTag |= 2));
                a = b.pendingProps;
                ob(e);
                if (1 !== e._status) throw e._result;
                e = e._result;
                b.type = e;
                f = b.tag = Xj(e);
                a = ig(e, a);
                switch (f) {
                  case 0:
                    b = di(null, b, e, a, c);
                    break a;
                  case 1:
                    b = fi(null, b, e, a, c);
                    break a;
                  case 11:
                    b = Zh(null, b, e, a, c);
                    break a;
                  case 14:
                    b = ai(null, b, e, ig(e.type, a), d, c);
                    break a;
                }
                throw Error(u(306, e, ""));
              }
              return b;
            case 0:
              return (
                (d = b.type),
                (e = b.pendingProps),
                (e = b.elementType === d ? e : ig(d, e)),
                di(a, b, d, e, c)
              );
            case 1:
              return (
                (d = b.type),
                (e = b.pendingProps),
                (e = b.elementType === d ? e : ig(d, e)),
                fi(a, b, d, e, c)
              );
            case 3:
              hi(b);
              d = b.updateQueue;
              if (null === a || null === d) throw Error(u(282));
              d = b.pendingProps;
              e = b.memoizedState;
              e = null !== e ? e.element : null;
              vg(a, b);
              zg(b, d, null, c);
              d = b.memoizedState.element;
              if (d === e) Xh(), (b = $h(a, b, c));
              else {
                if ((e = b.stateNode.hydrate))
                  (Ph = Jd(b.stateNode.containerInfo.firstChild)),
                    (Oh = b),
                    (e = Qh = !0);
                if (e)
                  for (c = Yg(b, null, d, c), b.child = c; c; )
                    (c.effectTag = (c.effectTag & -3) | 1024), (c = c.sibling);
                else R(a, b, d, c), Xh();
                b = b.child;
              }
              return b;
            case 5:
              return (
                fh(b),
                null === a && Uh(b),
                (d = b.type),
                (e = b.pendingProps),
                (f = null !== a ? a.memoizedProps : null),
                (g = e.children),
                Gd(d, e)
                  ? (g = null)
                  : null !== f && Gd(d, f) && (b.effectTag |= 16),
                ei(a, b),
                b.mode & 4 && 1 !== c && e.hidden
                  ? ((b.expirationTime = b.childExpirationTime = 1), (b = null))
                  : (R(a, b, g, c), (b = b.child)),
                b
              );
            case 6:
              return null === a && Uh(b), null;
            case 13:
              return ji(a, b, c);
            case 4:
              return (
                dh(b, b.stateNode.containerInfo),
                (d = b.pendingProps),
                null === a ? (b.child = Xg(b, null, d, c)) : R(a, b, d, c),
                b.child
              );
            case 11:
              return (
                (d = b.type),
                (e = b.pendingProps),
                (e = b.elementType === d ? e : ig(d, e)),
                Zh(a, b, d, e, c)
              );
            case 7:
              return R(a, b, b.pendingProps, c), b.child;
            case 8:
              return R(a, b, b.pendingProps.children, c), b.child;
            case 12:
              return R(a, b, b.pendingProps.children, c), b.child;
            case 10:
              a: {
                d = b.type._context;
                e = b.pendingProps;
                g = b.memoizedProps;
                f = e.value;
                var h = b.type._context;
                I(jg, h._currentValue);
                h._currentValue = f;
                if (null !== g)
                  if (
                    ((h = g.value),
                    (f = $e(h, f)
                      ? 0
                      : ("function" === typeof d._calculateChangedBits
                          ? d._calculateChangedBits(h, f)
                          : 1073741823) | 0),
                    0 === f)
                  ) {
                    if (g.children === e.children && !K.current) {
                      b = $h(a, b, c);
                      break a;
                    }
                  } else
                    for (
                      h = b.child, null !== h && (h.return = b);
                      null !== h;

                    ) {
                      var k = h.dependencies;
                      if (null !== k) {
                        g = h.child;
                        for (var l = k.firstContext; null !== l; ) {
                          if (l.context === d && 0 !== (l.observedBits & f)) {
                            1 === h.tag &&
                              ((l = wg(c, null)), (l.tag = 2), xg(h, l));
                            h.expirationTime < c && (h.expirationTime = c);
                            l = h.alternate;
                            null !== l &&
                              l.expirationTime < c &&
                              (l.expirationTime = c);
                            pg(h.return, c);
                            k.expirationTime < c && (k.expirationTime = c);
                            break;
                          }
                          l = l.next;
                        }
                      } else
                        g =
                          10 === h.tag
                            ? h.type === b.type
                              ? null
                              : h.child
                            : h.child;
                      if (null !== g) g.return = h;
                      else
                        for (g = h; null !== g; ) {
                          if (g === b) {
                            g = null;
                            break;
                          }
                          h = g.sibling;
                          if (null !== h) {
                            h.return = g.return;
                            g = h;
                            break;
                          }
                          g = g.return;
                        }
                      h = g;
                    }
                R(a, b, e.children, c);
                b = b.child;
              }
              return b;
            case 9:
              return (
                (e = b.type),
                (f = b.pendingProps),
                (d = f.children),
                qg(b, c),
                (e = sg(e, f.unstable_observedBits)),
                (d = d(e)),
                (b.effectTag |= 1),
                R(a, b, d, c),
                b.child
              );
            case 14:
              return (
                (e = b.type),
                (f = ig(e, b.pendingProps)),
                (f = ig(e.type, f)),
                ai(a, b, e, f, d, c)
              );
            case 15:
              return ci(a, b, b.type, b.pendingProps, d, c);
            case 17:
              return (
                (d = b.type),
                (e = b.pendingProps),
                (e = b.elementType === d ? e : ig(d, e)),
                null !== a &&
                  ((a.alternate = null),
                  (b.alternate = null),
                  (b.effectTag |= 2)),
                (b.tag = 1),
                L(d) ? ((a = !0), Gf(b)) : (a = !1),
                qg(b, c),
                Lg(b, d, e),
                Ng(b, d, e, c),
                gi(null, b, d, !0, a, c)
              );
            case 19:
              return mi(a, b, c);
          }
          throw Error(u(156, b.tag));
        };
        var Uj = null,
          Li = null;
        function Yj(a) {
          if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
          var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (b.isDisabled || !b.supportsFiber) return !0;
          try {
            var c = b.inject(a);
            Uj = function (a) {
              try {
                b.onCommitFiberRoot(
                  c,
                  a,
                  void 0,
                  64 === (a.current.effectTag & 64)
                );
              } catch (e) {}
            };
            Li = function (a) {
              try {
                b.onCommitFiberUnmount(c, a);
              } catch (e) {}
            };
          } catch (d) {}
          return !0;
        }
        function Zj(a, b, c, d) {
          this.tag = a;
          this.key = c;
          this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = b;
          this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
          this.mode = d;
          this.effectTag = 0;
          this.lastEffect = this.firstEffect = this.nextEffect = null;
          this.childExpirationTime = this.expirationTime = 0;
          this.alternate = null;
        }
        function Sh(a, b, c, d) {
          return new Zj(a, b, c, d);
        }
        function bi(a) {
          a = a.prototype;
          return !(!a || !a.isReactComponent);
        }
        function Xj(a) {
          if ("function" === typeof a) return bi(a) ? 1 : 0;
          if (void 0 !== a && null !== a) {
            a = a.$$typeof;
            if (a === gb) return 11;
            if (a === jb) return 14;
          }
          return 2;
        }
        function Sg(a, b) {
          var c = a.alternate;
          null === c
            ? ((c = Sh(a.tag, b, a.key, a.mode)),
              (c.elementType = a.elementType),
              (c.type = a.type),
              (c.stateNode = a.stateNode),
              (c.alternate = a),
              (a.alternate = c))
            : ((c.pendingProps = b),
              (c.effectTag = 0),
              (c.nextEffect = null),
              (c.firstEffect = null),
              (c.lastEffect = null));
          c.childExpirationTime = a.childExpirationTime;
          c.expirationTime = a.expirationTime;
          c.child = a.child;
          c.memoizedProps = a.memoizedProps;
          c.memoizedState = a.memoizedState;
          c.updateQueue = a.updateQueue;
          b = a.dependencies;
          c.dependencies =
            null === b
              ? null
              : {
                  expirationTime: b.expirationTime,
                  firstContext: b.firstContext,
                  responders: b.responders,
                };
          c.sibling = a.sibling;
          c.index = a.index;
          c.ref = a.ref;
          return c;
        }
        function Ug(a, b, c, d, e, f) {
          var g = 2;
          d = a;
          if ("function" === typeof a) bi(a) && (g = 1);
          else if ("string" === typeof a) g = 5;
          else
            a: switch (a) {
              case ab:
                return Wg(c.children, e, f, b);
              case fb:
                g = 8;
                e |= 7;
                break;
              case bb:
                g = 8;
                e |= 1;
                break;
              case cb:
                return (
                  (a = Sh(12, c, b, e | 8)),
                  (a.elementType = cb),
                  (a.type = cb),
                  (a.expirationTime = f),
                  a
                );
              case hb:
                return (
                  (a = Sh(13, c, b, e)),
                  (a.type = hb),
                  (a.elementType = hb),
                  (a.expirationTime = f),
                  a
                );
              case ib:
                return (
                  (a = Sh(19, c, b, e)),
                  (a.elementType = ib),
                  (a.expirationTime = f),
                  a
                );
              default:
                if ("object" === typeof a && null !== a)
                  switch (a.$$typeof) {
                    case db:
                      g = 10;
                      break a;
                    case eb:
                      g = 9;
                      break a;
                    case gb:
                      g = 11;
                      break a;
                    case jb:
                      g = 14;
                      break a;
                    case kb:
                      g = 16;
                      d = null;
                      break a;
                    case lb:
                      g = 22;
                      break a;
                  }
                throw Error(u(130, null == a ? a : typeof a, ""));
            }
          b = Sh(g, c, b, e);
          b.elementType = a;
          b.type = d;
          b.expirationTime = f;
          return b;
        }
        function Wg(a, b, c, d) {
          a = Sh(7, a, d, b);
          a.expirationTime = c;
          return a;
        }
        function Tg(a, b, c) {
          a = Sh(6, a, null, b);
          a.expirationTime = c;
          return a;
        }
        function Vg(a, b, c) {
          b = Sh(4, null !== a.children ? a.children : [], a.key, b);
          b.expirationTime = c;
          b.stateNode = {
            containerInfo: a.containerInfo,
            pendingChildren: null,
            implementation: a.implementation,
          };
          return b;
        }
        function ak(a, b, c) {
          this.tag = b;
          this.current = null;
          this.containerInfo = a;
          this.pingCache = this.pendingChildren = null;
          this.finishedExpirationTime = 0;
          this.finishedWork = null;
          this.timeoutHandle = -1;
          this.pendingContext = this.context = null;
          this.hydrate = c;
          this.callbackNode = null;
          this.callbackPriority = 90;
          this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
        }
        function Aj(a, b) {
          var c = a.firstSuspendedTime;
          a = a.lastSuspendedTime;
          return 0 !== c && c >= b && a <= b;
        }
        function xi(a, b) {
          var c = a.firstSuspendedTime,
            d = a.lastSuspendedTime;
          c < b && (a.firstSuspendedTime = b);
          if (d > b || 0 === c) a.lastSuspendedTime = b;
          b <= a.lastPingedTime && (a.lastPingedTime = 0);
          b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
        }
        function yi(a, b) {
          b > a.firstPendingTime && (a.firstPendingTime = b);
          var c = a.firstSuspendedTime;
          0 !== c &&
            (b >= c
              ? (a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0)
              : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1),
            b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
        }
        function Cj(a, b) {
          var c = a.lastExpiredTime;
          if (0 === c || c > b) a.lastExpiredTime = b;
        }
        function bk(a, b, c, d) {
          var e = b.current,
            f = Gg(),
            g = Dg.suspense;
          f = Hg(f, e, g);
          a: if (c) {
            c = c._reactInternalFiber;
            b: {
              if (dc(c) !== c || 1 !== c.tag) throw Error(u(170));
              var h = c;
              do {
                switch (h.tag) {
                  case 3:
                    h = h.stateNode.context;
                    break b;
                  case 1:
                    if (L(h.type)) {
                      h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                      break b;
                    }
                }
                h = h.return;
              } while (null !== h);
              throw Error(u(171));
            }
            if (1 === c.tag) {
              var k = c.type;
              if (L(k)) {
                c = Ff(c, k, h);
                break a;
              }
            }
            c = h;
          } else c = Af;
          null === b.context ? (b.context = c) : (b.pendingContext = c);
          b = wg(f, g);
          b.payload = { element: a };
          d = void 0 === d ? null : d;
          null !== d && (b.callback = d);
          xg(e, b);
          Ig(e, f);
          return f;
        }
        function ck(a) {
          a = a.current;
          if (!a.child) return null;
          switch (a.child.tag) {
            case 5:
              return a.child.stateNode;
            default:
              return a.child.stateNode;
          }
        }
        function dk(a, b) {
          a = a.memoizedState;
          null !== a &&
            null !== a.dehydrated &&
            a.retryTime < b &&
            (a.retryTime = b);
        }
        function ek(a, b) {
          dk(a, b);
          (a = a.alternate) && dk(a, b);
        }
        function fk(a, b, c) {
          c = null != c && !0 === c.hydrate;
          var d = new ak(a, b, c),
            e = Sh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
          d.current = e;
          e.stateNode = d;
          ug(e);
          a[Od] = d.current;
          c && 0 !== b && Jc(a, 9 === a.nodeType ? a : a.ownerDocument);
          this._internalRoot = d;
        }
        fk.prototype.render = function (a) {
          bk(a, this._internalRoot, null, null);
        };
        fk.prototype.unmount = function () {
          var a = this._internalRoot,
            b = a.containerInfo;
          bk(null, a, null, function () {
            b[Od] = null;
          });
        };
        function gk(a) {
          return !(
            !a ||
            (1 !== a.nodeType &&
              9 !== a.nodeType &&
              11 !== a.nodeType &&
              (8 !== a.nodeType ||
                " react-mount-point-unstable " !== a.nodeValue))
          );
        }
        function hk(a, b) {
          b ||
            ((b = a
              ? 9 === a.nodeType
                ? a.documentElement
                : a.firstChild
              : null),
            (b = !(
              !b ||
              1 !== b.nodeType ||
              !b.hasAttribute("data-reactroot")
            )));
          if (!b) for (var c; (c = a.lastChild); ) a.removeChild(c);
          return new fk(a, 0, b ? { hydrate: !0 } : void 0);
        }
        function ik(a, b, c, d, e) {
          var f = c._reactRootContainer;
          if (f) {
            var g = f._internalRoot;
            if ("function" === typeof e) {
              var h = e;
              e = function () {
                var a = ck(g);
                h.call(a);
              };
            }
            bk(b, g, a, e);
          } else {
            f = c._reactRootContainer = hk(c, d);
            g = f._internalRoot;
            if ("function" === typeof e) {
              var k = e;
              e = function () {
                var a = ck(g);
                k.call(a);
              };
            }
            Nj(function () {
              bk(b, g, a, e);
            });
          }
          return ck(g);
        }
        function jk(a, b, c) {
          var d =
            3 < arguments.length && void 0 !== arguments[3]
              ? arguments[3]
              : null;
          return {
            $$typeof: $a,
            key: null == d ? null : "" + d,
            children: a,
            containerInfo: b,
            implementation: c,
          };
        }
        wc = function (a) {
          if (13 === a.tag) {
            var b = hg(Gg(), 150, 100);
            Ig(a, b);
            ek(a, b);
          }
        };
        xc = function (a) {
          13 === a.tag && (Ig(a, 3), ek(a, 3));
        };
        yc = function (a) {
          if (13 === a.tag) {
            var b = Gg();
            b = Hg(b, a, null);
            Ig(a, b);
            ek(a, b);
          }
        };
        za = function (a, b, c) {
          switch (b) {
            case "input":
              Cb(a, c);
              b = c.name;
              if ("radio" === c.type && null != b) {
                for (c = a; c.parentNode; ) c = c.parentNode;
                c = c.querySelectorAll(
                  "input[name=" + JSON.stringify("" + b) + '][type="radio"]'
                );
                for (b = 0; b < c.length; b++) {
                  var d = c[b];
                  if (d !== a && d.form === a.form) {
                    var e = Qd(d);
                    if (!e) throw Error(u(90));
                    yb(d);
                    Cb(d, e);
                  }
                }
              }
              break;
            case "textarea":
              Kb(a, c);
              break;
            case "select":
              (b = c.value), null != b && Hb(a, !!c.multiple, b, !1);
          }
        };
        Fa = Mj;
        Ga = function (a, b, c, d, e) {
          var f = W;
          W |= 4;
          try {
            return cg(98, a.bind(null, b, c, d, e));
          } finally {
            (W = f), W === V && gg();
          }
        };
        Ha = function () {
          (W & (1 | fj | gj)) === V && (Lj(), Dj());
        };
        Ia = function (a, b) {
          var c = W;
          W |= 2;
          try {
            return a(b);
          } finally {
            (W = c), W === V && gg();
          }
        };
        function kk(a, b) {
          var c =
            2 < arguments.length && void 0 !== arguments[2]
              ? arguments[2]
              : null;
          if (!gk(b)) throw Error(u(200));
          return jk(a, b, null, c);
        }
        var lk = {
          Events: [
            Nc,
            Pd,
            Qd,
            xa,
            ta,
            Xd,
            function (a) {
              jc(a, Wd);
            },
            Da,
            Ea,
            id,
            mc,
            Dj,
            { current: !1 },
          ],
        };
        (function (a) {
          var b = a.findFiberByHostInstance;
          return Yj(
            n({}, a, {
              overrideHookState: null,
              overrideProps: null,
              setSuspenseHandler: null,
              scheduleUpdate: null,
              currentDispatcherRef: Wa.ReactCurrentDispatcher,
              findHostInstanceByFiber: function (a) {
                a = hc(a);
                return null === a ? null : a.stateNode;
              },
              findFiberByHostInstance: function (a) {
                return b ? b(a) : null;
              },
              findHostInstancesForRefresh: null,
              scheduleRefresh: null,
              scheduleRoot: null,
              setRefreshHandler: null,
              getCurrentFiber: null,
            })
          );
        })({
          findFiberByHostInstance: tc,
          bundleType: 0,
          version: "16.14.0",
          rendererPackageName: "react-dom",
        });
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lk;
        exports.createPortal = kk;
        exports.findDOMNode = function (a) {
          if (null == a) return null;
          if (1 === a.nodeType) return a;
          var b = a._reactInternalFiber;
          if (void 0 === b) {
            if ("function" === typeof a.render) throw Error(u(188));
            throw Error(u(268, Object.keys(a)));
          }
          a = hc(b);
          a = null === a ? null : a.stateNode;
          return a;
        };
        exports.flushSync = function (a, b) {
          if ((W & (fj | gj)) !== V) throw Error(u(187));
          var c = W;
          W |= 1;
          try {
            return cg(99, a.bind(null, b));
          } finally {
            (W = c), gg();
          }
        };
        exports.hydrate = function (a, b, c) {
          if (!gk(b)) throw Error(u(200));
          return ik(null, a, b, !0, c);
        };
        exports.render = function (a, b, c) {
          if (!gk(b)) throw Error(u(200));
          return ik(null, a, b, !1, c);
        };
        exports.unmountComponentAtNode = function (a) {
          if (!gk(a)) throw Error(u(40));
          return a._reactRootContainer
            ? (Nj(function () {
                ik(null, null, a, !1, function () {
                  a._reactRootContainer = null;
                  a[Od] = null;
                });
              }),
              !0)
            : !1;
        };
        exports.unstable_batchedUpdates = Mj;
        exports.unstable_createPortal = function (a, b) {
          return kk(
            a,
            b,
            2 < arguments.length && void 0 !== arguments[2]
              ? arguments[2]
              : null
          );
        };
        exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
          if (!gk(c)) throw Error(u(200));
          if (null == a || void 0 === a._reactInternalFiber) throw Error(u(38));
          return ik(a, b, c, !1, d);
        };
        exports.version = "16.14.0";

        /***/
      },
      /* 442 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        if (true) {
          module.exports = __webpack_require__(443);
        } else {
        }

        /***/
      },
      /* 443 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";
        /** @license React v0.19.1
         * scheduler.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var f, g, h, k, l;
        if (
          "undefined" === typeof window ||
          "function" !== typeof MessageChannel
        ) {
          var p = null,
            q = null,
            t = function () {
              if (null !== p)
                try {
                  var a = exports.unstable_now();
                  p(!0, a);
                  p = null;
                } catch (b) {
                  throw (setTimeout(t, 0), b);
                }
            },
            u = Date.now();
          exports.unstable_now = function () {
            return Date.now() - u;
          };
          f = function (a) {
            null !== p ? setTimeout(f, 0, a) : ((p = a), setTimeout(t, 0));
          };
          g = function (a, b) {
            q = setTimeout(a, b);
          };
          h = function () {
            clearTimeout(q);
          };
          k = function () {
            return !1;
          };
          l = exports.unstable_forceFrameRate = function () {};
        } else {
          var w = window.performance,
            x = window.Date,
            y = window.setTimeout,
            z = window.clearTimeout;
          if ("undefined" !== typeof console) {
            var A = window.cancelAnimationFrame;
            "function" !== typeof window.requestAnimationFrame &&
              console.error(
                "This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
              );
            "function" !== typeof A &&
              console.error(
                "This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"
              );
          }
          if ("object" === typeof w && "function" === typeof w.now)
            exports.unstable_now = function () {
              return w.now();
            };
          else {
            var B = x.now();
            exports.unstable_now = function () {
              return x.now() - B;
            };
          }
          var C = !1,
            D = null,
            E = -1,
            F = 5,
            G = 0;
          k = function () {
            return exports.unstable_now() >= G;
          };
          l = function () {};
          exports.unstable_forceFrameRate = function (a) {
            0 > a || 125 < a
              ? console.error(
                  "forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"
                )
              : (F = 0 < a ? Math.floor(1e3 / a) : 5);
          };
          var H = new MessageChannel(),
            I = H.port2;
          H.port1.onmessage = function () {
            if (null !== D) {
              var a = exports.unstable_now();
              G = a + F;
              try {
                D(!0, a) ? I.postMessage(null) : ((C = !1), (D = null));
              } catch (b) {
                throw (I.postMessage(null), b);
              }
            } else C = !1;
          };
          f = function (a) {
            D = a;
            C || ((C = !0), I.postMessage(null));
          };
          g = function (a, b) {
            E = y(function () {
              a(exports.unstable_now());
            }, b);
          };
          h = function () {
            z(E);
            E = -1;
          };
        }
        function J(a, b) {
          var c = a.length;
          a.push(b);
          a: for (;;) {
            var d = (c - 1) >>> 1,
              e = a[d];
            if (void 0 !== e && 0 < K(e, b)) (a[d] = b), (a[c] = e), (c = d);
            else break a;
          }
        }
        function L(a) {
          a = a[0];
          return void 0 === a ? null : a;
        }
        function M(a) {
          var b = a[0];
          if (void 0 !== b) {
            var c = a.pop();
            if (c !== b) {
              a[0] = c;
              a: for (var d = 0, e = a.length; d < e; ) {
                var m = 2 * (d + 1) - 1,
                  n = a[m],
                  v = m + 1,
                  r = a[v];
                if (void 0 !== n && 0 > K(n, c))
                  void 0 !== r && 0 > K(r, n)
                    ? ((a[d] = r), (a[v] = c), (d = v))
                    : ((a[d] = n), (a[m] = c), (d = m));
                else if (void 0 !== r && 0 > K(r, c))
                  (a[d] = r), (a[v] = c), (d = v);
                else break a;
              }
            }
            return b;
          }
          return null;
        }
        function K(a, b) {
          var c = a.sortIndex - b.sortIndex;
          return 0 !== c ? c : a.id - b.id;
        }
        var N = [],
          O = [],
          P = 1,
          Q = null,
          R = 3,
          S = !1,
          T = !1,
          U = !1;
        function V(a) {
          for (var b = L(O); null !== b; ) {
            if (null === b.callback) M(O);
            else if (b.startTime <= a)
              M(O), (b.sortIndex = b.expirationTime), J(N, b);
            else break;
            b = L(O);
          }
        }
        function W(a) {
          U = !1;
          V(a);
          if (!T)
            if (null !== L(N)) (T = !0), f(X);
            else {
              var b = L(O);
              null !== b && g(W, b.startTime - a);
            }
        }
        function X(a, b) {
          T = !1;
          U && ((U = !1), h());
          S = !0;
          var c = R;
          try {
            V(b);
            for (
              Q = L(N);
              null !== Q && (!(Q.expirationTime > b) || (a && !k()));

            ) {
              var d = Q.callback;
              if (null !== d) {
                Q.callback = null;
                R = Q.priorityLevel;
                var e = d(Q.expirationTime <= b);
                b = exports.unstable_now();
                "function" === typeof e ? (Q.callback = e) : Q === L(N) && M(N);
                V(b);
              } else M(N);
              Q = L(N);
            }
            if (null !== Q) var m = !0;
            else {
              var n = L(O);
              null !== n && g(W, n.startTime - b);
              m = !1;
            }
            return m;
          } finally {
            (Q = null), (R = c), (S = !1);
          }
        }
        function Y(a) {
          switch (a) {
            case 1:
              return -1;
            case 2:
              return 250;
            case 5:
              return 1073741823;
            case 4:
              return 1e4;
            default:
              return 5e3;
          }
        }
        var Z = l;
        exports.unstable_IdlePriority = 5;
        exports.unstable_ImmediatePriority = 1;
        exports.unstable_LowPriority = 4;
        exports.unstable_NormalPriority = 3;
        exports.unstable_Profiling = null;
        exports.unstable_UserBlockingPriority = 2;
        exports.unstable_cancelCallback = function (a) {
          a.callback = null;
        };
        exports.unstable_continueExecution = function () {
          T || S || ((T = !0), f(X));
        };
        exports.unstable_getCurrentPriorityLevel = function () {
          return R;
        };
        exports.unstable_getFirstCallbackNode = function () {
          return L(N);
        };
        exports.unstable_next = function (a) {
          switch (R) {
            case 1:
            case 2:
            case 3:
              var b = 3;
              break;
            default:
              b = R;
          }
          var c = R;
          R = b;
          try {
            return a();
          } finally {
            R = c;
          }
        };
        exports.unstable_pauseExecution = function () {};
        exports.unstable_requestPaint = Z;
        exports.unstable_runWithPriority = function (a, b) {
          switch (a) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
              break;
            default:
              a = 3;
          }
          var c = R;
          R = a;
          try {
            return b();
          } finally {
            R = c;
          }
        };
        exports.unstable_scheduleCallback = function (a, b, c) {
          var d = exports.unstable_now();
          if ("object" === typeof c && null !== c) {
            var e = c.delay;
            e = "number" === typeof e && 0 < e ? d + e : d;
            c = "number" === typeof c.timeout ? c.timeout : Y(a);
          } else (c = Y(a)), (e = d);
          c = e + c;
          a = {
            id: P++,
            callback: b,
            priorityLevel: a,
            startTime: e,
            expirationTime: c,
            sortIndex: -1,
          };
          e > d
            ? ((a.sortIndex = e),
              J(O, a),
              null === L(N) && a === L(O) && (U ? h() : (U = !0), g(W, e - d)))
            : ((a.sortIndex = c), J(N, a), T || S || ((T = !0), f(X)));
          return a;
        };
        exports.unstable_shouldYield = function () {
          var a = exports.unstable_now();
          V(a);
          var b = L(N);
          return (
            (b !== Q &&
              null !== Q &&
              null !== b &&
              null !== b.callback &&
              b.startTime <= a &&
              b.expirationTime < Q.expirationTime) ||
            k()
          );
        };
        exports.unstable_wrapCallback = function (a) {
          var b = R;
          return function () {
            var c = R;
            R = b;
            try {
              return a.apply(this, arguments);
            } finally {
              R = c;
            }
          };
        };

        /***/
      },
      /* 444 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        /*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
        // css base code, injected by the css-loader
        // eslint-disable-next-line func-names
        module.exports = function (useSourceMap) {
          var list = []; // return the list of modules as css string

          list.toString = function toString() {
            return this.map(function (item) {
              var content = cssWithMappingToString(item, useSourceMap);

              if (item[2]) {
                return "@media ".concat(item[2], " {").concat(content, "}");
              }

              return content;
            }).join("");
          }; // import a list of modules into the list
          // eslint-disable-next-line func-names

          list.i = function (modules, mediaQuery, dedupe) {
            if (typeof modules === "string") {
              // eslint-disable-next-line no-param-reassign
              modules = [[null, modules, ""]];
            }

            var alreadyImportedModules = {};

            if (dedupe) {
              for (var i = 0; i < this.length; i++) {
                // eslint-disable-next-line prefer-destructuring
                var id = this[i][0];

                if (id != null) {
                  alreadyImportedModules[id] = true;
                }
              }
            }

            for (var _i = 0; _i < modules.length; _i++) {
              var item = [].concat(modules[_i]);

              if (dedupe && alreadyImportedModules[item[0]]) {
                // eslint-disable-next-line no-continue
                continue;
              }

              if (mediaQuery) {
                if (!item[2]) {
                  item[2] = mediaQuery;
                } else {
                  item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
                }
              }

              list.push(item);
            }
          };

          return list;
        };

        function cssWithMappingToString(item, useSourceMap) {
          var content = item[1] || ""; // eslint-disable-next-line prefer-destructuring

          var cssMapping = item[3];

          if (!cssMapping) {
            return content;
          }

          if (useSourceMap && typeof btoa === "function") {
            var sourceMapping = toComment(cssMapping);
            var sourceURLs = cssMapping.sources.map(function (source) {
              return "/*# sourceURL="
                .concat(cssMapping.sourceRoot || "")
                .concat(source, " */");
            });
            return [content]
              .concat(sourceURLs)
              .concat([sourceMapping])
              .join("\n");
          }

          return [content].join("\n");
        } // Adapted from convert-source-map (MIT)

        function toComment(sourceMap) {
          // eslint-disable-next-line no-undef
          var base64 = btoa(
            unescape(encodeURIComponent(JSON.stringify(sourceMap)))
          );
          var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(
            base64
          );
          return "/*# ".concat(data, " */");
        }

        /***/
      },
      /* 445 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        // ESM COMPAT FLAG
        __webpack_require__.r(__webpack_exports__);

        // EXPORTS
        __webpack_require__.d(
          __webpack_exports__,
          "initializeVideoViewer",
          function () {
            return /* reexport */ initializeVideoViewer;
          }
        );
        __webpack_require__.d(
          __webpack_exports__,
          "renderControlsToDOM",
          function () {
            return /* binding */ src_renderControlsToDOM;
          }
        );
        __webpack_require__.d(
          __webpack_exports__,
          "renderFullscreenButton",
          function () {
            return /* binding */ src_renderFullscreenButton;
          }
        );
        __webpack_require__.d(
          __webpack_exports__,
          "unmountWebViewerVideo",
          function () {
            return /* binding */ src_unmountWebViewerVideo;
          }
        );

        // EXTERNAL MODULE: ./node_modules/react-app-polyfill/ie11.js
        var ie11 = __webpack_require__(249);

        // EXTERNAL MODULE: ./node_modules/react-app-polyfill/stable.js
        var stable = __webpack_require__(265);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
        var es_array_concat = __webpack_require__(57);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js
        var es_object_assign = __webpack_require__(206);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.create.js
        var es_object_create = __webpack_require__(208);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-float.js
        var es_parse_float = __webpack_require__(134);

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
        var regenerator = __webpack_require__(11);
        var regenerator_default = /*#__PURE__*/ __webpack_require__.n(
          regenerator
        );

        // EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js
        var runtime = __webpack_require__(50);

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js
        var asyncToGenerator = __webpack_require__(18);
        var asyncToGenerator_default = /*#__PURE__*/ __webpack_require__.n(
          asyncToGenerator
        );

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.for-each.js
        var es_array_for_each = __webpack_require__(87);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
        var es_object_to_string = __webpack_require__(58);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.values.js
        var es_object_values = __webpack_require__(124);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js
        var es_promise = __webpack_require__(137);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
        var web_dom_collections_for_each = __webpack_require__(101);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
        var es_array_filter = __webpack_require__(121);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.some.js
        var es_array_some = __webpack_require__(204);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.sort.js
        var es_array_sort = __webpack_require__(123);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-iso-string.js
        var es_date_to_iso_string = __webpack_require__(221);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.date.to-string.js
        var es_date_to_string = __webpack_require__(136);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
        var es_object_keys = __webpack_require__(211);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/web.timers.js
        var web_timers = __webpack_require__(102);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
        var es_array_iterator = __webpack_require__(62);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.slice.js
        var es_array_buffer_slice = __webpack_require__(141);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.parse-int.js
        var es_parse_int = __webpack_require__(133);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.exec.js
        var es_regexp_exec = __webpack_require__(82);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
        var es_string_iterator = __webpack_require__(77);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.replace.js
        var es_string_replace = __webpack_require__(213);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.split.js
        var es_string_split = __webpack_require__(130);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.uint8-array.js
        var es_typed_array_uint8_array = __webpack_require__(143);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.copy-within.js
        var es_typed_array_copy_within = __webpack_require__(144);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.every.js
        var es_typed_array_every = __webpack_require__(145);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.fill.js
        var es_typed_array_fill = __webpack_require__(146);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.filter.js
        var es_typed_array_filter = __webpack_require__(147);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.find.js
        var es_typed_array_find = __webpack_require__(148);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.find-index.js
        var es_typed_array_find_index = __webpack_require__(149);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.for-each.js
        var es_typed_array_for_each = __webpack_require__(150);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.from.js
        var es_typed_array_from = __webpack_require__(231);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.includes.js
        var es_typed_array_includes = __webpack_require__(151);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.index-of.js
        var es_typed_array_index_of = __webpack_require__(152);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.iterator.js
        var es_typed_array_iterator = __webpack_require__(153);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.join.js
        var es_typed_array_join = __webpack_require__(154);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.last-index-of.js
        var es_typed_array_last_index_of = __webpack_require__(155);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.map.js
        var es_typed_array_map = __webpack_require__(156);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reduce.js
        var es_typed_array_reduce = __webpack_require__(157);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reduce-right.js
        var es_typed_array_reduce_right = __webpack_require__(158);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.reverse.js
        var es_typed_array_reverse = __webpack_require__(159);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.set.js
        var es_typed_array_set = __webpack_require__(160);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.slice.js
        var es_typed_array_slice = __webpack_require__(161);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.some.js
        var es_typed_array_some = __webpack_require__(162);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.sort.js
        var es_typed_array_sort = __webpack_require__(163);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.subarray.js
        var es_typed_array_subarray = __webpack_require__(164);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.to-locale-string.js
        var es_typed_array_to_locale_string = __webpack_require__(165);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.typed-array.to-string.js
        var es_typed_array_to_string = __webpack_require__(166);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
        var web_dom_collections_iterator = __webpack_require__(233);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/web.url.js
        var web_url = __webpack_require__(234);

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js
        var classCallCheck = __webpack_require__(240);
        var classCallCheck_default = /*#__PURE__*/ __webpack_require__.n(
          classCallCheck
        );

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js
        var createClass = __webpack_require__(241);
        var createClass_default = /*#__PURE__*/ __webpack_require__.n(
          createClass
        );

        // CONCATENATED MODULE: ./node_modules/srt-webvtt/index.js

        var srt_webvtt_WebVTTConverter = /*#__PURE__*/ (function () {
          function WebVTTConverter(resource) {
            classCallCheck_default()(this, WebVTTConverter);

            this.resource = resource;
          }

          createClass_default()(
            WebVTTConverter,
            [
              {
                key: "blobToBuffer",
                value: function blobToBuffer() {
                  var _this = this;

                  return new Promise(function (resolve, reject) {
                    var reader = new FileReader();
                    reader.addEventListener("loadend", function (event) {
                      var buf = event.target.result;
                      resolve(new Uint8Array(buf));
                    });
                    reader.addEventListener("error", function () {
                      return reject("Error while reading the Blob object");
                    });
                    reader.readAsArrayBuffer(_this.resource);
                  });
                },
                /**
                 * @param {*} blob
                 * @param {*} success
                 * @param {*} fail
                 */
              },
              {
                key: "getURL",
                value: function getURL() {
                  var _this2 = this;

                  return new Promise(function (resolve, reject) {
                    if (!(_this2.resource instanceof Blob))
                      return reject(
                        "Expecting resource to be a Blob but something else found."
                      );
                    if (!FileReader)
                      return reject("No FileReader constructor found");
                    if (!TextDecoder)
                      return reject("No TextDecoder constructor found");
                    return WebVTTConverter.blobToString(
                      _this2.resource,
                      function (decoded) {
                        var vttString = "WEBVTT FILE\r\n\r\n";
                        var text = vttString.concat(
                          WebVTTConverter.toVTT(decoded)
                        );
                        var blob = new Blob([text], {
                          type: "text/vtt",
                        });
                        _this2.objectURL = URL.createObjectURL(blob);
                        return resolve(_this2.objectURL);
                      },
                      function () {
                        _this2.blobToBuffer().then(function (buffer) {
                          var utf8str = new TextDecoder("utf-8").decode(buffer);
                          var vttString = "WEBVTT FILE\r\n\r\n";
                          var text = vttString.concat(
                            WebVTTConverter.toVTT(utf8str)
                          );
                          var blob = new Blob([text], {
                            type: "text/vtt",
                          });
                          _this2.objectURL = URL.createObjectURL(blob);
                          return resolve(_this2.objectURL);
                        });
                      }
                    );
                  });
                },
              },
              {
                key: "release",
                value: function release() {
                  URL.createObjectURL(this.objectURL);
                },
              },
            ],
            [
              {
                key: "blobToString",
                value: function blobToString(blob, success, fail) {
                  var reader = new FileReader();
                  reader.addEventListener("loadend", function (event) {
                    var text = event.target.result;
                    success(text);
                  });
                  reader.addEventListener("error", function () {
                    return fail();
                  });
                  reader.readAsText(blob);
                },
                /**
                 * @param {*} utf8str
                 */
              },
              {
                key: "toVTT",
                value: function toVTT(utf8str) {
                  return utf8str
                    .replace(/\{\\([ibu])\}/g, "</$1>")
                    .replace(/\{\\([ibu])1\}/g, "<$1>")
                    .replace(/\{([ibu])\}/g, "<$1>")
                    .replace(/\{\/([ibu])\}/g, "</$1>")
                    .replace(/(\d\d:\d\d:\d\d),(\d\d\d)/g, "$1.$2")
                    .concat("\r\n\r\n");
                },
                /**
                 * @param {*} str
                 */
              },
              {
                key: "toTypedArray",
                value: function toTypedArray(str) {
                  var result = [];
                  str.split("").forEach(function (each) {
                    result.push(parseInt(each.charCodeAt(), 16));
                  });
                  return Uint8Array.from(result);
                },
              },
            ]
          );

          return WebVTTConverter;
        })();

        window.WebVTTConverter = srt_webvtt_WebVTTConverter;
        /* harmony default export */ var srt_webvtt = srt_webvtt_WebVTTConverter;
        // CONCATENATED MODULE: ./src/lib/api/Video/functions/getTimeFromFrame.js
        /**
         * Returns the conversion of a frame number to a time stamp (in milliseconds).
         * @function
         * @memberof Video
         * @param {number} frame The frame number to convert.
         * @returns {number} The resulting time.
         */
        function getTimeFromFrame(fps) {
          return function (frame) {
            return (frame - 1) / fps;
          };
        }

        /* harmony default export */ var functions_getTimeFromFrame = getTimeFromFrame;
        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
        var es_array_includes = __webpack_require__(122);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
        var es_string_includes = __webpack_require__(127);

        // CONCATENATED MODULE: ./src/lib/api/Video/functions/extractFrames.js

        /**
         * Returns an array of the canvases for the frame numbers passed in.
         * If a second call is made, then the previous call will return immediately and may not have all the canvases.
         * @function
         * @memberof Video
         * @param {Array} frameNumbers An array of all the frame numbers to retrieve canvases for.
         * @returns {Promise<Array>} An array for some or all the canvases for the frame numbers passed in.
         * If you want to guarantee all the canvases from one call then wait for the promise to finish before making another call.
         */

        function extractFrames(
          iframeWindow,
          src,
          useCrossOrigin,
          randomizeRequest
        ) {
          var hiddenVideoElement = iframeWindow.document.createElement("video"); // The source of the video can be local (blob) or be external
          // in case of local, we cannot append the external-only query params
          // otherwise it will give us a 404

          if (src.includes("blob")) {
            hiddenVideoElement.src = src;
          } else {
            // If the URL already contains a set of query parameters, we need to
            // continue appending query parameters to the URL
            var queryParamChar = src.includes("?") ? "&" : "?";
            hiddenVideoElement.src =
              "".concat(src).concat(queryParamChar, "extractFrames=true") +
              (randomizeRequest ? "&" + Math.random() : "");

            if (useCrossOrigin) {
              hiddenVideoElement.crossOrigin = "anonymous";
            }
          }

          hiddenVideoElement.muted = true;
          return /*#__PURE__*/ (function () {
            var _ref = asyncToGenerator_default()(
              /*#__PURE__*/ regenerator_default.a.mark(function _callee(
                frameNumbers
              ) {
                var frames, i, frameNumber, canvas, ctx;
                return regenerator_default.a.wrap(function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        frames = {};
                        i = 0;

                      case 2:
                        if (!(i < frameNumbers.length)) {
                          _context.next = 21;
                          break;
                        }

                        if (
                          !(
                            JSON.stringify(frameNumbers) !==
                            JSON.stringify(frameNumbers)
                          )
                        ) {
                          _context.next = 5;
                          break;
                        }

                        return _context.abrupt("break", 21);

                      case 5:
                        frameNumber = frameNumbers[i];
                        hiddenVideoElement.currentTime = functions_getTimeFromFrame(
                          1
                        )(frameNumber); // async

                        _context.next = 9;
                        return hiddenVideoElement.play();

                      case 9:
                        if (
                          !(
                            JSON.stringify(frameNumbers) !==
                            JSON.stringify(frameNumbers)
                          )
                        ) {
                          _context.next = 11;
                          break;
                        }

                        return _context.abrupt("break", 21);

                      case 11:
                        canvas = iframeWindow.document.createElement("canvas");
                        canvas.width = 100;
                        canvas.height = 56;
                        ctx = canvas.getContext("2d");
                        ctx.drawImage(
                          hiddenVideoElement,
                          0,
                          0,
                          canvas.width,
                          canvas.height
                        );
                        frames[frameNumber] = canvas; // sync

                        hiddenVideoElement.pause();

                      case 18:
                        i++;
                        _context.next = 2;
                        break;

                      case 21:
                        hiddenVideoElement.pause();
                        return _context.abrupt("return", frames);

                      case 23:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })
            );

            return function (_x) {
              return _ref.apply(this, arguments);
            };
          })();
        }

        /* harmony default export */ var functions_extractFrames = extractFrames;
        // CONCATENATED MODULE: ./src/utils/isSafari.js
        var isSafari = /^((?!chrome|android).)*safari/i.test(
          navigator.userAgent
        );
        /* harmony default export */ var utils_isSafari = isSafari;
        // CONCATENATED MODULE: ./src/lib/api/Video/index.js

        /* eslint-disable object-shorthand */

        /**
         * Represents a Video. Constructor is private. Use {@link https://www.pdftron.com/api/web/CoreControls.Document.html#getVideo__anchor} to retrieve the instance.
         * @class
         */

        var Video = /*#__PURE__*/ (function () {
          var _ref2 = asyncToGenerator_default()(
            /*#__PURE__*/ regenerator_default.a.mark(function _callee(_ref) {
              var src,
                thumbnailSrc,
                annotationManager,
                iframeWindow,
                passedInDuration,
                useCrossOrigin,
                randomizeRequest,
                videoElement,
                trackElement,
                width,
                height,
                duration,
                readyState,
                fps,
                totalFrames,
                t,
                videoAnnotations,
                getSrc,
                loadSubtitles,
                getSubtitleTrackElement,
                getElement,
                getReadyState,
                getDuration,
                getThumbnailSrc,
                getFormattedDuration,
                getFormattedCurrentTime,
                getFormattedTime,
                addAnnotations,
                deleteAnnotations,
                getFrameAnnotations,
                updateAnnotationsToTime,
                getAllAnnotations,
                getFrameFromTime,
                getCurrentFrame,
                getNextFrame,
                getPrevFrame,
                getTotalFrames,
                hasAnnotation,
                annotManagerDeleteAnnotations;
              return regenerator_default.a.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      (src = _ref.src),
                        (thumbnailSrc = _ref.thumbnailSrc),
                        (annotationManager = _ref.annotationManager),
                        (iframeWindow = _ref.iframeWindow),
                        (passedInDuration = _ref.duration),
                        (useCrossOrigin = _ref.useCrossOrigin),
                        (randomizeRequest = _ref.randomizeRequest);
                      // const waitForLoadedMetaData = (_videoElement) => {
                      //   return new Promise((resolve) => {
                      //     let once = false;
                      //     _videoElement.addEventListener('durationchange', () => {
                      //       if (!once) {
                      //         once = true;
                      //         let {
                      //           duration,
                      //         } = _videoElement;
                      //         resolve({
                      //           duration,
                      //         });
                      //       }
                      //     });
                      //   });
                      // };
                      videoElement = iframeWindow.document.createElement(
                        "video"
                      );
                      videoElement.className = "video"; // videoElement.style.cssText = 'width: 100%';

                      trackElement = iframeWindow.document.createElement(
                        "track"
                      );
                      trackElement["default"] = true;
                      trackElement.mode = "hidden";

                      if (!utils_isSafari) {
                        videoElement.appendChild(trackElement);
                      } // Fixed width and height. Black bars will be added and video will
                      // be centered if it is smaller or different aspect ratio.
                      // Video can be made bigger/smaller with zoom. This makes it so that
                      // annotation position won't be messed up, like it would be when
                      // changing width and height.

                      width = 640;
                      height = 360; // Assume this default duration for the video until we get the real value.

                      duration = 20 || false;
                      readyState = 0;
                      fps = 1;
                      totalFrames = Math.ceil(fps * duration) + 1; // A video of one second has 2 frames if fps 1

                      t = window.setInterval(function () {
                        if (videoElement.readyState > 0) {
                          if (!passedInDuration) {
                            duration = videoElement.duration;
                            totalFrames = Math.ceil(fps * duration) + 1;
                          }

                          readyState = videoElement.readyState;
                          clearInterval(t);
                        }
                      }, 200); // const [{ width, height, duration }] = await Promise.all([
                      //   waitForLoadedMetaData(videoElement),
                      // ]);

                      videoAnnotations = {};

                      getSrc = function getSrc() {
                        return src;
                      };
                      /**
             * Loads subtitles in the HTML video element.
             * @function
             * @param {File} file The subtitles file. Can be an srt file or vtt file. https://developer.mozilla.org/en-US/docs/Web/API/File
             * @example
              WebViewer(...)
                .then(function(instance) {
                  const { docViewer } = instance;
                  docViewer.on('documentLoaded', () => {
                    const video = docViewer.getDocument().getVideo();
                    ...
                    video.loadSubtitles(file);
                    ...
                  });
                });
              */

                      loadSubtitles = function loadSubtitles(file) {
                        var fileBlob = new Blob([file], {
                          type: "text/vtt",
                        });
                        var vttConverter = new srt_webvtt(fileBlob);
                        vttConverter
                          .getURL()
                          .then(function (url) {
                            trackElement.src = url;
                            trackElement.track.mode = "showing";
                          })
                          ["catch"](function (err) {
                            console.error(err);
                          });
                      };
                      /**
                       * Returns the underlying HTML track element
                       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track
                       * @function
                       * @returns {object}
                       */

                      getSubtitleTrackElement = function getSubtitleTrackElement() {
                        return trackElement;
                      };
                      /**
                       * Returns the underlying HTML5 video element
                       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video
                       * @function
                       * @returns {object}
                       */

                      getElement = function getElement() {
                        return videoElement;
                      };
                      /**
                       * Returns the video readystate
                       * https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState
                       * @function
                       * @returns {number}
                       */

                      getReadyState = function getReadyState() {
                        return readyState;
                      };
                      /**
                       * Returns the duration of the video. Guaranteed to be correct when the readyState
                       * of the video is greater than 0.
                       * https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/readyState
                       * @function
                       * @returns {number}
                       */

                      getDuration = function getDuration() {
                        return duration;
                      };

                      getThumbnailSrc = function getThumbnailSrc() {
                        return thumbnailSrc;
                      };

                      getFormattedDuration = function getFormattedDuration() {
                        return getFormattedTime(duration);
                      };
                      /**
                       * Returns a string representing the curretn seeked to time. Formatted as hh:mm:ss.
                       * @function
                       * @returns {string} A string representing the curretn seeked to time. Formatted as hh:mm:ss.
                       */

                      getFormattedCurrentTime = function getFormattedCurrentTime() {
                        return getFormattedTime(videoElement.currentTime);
                      };
                      /**
                       * Returns a string representing the passed in seconds. Formatted as hh:mm:ss.
                       * @function
                       * @param {number} seconds
                       * @returns {string} A string representing the passed in seconds. Formatted as hh:mm:ss.
                       */

                      getFormattedTime = function getFormattedTime(seconds) {
                        try {
                          return new Date(Math.round(seconds) * 1000)
                            .toISOString()
                            .substr(11, 8);
                        } catch (e) {
                          console.warn(e);
                          return "00:00:00";
                        }
                      };

                      addAnnotations = function addAnnotations(annotations) {
                        annotations.forEach(function (annotation) {
                          var Id = annotation["Id"];

                          if (isNaN(parseFloat(annotation.startTime))) {
                            annotation.startTime = parseFloat(
                              videoElement.currentTime
                            );
                            annotation.endTime = parseFloat(
                              videoElement.currentTime
                            );
                          }

                          if (isNaN(parseFloat(annotation.endTime))) {
                            annotation.endTime = parseFloat(
                              videoElement.currentTime
                            );
                          }

                          if (annotation.endTime < annotation.startTime) {
                            annotation.endTime = annotation.startTime;
                          }

                          videoAnnotations[Id] = annotation;
                        });
                      };

                      deleteAnnotations = function deleteAnnotations(
                        annotations
                      ) {
                        annotations.forEach(function (_ref3) {
                          var Id = _ref3["Id"];
                          delete videoAnnotations[Id];
                        });
                      };

                      getFrameAnnotations = function getFrameAnnotations(
                        frame
                      ) {
                        var annotations = [];
                        Object.keys(videoAnnotations).forEach(function (id) {
                          var annotation = videoAnnotations[id];
                          var startTime = annotation.startTime,
                            endTime = annotation.endTime;
                          var startFrame = getFrameFromTime(
                            parseFloat(startTime)
                          );
                          var endFrame = getFrameFromTime(parseFloat(endTime));

                          if (!isNaN(startFrame)) {
                            if (!isNaN(endFrame)) {
                              if (frame >= startFrame && frame <= endFrame) {
                                annotations.push(annotation);
                              }
                            } else if (frame === startFrame) {
                              annotations.push(annotation);
                            }
                          }
                        });
                        return annotations;
                      };
                      /**
                       * Renders the saved annotations on the annotation canvas at the passed in time
                       * @param {number} newTime A number representing a specific time in the video. The value must be in milliseconds.
                       */

                      updateAnnotationsToTime = function updateAnnotationsToTime(
                        newTime
                      ) {
                        var newFrame = getFrameFromTime(newTime);
                        var allFrameAnnotations = getAllAnnotations();
                        var newFrameAnnotations = getFrameAnnotations(newFrame);
                        allFrameAnnotations.forEach(function (annot) {
                          annot["NoView"] = true;
                        });
                        newFrameAnnotations.forEach(function (annot) {
                          annot["NoView"] = false;
                        });
                        var selectedAnnotations = annotationManager.getSelectedAnnotations();
                        var notVisibleSelectedAnnotations = selectedAnnotations.filter(
                          function (annotation) {
                            return annotation.NoView;
                          }
                        );
                        notVisibleSelectedAnnotations.forEach(function (annot) {
                          return annotationManager.deselectAnnotation(annot);
                        });
                        annotationManager["drawAnnotationsFromList"](
                          allFrameAnnotations
                        );
                      };
                      /**
                       * Returns all annotations for all frames in the video.
                       * @returns {Array} An array of all annotations.
                       */

                      getAllAnnotations = function getAllAnnotations() {
                        return Object.values(videoAnnotations);
                      };
                      /**
                       * Returns the conversion of a time stamp to a frame number.
                       * @function
                       * @param {number} time A number representing a specific time in the video. The value must be in milliseconds.
                       * @returns {number} The resulting frame number.
                       */

                      getFrameFromTime = function getFrameFromTime(time) {
                        return Math.min(
                          Math.round(time * fps + 1),
                          totalFrames
                        );
                      };

                      getCurrentFrame = function getCurrentFrame() {
                        return getFrameFromTime(videoElement.currentTime);
                      };

                      getNextFrame = function getNextFrame() {
                        return getCurrentFrame() + 1 < getTotalFrames()
                          ? getCurrentFrame() + 1
                          : getTotalFrames();
                      };

                      getPrevFrame = function getPrevFrame() {
                        return getCurrentFrame() - 1 < 0
                          ? 0
                          : getCurrentFrame() - 1;
                      };
                      /**
                       * Returns the total number of frames in the video.
                       * @function
                       * @returns {number} The total number of frames in the video.
                       */

                      getTotalFrames = function getTotalFrames() {
                        return totalFrames;
                      };
                      /**
                       * Returns true if the frame number passed in has at least one annotation associated with it. Returns false otherwise.
                       * @function
                       * @returns {boolean}
                       */

                      hasAnnotation = function hasAnnotation(frameNumber) {
                        var annotations = getAllAnnotations();
                        return annotations.some(function (_ref4) {
                          var startTime = _ref4.startTime;
                          return frameNumber === getFrameFromTime(startTime);
                        });
                      };

                      annotManagerDeleteAnnotations = function annotManagerDeleteAnnotations() {
                        // Sorting annotations so that annotations with InReplyTo are at the front of the array.
                        // This so that deleteAnnotations doesn't clear InReplyTo for replies. This works because
                        // the parent annotations will have zero replies and won't be able to clear InReplyTo if we
                        // delete its children first.
                        var allFrameAnnotations = getAllAnnotations();
                        allFrameAnnotations.sort(function (a, b) {
                          if (a["InReplyTo"]) {
                            return -1;
                          }

                          if (b["InReplyTo"]) {
                            return 1;
                          }

                          return 0;
                        }); // force is set to true to be able to delete in readOnly mode.

                        annotationManager["deleteAnnotations"](
                          allFrameAnnotations,
                          true,
                          true
                        );
                      };

                      return _context.abrupt("return", {
                        width: width,
                        height: height,
                        getSrc: getSrc,
                        getDuration: getDuration,
                        getElement: getElement,
                        loadSubtitles: loadSubtitles,
                        getSubtitleTrackElement: getSubtitleTrackElement,
                        getReadyState: getReadyState,
                        getThumbnailSrc: getThumbnailSrc,
                        addAnnotations: addAnnotations,
                        deleteAnnotations: deleteAnnotations,
                        getAllAnnotations: getAllAnnotations,
                        updateAnnotationsToTime: updateAnnotationsToTime,
                        getCurrentFrame: getCurrentFrame,
                        getNextFrame: getNextFrame,
                        getPrevFrame: getPrevFrame,
                        getTimeFromFrame: functions_getTimeFromFrame(fps),
                        getFrameFromTime: getFrameFromTime,
                        getTotalFrames: getTotalFrames,
                        extractFrames: functions_extractFrames(
                          iframeWindow,
                          src,
                          useCrossOrigin,
                          randomizeRequest
                        ),
                        getFormattedDuration: getFormattedDuration,
                        getFormattedTime: getFormattedTime,
                        getFormattedCurrentTime: getFormattedCurrentTime,
                        hasAnnotation: hasAnnotation,
                        annotManagerDeleteAnnotations: annotManagerDeleteAnnotations,
                      });

                    case 39:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            })
          );

          return function Video(_x) {
            return _ref2.apply(this, arguments);
          };
        })();

        /* harmony default export */ var api_Video = Video;
        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js
        var es_array_map = __webpack_require__(59);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.constructor.js
        var es_regexp_constructor = __webpack_require__(215);

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.regexp.to-string.js
        var es_regexp_to_string = __webpack_require__(132);

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/slicedToArray.js
        var slicedToArray = __webpack_require__(6);
        var slicedToArray_default = /*#__PURE__*/ __webpack_require__.n(
          slicedToArray
        );

        // CONCATENATED MODULE: ./src/utils/checkLicense.js

        function verify(_x, _x2, _x3) {
          return _verify.apply(this, arguments);
        }

        function _verify() {
          _verify = asyncToGenerator_default()(
            /*#__PURE__*/ regenerator_default.a.mark(function _callee(
              publicKeyJwk,
              signatureStr,
              message
            ) {
              var signatureArr, signature, publicKey, data, ok;
              return regenerator_default.a.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      signatureArr = signatureStr.split(":").map(function (x) {
                        return +x;
                      });
                      signature = new Uint8Array(signatureArr).buffer;
                      _context.next = 4;
                      return window.crypto.subtle.importKey(
                        "jwk",
                        publicKeyJwk,
                        {
                          name: "RSASSA-PKCS1-v1_5",
                          hash: {
                            name: "SHA-512",
                          },
                        },
                        false,
                        ["verify"]
                      );

                    case 4:
                      publicKey = _context.sent;
                      data = new TextEncoder().encode(message);
                      _context.next = 8;
                      return window.crypto.subtle.verify(
                        {
                          name: "RSASSA-PKCS1-v1_5",
                        },
                        publicKey,
                        signature,
                        data
                      );

                    case 8:
                      ok = _context.sent;
                      return _context.abrupt("return", ok);

                    case 10:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            })
          );
          return _verify.apply(this, arguments);
        }

        function checkLicense(_x4) {
          return _checkLicense.apply(this, arguments);
        }

        function _checkLicense() {
          _checkLicense = asyncToGenerator_default()(
            /*#__PURE__*/ regenerator_default.a.mark(function _callee2(
              license
            ) {
              var _license$split,
                _license$split2,
                email,
                signature,
                emailRegex,
                publicKey;

              return regenerator_default.a.wrap(function _callee2$(_context2) {
                while (1) {
                  switch ((_context2.prev = _context2.next)) {
                    case 0:
                      (_license$split = license.split("///")),
                        (_license$split2 = slicedToArray_default()(
                          _license$split,
                          2
                        )),
                        (email = _license$split2[0]),
                        (signature = _license$split2[1]); // Check that email is an actual email and not garbage

                      emailRegex = RegExp(
                        /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
                      );

                      if (!emailRegex.test(email)) {
                        _context2.next = 7;
                        break;
                      }

                      publicKey = JSON.parse(
                        '{"alg":"RS512","e":"AQAB","ext":true,"key_ops":["verify"],"kty":"RSA","n":"qAfFuSOYpWNsCH5ORl13iUE26CiwucZOfloau2bMFG0kcHaMus7ox9kGWn3XSgmqJTWqLNfNpvCxCbptyAXkjBCf3-XWIt-aeJBWzVGm5ByPBw9r-4edelazRb9XqJDtzwqIaXNZiEuxlnDMGHKVZ3frq5lS91h9z9jGCSwQwvwxBUX1Ta3kCfLr8MCSPe6zt5iVIYZlHOts99KTat-owsbI-Beom5Y6VFcX_mzQHKBK8GPfVMS51Qwx2H19KdHkRRDLJh30rXsoH0NDB8EAgmpBBPq_J9jDqc24K_HHccuQg1huWz4eYQ7FIc4EB4g0QdGkCQeJd7wyf2DmTtI6BmRCVWlVVkC1jEGHPNttS8MgYBbQTMI0go4qK4azkOmLv_h3w4tVpWZt6EG5q4TIadazdV7VphYUMO5Eot-f2mRCp_w5P2qvvVLlZJjFmgCZRz0MqWm8rVlxI5dcIR3v3yGHiN5idP62V9VGFS0QQXV0M715oL8ySiDJrVVcwJaHUbl3hnNlaFDTOOK6dH9Y9uyb8U0Nb6Fkje4k5MhrPBi9RD2iAivUMP-lkKdt7S2gQvjtkVD80mq4ulU1BagKkoqTBiYA9-k0CJrPYjSFl4g7-SfnIxs0p_3_cCup9eOQAU5LPEWOb4qH37tDtMvSCcXNK5pE8ofD8b1AjEsw5rU"}'
                      );
                      _context2.next = 6;
                      return verify(publicKey, signature, email);

                    case 6:
                      return _context2.abrupt("return", _context2.sent);

                    case 7:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2);
            })
          );
          return _checkLicense.apply(this, arguments);
        }

        /* harmony default export */ var utils_checkLicense = checkLicense;
        // CONCATENATED MODULE: ./src/utils/calculateGuideSize.js
        var ratioToWidth = function ratioToWidth(ratio) {
          // 16:9 is our base for calculation and represent a width of 100%
          // other aspect ratios are calculated using the "rule of three"
          switch (ratio) {
            case "1.85":
            case "2.35":
            case "16:9":
              return 100;
            // 16 / 9 => 1.77

            case "4:3":
              return 75.14;
            // 4 / 3 = 1.33 => (1.33 * 100) / 1.77 => 75.14

            case "1:1":
              return 56.49;
            // 1 / 1 = 1 => (1 * 100) / 1.77 => 56.49

            default:
              console.error("ratioToWidth : Unknown width");
              break;
          }
        };

        var ratioToHeight = function ratioToHeight(ratio) {
          switch (ratio) {
            case "1.85":
              return 96.09;

            case "2.35":
              return 75.64;

            case "16:9":
            case "4:3":
            case "1:1":
              return 100;

            default:
              console.error("ratioToHeight : Unknown height");
              break;
          }
        };

        var calculateGuideSize = function calculateGuideSize(options) {
          var document = options.document,
            guidesContainerElement = options.guidesContainerElement,
            guidesContainerMainChildElement =
              options.guidesContainerMainChildElement,
            currentAspectRatio = options.currentAspectRatio;

          if (document) {
            guidesContainerElement = document.getElementById(
              "guides-container"
            );
            guidesContainerMainChildElement = document.getElementById(
              "guides-container-main-child"
            );
          }

          var _guidesContainerEleme = guidesContainerElement.getBoundingClientRect(),
            width = _guidesContainerEleme.width,
            height = _guidesContainerEleme.height;

          guidesContainerMainChildElement.style.width = "".concat(
            (ratioToWidth(currentAspectRatio) / 100) * width,
            "px"
          );
          guidesContainerMainChildElement.style.height = "".concat(
            (ratioToHeight(currentAspectRatio) / 100) * height,
            "px"
          );
        };

        /* harmony default export */ var utils_calculateGuideSize = calculateGuideSize;
        // CONCATENATED MODULE: ./src/lib/api/VideoDocument/index.js

        /* eslint-disable object-shorthand */

        var URL_getFileData = "";

        function VideoDocument(_x, _x2, _x3, _x4) {
          return _VideoDocument.apply(this, arguments);
        }

        function _VideoDocument() {
          _VideoDocument = asyncToGenerator_default()(
            /*#__PURE__*/ regenerator_default.a.mark(function _callee4(
              instance,
              docViewer,
              iframeWindow,
              options
            ) {
              var license,
                randomizeRequest,
                useCrossOrigin,
                _options$license,
                _options$randomizeReq,
                _options$useCrossOrig,
                verified,
                onceWatermarkDraw;

              return regenerator_default.a.wrap(function _callee4$(_context4) {
                while (1) {
                  switch ((_context4.prev = _context4.next)) {
                    case 0:
                      // For backwards compatibility
                      if (typeof options === "string") {
                        license = options;
                      } else {
                        _options$license = options["license"];
                        license =
                          _options$license === void 0 ? "" : _options$license;
                        _options$randomizeReq = options["randomizeRequest"];
                        randomizeRequest =
                          _options$randomizeReq === void 0
                            ? false
                            : _options$randomizeReq;
                        _options$useCrossOrig = options["useCrossOrigin"];
                        useCrossOrigin =
                          _options$useCrossOrig === void 0
                            ? false
                            : _options$useCrossOrig;
                      }

                      _context4.next = 3;
                      return utils_checkLicense(license);

                    case 3:
                      verified = _context4.sent;
                      onceWatermarkDraw = false;
                      return _context4.abrupt("return", {
                        getFileData: (function () {
                          var _getFileData = asyncToGenerator_default()(
                            /*#__PURE__*/ regenerator_default.a.mark(
                              function _callee() {
                                var response, arrayBuffer;
                                return regenerator_default.a.wrap(
                                  function _callee$(_context) {
                                    while (1) {
                                      switch ((_context.prev = _context.next)) {
                                        case 0:
                                          _context.next = 2;
                                          return fetch(URL_getFileData);

                                        case 2:
                                          response = _context.sent;
                                          _context.next = 5;
                                          return response.arrayBuffer();

                                        case 5:
                                          arrayBuffer = _context.sent;
                                          return _context.abrupt(
                                            "return",
                                            arrayBuffer
                                          );

                                        case 7:
                                        case "end":
                                          return _context.stop();
                                      }
                                    }
                                  },
                                  _callee
                                );
                              }
                            )
                          );

                          function getFileData() {
                            return _getFileData.apply(this, arguments);
                          }

                          return getFileData;
                        })(),

                        /**
                         * Only available on documents of type 'video'. Returns the instance of {@link Video} associated with the document.
                         * @method CoreControls.Document#getVideo
                         * @returns {object} the instance of {@link Video} associated with the document.
                         */
                        getVideo: function getVideo() {
                          var me = this;
                          return me.video;
                        },
                        getPageCount: function getPageCount() {
                          return 1;
                        },
                        getLayersArray: function getLayersArray() {
                          return Promise.resolve([]);
                        },
                        extractXFDF: function extractXFDF() {},
                        loadThumbnailAsync: function loadThumbnailAsync(
                          pageNumber,
                          onLoadThumbnail
                        ) {
                          var me = this;
                          var thumbnailsSrc = me.video["getThumbnailSrc"]();
                          var img = document.createElement("img");
                          img.src = thumbnailsSrc;
                          onLoadThumbnail(img);
                        },
                        loadTextData: function loadTextData() {},
                        getBookmarks: function getBookmarks() {
                          return Promise.resolve(this["bookmarks"]);
                        },
                        loadAsync: (function () {
                          var _loadAsync = asyncToGenerator_default()(
                            /*#__PURE__*/ regenerator_default.a.mark(
                              function _callee2(_ref, onDocumentLoaded) {
                                var url,
                                  thumbnail,
                                  duration,
                                  me,
                                  annotationManager,
                                  video,
                                  width,
                                  height,
                                  matrix,
                                  pageInfo;
                                return regenerator_default.a.wrap(
                                  function _callee2$(_context2) {
                                    while (1) {
                                      switch (
                                        (_context2.prev = _context2.next)
                                      ) {
                                        case 0:
                                          (url = _ref.url),
                                            (thumbnail = _ref.thumbnail),
                                            (duration = _ref.duration);
                                          me = this;
                                          URL_getFileData = url;
                                          annotationManager = docViewer[
                                            "getAnnotationManager"
                                          ]();
                                          _context2.prev = 4;
                                          _context2.next = 7;
                                          return api_Video({
                                            src: url,
                                            thumbnailSrc: thumbnail,
                                            annotationManager: annotationManager,
                                            iframeWindow: iframeWindow,
                                            duration: duration,
                                            useCrossOrigin: useCrossOrigin,
                                            randomizeRequest: randomizeRequest,
                                          });

                                        case 7:
                                          video = _context2.sent;
                                          (width = video["width"]),
                                            (height = video["height"]);
                                          matrix = new iframeWindow["XODText"][
                                            "Matrix2D"
                                          ]();
                                          matrix["initCoordinates"](
                                            1,
                                            0,
                                            0,
                                            -1,
                                            -0,
                                            width
                                          );
                                          pageInfo = new iframeWindow[
                                            "PageInfo"
                                          ](width, height);
                                          pageInfo["setFromPageData"]({
                                            width: width,
                                            height: height,
                                            matrix: matrix,
                                            rotation: 0,
                                            // Needed for correct annotation placement
                                            pageNum: 1, // Doesn't seem to be needed
                                          });
                                          me["addPage"](pageInfo);
                                          me.video = video; // Bind to annotationCreated because this happens before the annotation
                                          // shows up on the notes panel. This is useful so that we can set the data
                                          // required to sort the annotation on the notes panel.

                                          Object.values(
                                            instance.Tools.ToolNames
                                          ).forEach(function (toolName) {
                                            var bindTool = function bindTool(
                                              toolName
                                            ) {
                                              var tool = docViewer.getTool(
                                                toolName
                                              );

                                              if (tool) {
                                                tool.on(
                                                  "annotationCreated",
                                                  function (annot) {
                                                    annot.startTime = video.getElement().currentTime;
                                                    annot.endTime = video.getElement().currentTime;
                                                  }
                                                );
                                              }
                                            };

                                            bindTool("".concat(toolName));
                                            bindTool("".concat(toolName, "2"));
                                            bindTool("".concat(toolName, "3"));
                                            bindTool("".concat(toolName, "4"));
                                          });
                                          annotationManager["on"](
                                            "annotationChanged",
                                            function (
                                              changedAnnotations,
                                              type
                                            ) {
                                              if (
                                                docViewer["getDocument"]()[
                                                  "getType"
                                                ]() !== "video"
                                              ) {
                                                return;
                                              } // Adding to our annotation manager.
                                              // Add created annotations or add annotations that are loaded at the beginning.
                                              // Load everything into our annotation manager

                                              var video = me.video;
                                              changedAnnotations.forEach(
                                                function (annotation) {
                                                  if (video) {
                                                    if (type === "add") {
                                                      video["addAnnotations"]([
                                                        annotation,
                                                      ]);
                                                    } else if (
                                                      type === "delete"
                                                    ) {
                                                      video[
                                                        "deleteAnnotations"
                                                      ]([annotation]);
                                                    }
                                                  } else {
                                                    console.warn(
                                                      "Skipping annotation: No video available."
                                                    );
                                                  }
                                                }
                                              );
                                              video.updateAnnotationsToTime(
                                                video.getElement().currentTime
                                              );
                                            }
                                          ); // bindings have been set, so it is save to call

                                          onDocumentLoaded();
                                          _context2.next = 23;
                                          break;

                                        case 20:
                                          _context2.prev = 20;
                                          _context2.t0 = _context2["catch"](4);
                                          console.error("Error:", _context2.t0);

                                        case 23:
                                        case "end":
                                          return _context2.stop();
                                      }
                                    }
                                  },
                                  _callee2,
                                  this,
                                  [[4, 20]]
                                );
                              }
                            )
                          );

                          function loadAsync(_x5, _x6) {
                            return _loadAsync.apply(this, arguments);
                          }

                          return loadAsync;
                        })(),
                        loadCanvasAsync: (function () {
                          var _loadCanvasAsync = asyncToGenerator_default()(
                            /*#__PURE__*/ regenerator_default.a.mark(
                              function _callee3(_ref2) {
                                var drawComplete,
                                  drawProgressive,
                                  pageNumber,
                                  getZoom,
                                  me,
                                  video,
                                  videoContainer,
                                  videoElement,
                                  src,
                                  videoGuidesContainer,
                                  videoGuidesChild,
                                  videoGuidesChildInner,
                                  videoGuidesChildLeft,
                                  videoGuidesChildRight,
                                  videoGuidesChildTop,
                                  videoGuidesChildBottom,
                                  fullScreenButtonContainer,
                                  annotationManager;
                                return regenerator_default.a.wrap(
                                  function _callee3$(_context3) {
                                    while (1) {
                                      switch (
                                        (_context3.prev = _context3.next)
                                      ) {
                                        case 0:
                                          (drawComplete =
                                            _ref2["drawComplete"]),
                                            (drawProgressive =
                                              _ref2["drawProgressive"]),
                                            (pageNumber = _ref2["pageNumber"]),
                                            (getZoom = _ref2["getZoom"]);
                                          me = this;

                                          if (!(pageNumber !== 1)) {
                                            _context3.next = 5;
                                            break;
                                          }

                                          console.error(
                                            "Error: Page number must be 1 for video"
                                          );
                                          return _context3.abrupt("return");

                                        case 5:
                                          video = me.video;

                                          if (me.videoContainer) {
                                            videoContainer = me.videoContainer;
                                          } else {
                                            videoElement = video[
                                              "getElement"
                                            ]();
                                            src = video["getSrc"]();
                                            videoElement.src = src;

                                            if (useCrossOrigin) {
                                              videoElement.crossOrigin =
                                                "anonymous";
                                            }

                                            videoElement.src =
                                              src +
                                              (randomizeRequest
                                                ? "?" + Math.random()
                                                : ""); // Append video to container

                                            videoContainer = document.createElement(
                                              "div"
                                            );
                                            videoContainer.appendChild(
                                              videoElement
                                            ); // Append video guides to container, hidden by default

                                            videoGuidesContainer = document.createElement(
                                              "div"
                                            );
                                            videoGuidesContainer.setAttribute(
                                              "id",
                                              "guides-container"
                                            );
                                            videoGuidesChild = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChild.setAttribute(
                                              "id",
                                              "guides-container-main-child"
                                            );
                                            videoGuidesChildInner = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChildInner.setAttribute(
                                              "id",
                                              "guides-container-main-child-inner"
                                            );
                                            videoGuidesChild.appendChild(
                                              videoGuidesChildInner
                                            );
                                            videoGuidesChildLeft = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChildLeft.setAttribute(
                                              "id",
                                              "guides-container-left-child"
                                            );
                                            videoGuidesChildRight = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChildRight.setAttribute(
                                              "id",
                                              "guides-container-right-child"
                                            );
                                            videoGuidesChildTop = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChildTop.setAttribute(
                                              "id",
                                              "guides-container-top-child"
                                            );
                                            videoGuidesChildBottom = document.createElement(
                                              "div"
                                            );
                                            videoGuidesChildBottom.setAttribute(
                                              "id",
                                              "guides-container-bottom-child"
                                            );
                                            videoGuidesContainer.appendChild(
                                              videoGuidesChildLeft
                                            );
                                            videoGuidesContainer.appendChild(
                                              videoGuidesChildTop
                                            );
                                            videoGuidesContainer.appendChild(
                                              videoGuidesChild
                                            );
                                            videoGuidesContainer.appendChild(
                                              videoGuidesChildRight
                                            );
                                            videoGuidesContainer.appendChild(
                                              videoGuidesChildBottom
                                            ); // Fullscreen button

                                            fullScreenButtonContainer = document.createElement(
                                              "div"
                                            );
                                            fullScreenButtonContainer.setAttribute(
                                              "id",
                                              "fullscreen-button-container"
                                            );
                                            videoContainer.appendChild(
                                              fullScreenButtonContainer
                                            );
                                            src_renderFullscreenButton(
                                              instance,
                                              video,
                                              fullScreenButtonContainer
                                            );
                                            videoContainer.appendChild(
                                              videoGuidesContainer
                                            );
                                            me.videoContainer = videoContainer;
                                          }

                                          annotationManager = docViewer[
                                            "getAnnotationManager"
                                          ]();

                                          if (!onceWatermarkDraw && !verified) {
                                            onceWatermarkDraw = true;
                                            annotationManager["on"](
                                              "annotationsDrawn",
                                              function () {
                                                var annotationCanvas = iframeWindow.document.querySelector(
                                                  "canvas.auxiliary"
                                                );

                                                if (
                                                  annotationCanvas &&
                                                  docViewer["getDocument"]()[
                                                    "getType"
                                                  ]() === "video"
                                                ) {
                                                  var ctx = annotationCanvas.getContext(
                                                    "2d"
                                                  ); // ctx.clearRect(0, 0, annotationCanvas.width, annotationCanvas.height);

                                                  ctx.save();
                                                  ctx.globalAlpha = 0.3; // TODO: Font size should depend on annotation canvas width. This is fine for now since it is constant.

                                                  var fontSize = 64 * getZoom();
                                                  ctx.font = "".concat(
                                                    fontSize,
                                                    "px Arial"
                                                  );
                                                  ctx.fillStyle = "#00A5E4";
                                                  var watermarkText =
                                                    "PDFTRON DEMO";
                                                  var metrics = ctx.measureText(
                                                    watermarkText
                                                  );
                                                  var width = metrics.width; // height is font size

                                                  var height = fontSize; // change the origin coordinate to the middle of the context

                                                  ctx.translate(
                                                    annotationCanvas.width / 2,
                                                    annotationCanvas.height / 2
                                                  ); // rotate the context (so it's rotated around its center)

                                                  ctx.rotate(
                                                    -Math.atan(
                                                      annotationCanvas.height /
                                                        annotationCanvas.width
                                                    )
                                                  ); // as the origin is now at the center, just need to center the text

                                                  ctx.fillText(
                                                    watermarkText,
                                                    -width / 2,
                                                    height / 2
                                                  );
                                                  ctx.restore();
                                                }
                                              }
                                            );
                                          }

                                          drawProgressive(videoContainer);
                                          drawComplete(videoContainer, 0);

                                        case 11:
                                        case "end":
                                          return _context3.stop();
                                      }
                                    }
                                  },
                                  _callee3,
                                  this
                                );
                              }
                            )
                          );

                          function loadCanvasAsync(_x7) {
                            return _loadCanvasAsync.apply(this, arguments);
                          }

                          return loadCanvasAsync;
                        })(),
                      });

                    case 6:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4);
            })
          );
          return _VideoDocument.apply(this, arguments);
        }

        /* harmony default export */ var api_VideoDocument = VideoDocument;
        // CONCATENATED MODULE: ./src/lib/api/loadVideo.js
        function loadVideo(instance, docViewer) {
          // Style needed for just the video element, not the UI.
          var style = instance.iframeWindow.document.createElement("style");
          style.innerHTML =
            "\n    /*\n    * Needed to fix extra space in video container\n    * https://stackoverflow.com/questions/36389996/html5-video-container-slightly-larger-than-video\n    */\n    video {\n      width: 100%;\n      height: 100%;\n      display: flex;\n    }\n\n    .pageContainer {\n      background-color: transparent !important;\n      border: none !important;\n      box-shadow: none !important;\n    }\n\n    .custom-container {\n      width: 100%;\n    }\n\n    .right-panel {\n      /* needed for weird issue with animation */\n      display: flex !important;\n    }\n\n    .Note.expanded {\n      box-shadow: 0 0 0 1pt #656565;\n    }\n\n    .resize-bar {\n      border-right: none;\n    }\n\n    /* Reset WebViewer's styles to unblock subtitles */\n    .hacc.canvas1 {\n      width: 100%;\n      transform: none;\n      transform-origin: unset;\n      z-index: unset !important;\n      /* position: unset !important; */\n    }\n\n    /* Video guides */\n    #guides-container {\n      position: absolute;\n      top: 0;\n      width: 100%;\n      height: 100%;\n\n      /* This will be toggle from none to grid */\n      display: none;\n\n      grid-template-columns: 1fr min-content 1fr;\n      grid-template-rows: 1fr min-content 1fr;\n      grid-column-gap: 0px;\n      grid-row-gap: 0px;\n    }\n\n    #guides-container-main-child {\n      position: relative;\n      border: 2px solid hsla(0,0%,100%,.8);\n      transition: width 0.250s ease-out, height 0.250s ease-out;\n\n      grid-column: 2 / 3;\n      grid-row: 2 / 3;\n    }\n\n    #guides-container-left-child {\n      background-color: black;\n      opacity: 0.4;\n      grid-column: 1 / 2;\n      grid-row: 1 / 4;\n    }\n\n    #guides-container-right-child {\n      background-color: black;\n      opacity: 0.4;\n      grid-column: 3 / 4;\n      grid-row: 1 / 4;\n    }\n\n    #guides-container-top-child {\n      background-color: black;\n      opacity: 0.4;\n      grid-column: 1 / 4;\n      grid-row: 1 / 2;\n    }\n\n    #guides-container-bottom-child {\n      background-color: black;\n      opacity: 0.4;\n      grid-column: 1 / 4;\n      grid-row: 3 / 4;\n    }\n\n    #guides-container-main-child-inner {\n      position: relative;\n      width: 80%;\n      height: 80%;\n      margin: 0 auto;\n      top: 50%;\n      transform: translateY(-50%);\n      border: 2px solid hsla(0,0%,100%,.5);\n    }\n\n    #fullscreen-button-container {\n      position: absolute;\n      top: 12px;\n      right: 12px;\n      width: 22px;\n      height: 22px;\n      z-index: 9999;\n    }\n\n    #fullscreen-button-container button {\n      border: none;\n      outline: none;\n      background-color: transparent;\n      cursor: pointer;\n      width: 100%;\n      height: 100%;\n      padding: 0;\n    }\n\n    @media (max-width: 900px) {\n      .right-panel {\n        display: none !important;\n      }\n\n      .document-content-container {\n        width: 100% !important;\n      }\n\n      .footer {\n        width: 100% !important;\n      }\n    }\n  ";
          instance.iframeWindow.document
            .getElementsByTagName("head")[0]
            .appendChild(style); // SAFARI: Fixes a bug with the div with the iframe shifting up slightly shifting
          // above the screen when making an annotation.

          var parentStyle = document.createElement("style");
          parentStyle.innerHTML = "iframe {\n    position: absolute;\n  } ";
          document.getElementsByTagName("head")[0].appendChild(parentStyle);
          return function (url, duration) {
            docViewer["loadAsync"](
              {
                url: url,
                duration: duration,
              },
              {
                type: "video",
              }
            );
          };
        }

        /* harmony default export */ var api_loadVideo = loadVideo;
        // CONCATENATED MODULE: ./src/lib/api/setVideoWatermark.js
        function setVideoWatermark(instance, docViewer, iframeWindow) {
          return function (options) {
            var annotationManager = docViewer["getAnnotationManager"]();
            annotationManager["on"]("annotationsDrawn", function () {
              var annotationCanvas = iframeWindow.document.querySelector(
                "canvas.auxiliary"
              );

              if (annotationCanvas) {
                var ctx = annotationCanvas.getContext("2d");
                ctx.save();
                ctx.globalAlpha = options.globalAlpha || 0.3; // TODO: Font size should depend on annotation canvas width. This is fine for now since it is constant.

                var fontSize = 64 * instance.getZoomLevel();
                ctx.font = "".concat(fontSize, "px Arial");
                ctx.fillStyle = options.fillStyle || "#00A5E4";
                var watermarkText = options.watermarkText;
                var metrics = ctx.measureText(watermarkText);
                var width = metrics.width; // height is font size

                var height = fontSize; // change the origin coordinate to the middle of the context

                ctx.translate(
                  annotationCanvas.width / 2,
                  annotationCanvas.height / 2
                ); // rotate the context (so it's rotated around its center)

                ctx.rotate(
                  -Math.atan(annotationCanvas.height / annotationCanvas.width)
                ); // as the origin is now at the center, just need to center the text

                ctx.fillText(watermarkText, -width / 2, height / 2);
                ctx.restore();
              }
            });
          };
        }

        /* harmony default export */ var api_setVideoWatermark = setVideoWatermark;
        // CONCATENATED MODULE: ./src/lib/index.js

        /**
         * This is an addon for WebViewer that allows loading HTML5 videos (.mp4, ogg, webm) so that their video frames can be annotated.
         * See the npm package on {@link https://www.npmjs.com/package/@pdftron/webviewer-video @pdftron/webviewer-video} for more information.
         * @module @pdftron/webviewer-video
         */

        /**
 * @typedef {Object} VideoFunctions
 * @property {function} loadVideo
 * Loads a video for the WebViewer instance passed into initializeVideoViewer.
 * First param is the video url.
 * Second optional param is the duration of the video in seconds. Pass this in for faster loading of the video.
 * @property {function} setVideoWatermark
 * Set a custom watermark to be applied on the video.
 * First param is an options object containing three keys: watermarkText {string}, fillStyle {string} and globalAlpha {float}.
 * @example
  WebViewer(...)
    .then(function(instance) {
      const license = '---- Insert commercial license key here after purchase ----';
      const { loadVideo, setVideoWatermark } = await initializeVideoViewer(instance, license);

      loadVideo('https://www.mydomain.com/my_video_url');
      setVideoWatermark({
        watermarkText: 'My watermark text',
        fillStyle: '#F00',
        globalAlpha: 0.3
      });
    });
 */

        /**
 * Initializes the video viewer so that webviewer can load videos.
 * @alias module:@pdftron/webviewer-video.initializeVideoViewer
 * @param {Object} instance The WebViewer instance
 * @param {Object} options Options object.
 * @param {string} [options.license=''] The WebViewer Video license.
 * @param {boolean} [options.useCrossOrigin=false] Sets crossorigin='anonymous' on the video element. CORS requests for the video element will have the credentials flag set to 'same-origin'.
 * @param {boolean} [options.randomizeRequests=false] Useful when `useCrossOrigin` is set to true. Sometimes, when testing, the browser can cache requests and respond with an old header. Use this option to reset the cache. This fix will be necessary when changing `useCrossOrigin` from false to true for the first time.
 * @returns {VideoFunctions} A promise that resolves to an object containing the functions needed to load videos in WebViewer.
 * @example
  WebViewer(...)
    .then(function(instance) {
      const license = '---- Insert commercial license key here after purchase ----';
      const { loadVideo } = await initializeVideoViewer(
        instance,
        {
          license,
          useCrossOrigin: true,
          randomizeRequest: true,
        },
      );

      loadVideo('https://www.mydomain.com/my_video_url');
    });
 */

        var initializeVideoViewer = /*#__PURE__*/ (function () {
          var _ref = asyncToGenerator_default()(
            /*#__PURE__*/ regenerator_default.a.mark(function _callee(
              instance,
              options
            ) {
              var docViewer,
                Annotations,
                CoreControls,
                iframeWindow,
                currentVersion,
                minimumVerson,
                oldSerialize,
                newSerialize,
                oldDeserialize,
                newDeserialize;
              return regenerator_default.a.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      (docViewer = instance["docViewer"]),
                        (Annotations = instance["Annotations"]),
                        (CoreControls = instance["CoreControls"]),
                        (iframeWindow = instance["iframeWindow"]); // Disable WebViewer elements that are not useful in WebViewer Video

                      instance.disableElements([
                        "searchButton",
                        "pageNavOverlay",
                        "viewControlsButton",
                        "panToolButton",
                        "underlineToolGroupButton",
                        "strikeoutToolGroupButton",
                        "highlightToolGroupButton",
                        "squigglyToolGroupButton",
                        "signatureToolButton",
                        "leftPanel",
                        "leftPanelButton",
                        "toolbarGroup-Edit",
                        "downloadButton",
                        "printButton",
                        "annotationCommentButton",
                        "toggleNotesButton",
                        "annotationNoteConnectorLine",
                      ]);
                      currentVersion = CoreControls.getVersion();
                      minimumVerson = "7.1.0";

                      if (currentVersion < minimumVerson) {
                        console.error(
                          "WebViewer-video requires WebViewer version "
                            .concat(
                              minimumVerson,
                              " or greater. Your Webviewer version is "
                            )
                            .concat(currentVersion)
                        );
                      }

                      oldSerialize = Annotations.Annotation.prototype.serialize;

                      newSerialize = function newSerialize() {
                        // call the old serialize function.
                        // Returns an Element
                        var el = oldSerialize.apply(this, arguments); // Add our custom attribute to the element

                        if (this.startTime >= 0) {
                          el.setAttribute("start-time", this.startTime);
                        }

                        if (this.endTime >= 0) {
                          el.setAttribute("end-time", this.endTime);
                        }

                        return el;
                      };

                      Annotations.Annotation.prototype.serialize = newSerialize; // Save a reference to the old deserialize function

                      oldDeserialize =
                        Annotations.Annotation.prototype.deserialize;

                      newDeserialize = function newDeserialize(el) {
                        // call the old deserialze function
                        oldDeserialize.apply(this, arguments); // Apply the custom attribute to the Annotation

                        var startTime = parseFloat(
                          el.getAttribute("start-time")
                        );
                        var endTime = parseFloat(el.getAttribute("end-time"));
                        this.startTime = isNaN(startTime) ? 0 : startTime;
                        this.endTime = isNaN(startTime)
                          ? 0
                          : isNaN(endTime)
                          ? this.startTime
                          : endTime;
                      };

                      Annotations.Annotation.prototype.deserialize = newDeserialize;

                      CoreControls.VideoDocument = function () {
                        this["bookmarks"] = [];
                        this.videos = [];
                        this.videoContainers = [];
                      };

                      CoreControls.VideoDocument.prototype = Object.create(
                        CoreControls["BaseDocument"].prototype
                      );
                      _context.t0 = Object;
                      _context.t1 = CoreControls.VideoDocument.prototype;
                      _context.next = 17;
                      return api_VideoDocument(
                        instance,
                        docViewer,
                        iframeWindow,
                        options
                      );

                    case 17:
                      _context.t2 = _context.sent;

                      _context.t0.assign.call(
                        _context.t0,
                        _context.t1,
                        _context.t2
                      );

                      CoreControls.Document.registerDocumentType(
                        "video",
                        CoreControls.VideoDocument,
                        ["getVideo"]
                      );
                      return _context.abrupt("return", {
                        loadVideo: api_loadVideo(instance, docViewer),
                        setVideoWatermark: api_setVideoWatermark(
                          instance,
                          docViewer,
                          iframeWindow
                        ),
                      });

                    case 21:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            })
          );

          return function initializeVideoViewer(_x, _x2) {
            return _ref.apply(this, arguments);
          };
        })();

        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
        var es_array_from = __webpack_require__(118);

        // EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js
        var defineProperty = __webpack_require__(38);
        var defineProperty_default = /*#__PURE__*/ __webpack_require__.n(
          defineProperty
        );

        // EXTERNAL MODULE: ./node_modules/react/index.js
        var react = __webpack_require__(0);
        var react_default = /*#__PURE__*/ __webpack_require__.n(react);

        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
        function _extends() {
          _extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          return _extends.apply(this, arguments);
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;

          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }

          return target;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          _setPrototypeOf(subClass, superClass);
        }
        // EXTERNAL MODULE: ./node_modules/prop-types/index.js
        var prop_types = __webpack_require__(16);
        var prop_types_default = /*#__PURE__*/ __webpack_require__.n(
          prop_types
        );

        // EXTERNAL MODULE: ./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
        var ResizeObserver_es = __webpack_require__(242);

        // CONCATENATED MODULE: ./node_modules/react-measure/dist/index.esm.js

        var index_esm_types = [
          "client",
          "offset",
          "scroll",
          "bounds",
          "margin",
        ];
        function getTypes(props) {
          var allowedTypes = [];
          index_esm_types.forEach(function (type) {
            if (props[type]) {
              allowedTypes.push(type);
            }
          });
          return allowedTypes;
        }

        function getContentRect(node, types) {
          var calculations = {};

          if (types.indexOf("client") > -1) {
            calculations.client = {
              top: node.clientTop,
              left: node.clientLeft,
              width: node.clientWidth,
              height: node.clientHeight,
            };
          }

          if (types.indexOf("offset") > -1) {
            calculations.offset = {
              top: node.offsetTop,
              left: node.offsetLeft,
              width: node.offsetWidth,
              height: node.offsetHeight,
            };
          }

          if (types.indexOf("scroll") > -1) {
            calculations.scroll = {
              top: node.scrollTop,
              left: node.scrollLeft,
              width: node.scrollWidth,
              height: node.scrollHeight,
            };
          }

          if (types.indexOf("bounds") > -1) {
            var rect = node.getBoundingClientRect();
            calculations.bounds = {
              top: rect.top,
              right: rect.right,
              bottom: rect.bottom,
              left: rect.left,
              width: rect.width,
              height: rect.height,
            };
          }

          if (types.indexOf("margin") > -1) {
            var styles = getComputedStyle(node);
            calculations.margin = {
              top: styles ? parseInt(styles.marginTop) : 0,
              right: styles ? parseInt(styles.marginRight) : 0,
              bottom: styles ? parseInt(styles.marginBottom) : 0,
              left: styles ? parseInt(styles.marginLeft) : 0,
            };
          }

          return calculations;
        }

        /**
         * Returns the global window object associated with provided element.
         */
        function getWindowOf(target) {
          // Assume that the element is an instance of Node, which means that it
          // has the "ownerDocument" property from which we can retrieve a
          // corresponding global object.
          var ownerGlobal =
            target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local window object if it's not possible extract one from
          // provided element.

          return ownerGlobal || window;
        }

        function withContentRect(types) {
          return function (WrappedComponent) {
            var _class, _temp;

            return (
              (_temp = _class =
                /*#__PURE__*/
                (function (_Component) {
                  _inheritsLoose(WithContentRect, _Component);

                  function WithContentRect() {
                    var _this;

                    for (
                      var _len = arguments.length,
                        args = new Array(_len),
                        _key = 0;
                      _key < _len;
                      _key++
                    ) {
                      args[_key] = arguments[_key];
                    }

                    _this =
                      _Component.call.apply(_Component, [this].concat(args)) ||
                      this;
                    _this.state = {
                      contentRect: {
                        entry: {},
                        client: {},
                        offset: {},
                        scroll: {},
                        bounds: {},
                        margin: {},
                      },
                    };
                    _this._animationFrameID = null;
                    _this._resizeObserver = null;
                    _this._node = null;
                    _this._window = null;

                    _this.measure = function (entries) {
                      var contentRect = getContentRect(
                        _this._node,
                        types || getTypes(_this.props)
                      );

                      if (entries) {
                        contentRect.entry = entries[0].contentRect;
                      }

                      _this._animationFrameID = _this._window.requestAnimationFrame(
                        function () {
                          if (_this._resizeObserver !== null) {
                            _this.setState({
                              contentRect: contentRect,
                            });

                            if (typeof _this.props.onResize === "function") {
                              _this.props.onResize(contentRect);
                            }
                          }
                        }
                      );
                    };

                    _this._handleRef = function (node) {
                      if (
                        _this._resizeObserver !== null &&
                        _this._node !== null
                      ) {
                        _this._resizeObserver.unobserve(_this._node);
                      }

                      _this._node = node;
                      _this._window = getWindowOf(_this._node);
                      var innerRef = _this.props.innerRef;

                      if (innerRef) {
                        if (typeof innerRef === "function") {
                          innerRef(_this._node);
                        } else {
                          innerRef.current = _this._node;
                        }
                      }

                      if (
                        _this._resizeObserver !== null &&
                        _this._node !== null
                      ) {
                        _this._resizeObserver.observe(_this._node);
                      }
                    };

                    return _this;
                  }

                  var _proto = WithContentRect.prototype;

                  _proto.componentDidMount = function componentDidMount() {
                    this._resizeObserver =
                      this._window !== null && this._window.ResizeObserver
                        ? new this._window.ResizeObserver(this.measure)
                        : new ResizeObserver_es["a" /* default */](
                            this.measure
                          );

                    if (this._node !== null) {
                      this._resizeObserver.observe(this._node);

                      if (typeof this.props.onResize === "function") {
                        this.props.onResize(
                          getContentRect(
                            this._node,
                            types || getTypes(this.props)
                          )
                        );
                      }
                    }
                  };

                  _proto.componentWillUnmount = function componentWillUnmount() {
                    if (this._window !== null) {
                      this._window.cancelAnimationFrame(this._animationFrameID);
                    }

                    if (this._resizeObserver !== null) {
                      this._resizeObserver.disconnect();

                      this._resizeObserver = null;
                    }
                  };

                  _proto.render = function render() {
                    var _this$props = this.props,
                      innerRef = _this$props.innerRef,
                      onResize = _this$props.onResize,
                      props = _objectWithoutPropertiesLoose(_this$props, [
                        "innerRef",
                        "onResize",
                      ]);

                    return Object(react["createElement"])(
                      WrappedComponent,
                      _extends({}, props, {
                        measureRef: this._handleRef,
                        measure: this.measure,
                        contentRect: this.state.contentRect,
                      })
                    );
                  };

                  return WithContentRect;
                })(react["Component"])),
              (_class.propTypes = {
                client: prop_types_default.a.bool,
                offset: prop_types_default.a.bool,
                scroll: prop_types_default.a.bool,
                bounds: prop_types_default.a.bool,
                margin: prop_types_default.a.bool,
                innerRef: prop_types_default.a.oneOfType([
                  prop_types_default.a.object,
                  prop_types_default.a.func,
                ]),
                onResize: prop_types_default.a.func,
              }),
              _temp
            );
          };
        }

        var Measure = withContentRect()(function (_ref) {
          var measure = _ref.measure,
            measureRef = _ref.measureRef,
            contentRect = _ref.contentRect,
            children = _ref.children;
          return children({
            measure: measure,
            measureRef: measureRef,
            contentRect: contentRect,
          });
        });
        Measure.displayName = "Measure";
        Measure.propTypes.children = prop_types_default.a.func;

        /* harmony default export */ var index_esm = Measure;

        // EXTERNAL MODULE: ./node_modules/lodash/debounce.js
        var debounce = __webpack_require__(243);
        var debounce_default = /*#__PURE__*/ __webpack_require__.n(debounce);

        // CONCATENATED MODULE: ./src/assets/icons/pause-24px.svg
        function pause_24px_extends() {
          pause_24px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return pause_24px_extends.apply(this, arguments);
        }

        var pause_24px_ref = /*#__PURE__*/ react["createElement"]("path", {
          d: "M0 0h24v24H0z",
          fill: "none",
        });

        var pause_24px_ref2 = /*#__PURE__*/ react["createElement"]("path", {
          d: "M6 19h4V5H6v14zm8-14v14h4V5h-4z",
        });

        function SvgPause24Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            pause_24px_extends(
              {
                xmlns: "http://www.w3.org/2000/svg",
                height: 24,
                width: 24,
              },
              props
            ),
            pause_24px_ref,
            pause_24px_ref2
          );
        }

        /* harmony default export */ var pause_24px = SvgPause24Px;
        // CONCATENATED MODULE: ./src/assets/icons/play_arrow-24px.svg
        function play_arrow_24px_extends() {
          play_arrow_24px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return play_arrow_24px_extends.apply(this, arguments);
        }

        var play_arrow_24px_ref = /*#__PURE__*/ react["createElement"]("path", {
          d: "M0 0h24v24H0z",
          fill: "none",
        });

        var play_arrow_24px_ref2 = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d: "M8 5v14l11-7z",
          }
        );

        function SvgPlayArrow24Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            play_arrow_24px_extends(
              {
                xmlns: "http://www.w3.org/2000/svg",
                height: 24,
                width: 24,
              },
              props
            ),
            play_arrow_24px_ref,
            play_arrow_24px_ref2
          );
        }

        /* harmony default export */ var play_arrow_24px = SvgPlayArrow24Px;
        // CONCATENATED MODULE: ./src/assets/icons/skip_next-24px.svg
        function skip_next_24px_extends() {
          skip_next_24px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return skip_next_24px_extends.apply(this, arguments);
        }

        var skip_next_24px_ref = /*#__PURE__*/ react["createElement"]("path", {
          d: "M0 0h24v24H0z",
          fill: "none",
        });

        var skip_next_24px_ref2 = /*#__PURE__*/ react["createElement"]("path", {
          d: "M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z",
        });

        function SvgSkipNext24Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            skip_next_24px_extends(
              {
                xmlns: "http://www.w3.org/2000/svg",
                height: 24,
                width: 24,
              },
              props
            ),
            skip_next_24px_ref,
            skip_next_24px_ref2
          );
        }

        /* harmony default export */ var skip_next_24px = SvgSkipNext24Px;
        // CONCATENATED MODULE: ./src/assets/icons/skip_previous-24px.svg
        function skip_previous_24px_extends() {
          skip_previous_24px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return skip_previous_24px_extends.apply(this, arguments);
        }

        var skip_previous_24px_ref = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d: "M0 0h24v24H0z",
            fill: "none",
          }
        );

        var skip_previous_24px_ref2 = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d: "M6 6h2v12H6zm3.5 6l8.5 6V6z",
          }
        );

        function SvgSkipPrevious24Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            skip_previous_24px_extends(
              {
                xmlns: "http://www.w3.org/2000/svg",
                height: 24,
                width: 24,
              },
              props
            ),
            skip_previous_24px_ref,
            skip_previous_24px_ref2
          );
        }

        /* harmony default export */ var skip_previous_24px = SvgSkipPrevious24Px;
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
        function _iterableToArrayLimit(arr, i) {
          if (
            typeof Symbol === "undefined" ||
            !(Symbol.iterator in Object(arr))
          )
            return;
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (
              var _i = arr[Symbol.iterator](), _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"] != null) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
        function _arrayLikeToArray(arr, len) {
          if (len == null || len > arr.length) len = arr.length;

          for (var i = 0, arr2 = new Array(len); i < len; i++) {
            arr2[i] = arr[i];
          }

          return arr2;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

        function _unsupportedIterableToArray(o, minLen) {
          if (!o) return;
          if (typeof o === "string") return _arrayLikeToArray(o, minLen);
          var n = Object.prototype.toString.call(o).slice(8, -1);
          if (n === "Object" && o.constructor) n = o.constructor.name;
          if (n === "Map" || n === "Set") return Array.from(o);
          if (
            n === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
          )
            return _arrayLikeToArray(o, minLen);
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
        function _nonIterableRest() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js

        function _slicedToArray(arr, i) {
          return (
            _arrayWithHoles(arr) ||
            _iterableToArrayLimit(arr, i) ||
            _unsupportedIterableToArray(arr, i) ||
            _nonIterableRest()
          );
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {};
          var target = _objectWithoutPropertiesLoose(source, excluded);
          var key, i;

          if (Object.getOwnPropertySymbols) {
            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key))
                continue;
              target[key] = source[key];
            }
          }

          return target;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js
        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }
        // EXTERNAL MODULE: ./node_modules/react-dom/index.js
        var react_dom = __webpack_require__(19);
        var react_dom_default = /*#__PURE__*/ __webpack_require__.n(react_dom);

        // CONCATENATED MODULE: ./node_modules/clsx/dist/clsx.m.js
        function toVal(mix) {
          var k,
            y,
            str = "";

          if (typeof mix === "string" || typeof mix === "number") {
            str += mix;
          } else if (typeof mix === "object") {
            if (Array.isArray(mix)) {
              for (k = 0; k < mix.length; k++) {
                if (mix[k]) {
                  if ((y = toVal(mix[k]))) {
                    str && (str += " ");
                    str += y;
                  }
                }
              }
            } else {
              for (k in mix) {
                if (mix[k]) {
                  str && (str += " ");
                  str += k;
                }
              }
            }
          }

          return str;
        }

        /* harmony default export */ var clsx_m = function () {
          var i = 0,
            tmp,
            x,
            str = "";
          while (i < arguments.length) {
            if ((tmp = arguments[i++])) {
              if ((x = toVal(tmp))) {
                str && (str += " ");
                str += x;
              }
            }
          }
          return str;
        };

        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
        function _typeof(obj) {
          "@babel/helpers - typeof";

          if (
            typeof Symbol === "function" &&
            typeof Symbol.iterator === "symbol"
          ) {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj &&
                typeof Symbol === "function" &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? "symbol"
                : typeof obj;
            };
          }

          return _typeof(obj);
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/deepmerge.js

        function isPlainObject(item) {
          return (
            item && _typeof(item) === "object" && item.constructor === Object
          );
        }
        function deepmerge(target, source) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {
                  clone: true,
                };
          var output = options.clone ? _extends({}, target) : target;

          if (isPlainObject(target) && isPlainObject(source)) {
            Object.keys(source).forEach(function (key) {
              // Avoid prototype pollution
              if (key === "__proto__") {
                return;
              }

              if (isPlainObject(source[key]) && key in target) {
                output[key] = deepmerge(target[key], source[key], options);
              } else {
                output[key] = source[key];
              }
            });
          }

          return output;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js
        /**
         * WARNING: Don't import this directly.
         * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.
         * @param {number} code
         */
        function formatMuiErrorMessage(code) {
          // Apply babel-plugin-transform-template-literals in loose mode
          // loose mode is safe iff we're concatenating primitives
          // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose

          /* eslint-disable prefer-template */
          var url = "https://material-ui.com/production-error/?code=" + code;

          for (var i = 1; i < arguments.length; i += 1) {
            // rest params over-transpile for this case
            // eslint-disable-next-line prefer-rest-params
            url += "&args[]=" + encodeURIComponent(arguments[i]);
          }

          return (
            "Minified Material-UI error #" +
            code +
            "; visit " +
            url +
            " for the full message."
          );
          /* eslint-enable prefer-template */
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/colorManipulator.js

        /* eslint-disable no-use-before-define */

        /**
         * Returns a number whose value is limited to the given range.
         *
         * @param {number} value The value to be clamped
         * @param {number} min The lower boundary of the output range
         * @param {number} max The upper boundary of the output range
         * @returns {number} A number in the range [min, max]
         */
        function clamp(value) {
          var min =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 0;
          var max =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : 1;

          if (false) {
          }

          return Math.min(Math.max(min, value), max);
        }
        /**
         * Converts a color from CSS hex format to CSS rgb format.
         *
         * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
         * @returns {string} A CSS rgb color string
         */

        function hexToRgb(color) {
          color = color.substr(1);
          var re = new RegExp(
            ".{1,".concat(color.length >= 6 ? 2 : 1, "}"),
            "g"
          );
          var colors = color.match(re);

          if (colors && colors[0].length === 1) {
            colors = colors.map(function (n) {
              return n + n;
            });
          }

          return colors
            ? "rgb".concat(colors.length === 4 ? "a" : "", "(").concat(
                colors
                  .map(function (n, index) {
                    return index < 3
                      ? parseInt(n, 16)
                      : Math.round((parseInt(n, 16) / 255) * 1000) / 1000;
                  })
                  .join(", "),
                ")"
              )
            : "";
        }

        function intToHex(int) {
          var hex = int.toString(16);
          return hex.length === 1 ? "0".concat(hex) : hex;
        }
        /**
         * Converts a color from CSS rgb format to CSS hex format.
         *
         * @param {string} color - RGB color, i.e. rgb(n, n, n)
         * @returns {string} A CSS rgb color string, i.e. #nnnnnn
         */

        function rgbToHex(color) {
          // Idempotent
          if (color.indexOf("#") === 0) {
            return color;
          }

          var _decomposeColor = decomposeColor(color),
            values = _decomposeColor.values;

          return "#".concat(
            values
              .map(function (n) {
                return intToHex(n);
              })
              .join("")
          );
        }
        /**
         * Converts a color from hsl format to rgb format.
         *
         * @param {string} color - HSL color values
         * @returns {string} rgb color values
         */

        function hslToRgb(color) {
          color = decomposeColor(color);
          var _color = color,
            values = _color.values;
          var h = values[0];
          var s = values[1] / 100;
          var l = values[2] / 100;
          var a = s * Math.min(l, 1 - l);

          var f = function f(n) {
            var k =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : (n + h / 30) % 12;
            return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
          };

          var type = "rgb";
          var rgb = [
            Math.round(f(0) * 255),
            Math.round(f(8) * 255),
            Math.round(f(4) * 255),
          ];

          if (color.type === "hsla") {
            type += "a";
            rgb.push(values[3]);
          }

          return recomposeColor({
            type: type,
            values: rgb,
          });
        }
        /**
         * Returns an object with the type and values of a color.
         *
         * Note: Does not support rgb % values.
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @returns {object} - A MUI color object: {type: string, values: number[]}
         */

        function decomposeColor(color) {
          // Idempotent
          if (color.type) {
            return color;
          }

          if (color.charAt(0) === "#") {
            return decomposeColor(hexToRgb(color));
          }

          var marker = color.indexOf("(");
          var type = color.substring(0, marker);

          if (["rgb", "rgba", "hsl", "hsla"].indexOf(type) === -1) {
            throw new Error(
              false ? undefined : formatMuiErrorMessage(3, color)
            );
          }

          var values = color.substring(marker + 1, color.length - 1).split(",");
          values = values.map(function (value) {
            return parseFloat(value);
          });
          return {
            type: type,
            values: values,
          };
        }
        /**
         * Converts a color object with type and values to a string.
         *
         * @param {object} color - Decomposed color
         * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
         * @param {array} color.values - [n,n,n] or [n,n,n,n]
         * @returns {string} A CSS color string
         */

        function recomposeColor(color) {
          var type = color.type;
          var values = color.values;

          if (type.indexOf("rgb") !== -1) {
            // Only convert the first 3 values to int (i.e. not alpha)
            values = values.map(function (n, i) {
              return i < 3 ? parseInt(n, 10) : n;
            });
          } else if (type.indexOf("hsl") !== -1) {
            values[1] = "".concat(values[1], "%");
            values[2] = "".concat(values[2], "%");
          }

          return "".concat(type, "(").concat(values.join(", "), ")");
        }
        /**
         * Calculates the contrast ratio between two colors.
         *
         * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
         *
         * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @returns {number} A contrast ratio value in the range 0 - 21.
         */

        function getContrastRatio(foreground, background) {
          var lumA = getLuminance(foreground);
          var lumB = getLuminance(background);
          return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);
        }
        /**
         * The relative brightness of any point in a color space,
         * normalized to 0 for darkest black and 1 for lightest white.
         *
         * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @returns {number} The relative brightness of the color in the range 0 - 1
         */

        function getLuminance(color) {
          color = decomposeColor(color);
          var rgb =
            color.type === "hsl"
              ? decomposeColor(hslToRgb(color)).values
              : color.values;
          rgb = rgb.map(function (val) {
            val /= 255; // normalized

            return val <= 0.03928
              ? val / 12.92
              : Math.pow((val + 0.055) / 1.055, 2.4);
          }); // Truncate at 3 digits

          return Number(
            (0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)
          );
        }
        /**
         * Darken or lighten a color, depending on its luminance.
         * Light colors are darkened, dark colors are lightened.
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
         * @returns {string} A CSS color string. Hex input values are returned as rgb
         */

        function emphasize(color) {
          var coefficient =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : 0.15;
          return getLuminance(color) > 0.5
            ? darken(color, coefficient)
            : lighten(color, coefficient);
        }
        /**
         * Set the absolute transparency of a color.
         * Any existing alpha values are overwritten.
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @param {number} value - value to set the alpha channel to in the range 0 -1
         * @returns {string} A CSS color string. Hex input values are returned as rgb
         */

        function fade(color, value) {
          color = decomposeColor(color);
          value = clamp(value);

          if (color.type === "rgb" || color.type === "hsl") {
            color.type += "a";
          }

          color.values[3] = value;
          return recomposeColor(color);
        }
        /**
         * Darkens a color.
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @param {number} coefficient - multiplier in the range 0 - 1
         * @returns {string} A CSS color string. Hex input values are returned as rgb
         */

        function darken(color, coefficient) {
          color = decomposeColor(color);
          coefficient = clamp(coefficient);

          if (color.type.indexOf("hsl") !== -1) {
            color.values[2] *= 1 - coefficient;
          } else if (color.type.indexOf("rgb") !== -1) {
            for (var i = 0; i < 3; i += 1) {
              color.values[i] *= 1 - coefficient;
            }
          }

          return recomposeColor(color);
        }
        /**
         * Lightens a color.
         *
         * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
         * @param {number} coefficient - multiplier in the range 0 - 1
         * @returns {string} A CSS color string. Hex input values are returned as rgb
         */

        function lighten(color, coefficient) {
          color = decomposeColor(color);
          coefficient = clamp(coefficient);

          if (color.type.indexOf("hsl") !== -1) {
            color.values[2] += (100 - color.values[2]) * coefficient;
          } else if (color.type.indexOf("rgb") !== -1) {
            for (var i = 0; i < 3; i += 1) {
              color.values[i] += (255 - color.values[i]) * coefficient;
            }
          }

          return recomposeColor(color);
        }
        // EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
        var hoist_non_react_statics_cjs = __webpack_require__(244);
        var hoist_non_react_statics_cjs_default = /*#__PURE__*/ __webpack_require__.n(
          hoist_non_react_statics_cjs
        );

        // CONCATENATED MODULE: ./node_modules/is-in-browser/dist/module.js
        var module_typeof =
          typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
            ? function (obj) {
                return typeof obj;
              }
            : function (obj) {
                return obj &&
                  typeof Symbol === "function" &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? "symbol"
                  : typeof obj;
              };

        var isBrowser =
          (typeof window === "undefined"
            ? "undefined"
            : module_typeof(window)) === "object" &&
          (typeof document === "undefined"
            ? "undefined"
            : module_typeof(document)) === "object" &&
          document.nodeType === 9;

        /* harmony default export */ var dist_module = isBrowser;

        // CONCATENATED MODULE: ./node_modules/tiny-warning/dist/tiny-warning.esm.js
        var isProduction = "production" === "production";
        function tiny_warning_esm_warning(condition, message) {
          if (!isProduction) {
            if (condition) {
              return;
            }

            var text = "Warning: " + message;

            if (typeof console !== "undefined") {
              console.warn(text);
            }

            try {
              throw Error(text);
            } catch (x) {}
          }
        }

        /* harmony default export */ var tiny_warning_esm = tiny_warning_esm_warning;

        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }

          return self;
        }
        // CONCATENATED MODULE: ./node_modules/jss/dist/jss.esm.js

        var plainObjectConstrurctor = {}.constructor;
        function cloneStyle(style) {
          if (style == null || typeof style !== "object") return style;
          if (Array.isArray(style)) return style.map(cloneStyle);
          if (style.constructor !== plainObjectConstrurctor) return style;
          var newStyle = {};

          for (var name in style) {
            newStyle[name] = cloneStyle(style[name]);
          }

          return newStyle;
        }

        /**
         * Create a rule instance.
         */

        function createRule(name, decl, options) {
          if (name === void 0) {
            name = "unnamed";
          }

          var jss = options.jss;
          var declCopy = cloneStyle(decl);
          var rule = jss.plugins.onCreateRule(name, declCopy, options);
          if (rule) return rule; // It is an at-rule and it has no instance.

          if (name[0] === "@") {
            false ? undefined : void 0;
          }

          return null;
        }

        var join = function join(value, by) {
          var result = "";

          for (var i = 0; i < value.length; i++) {
            // Remove !important from the value, it will be readded later.
            if (value[i] === "!important") break;
            if (result) result += by;
            result += value[i];
          }

          return result;
        };

        /**
         * Converts array values to string.
         *
         * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
         * `border: ['1px', '2px']` > `border: 1px, 2px;`
         * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
         * `color: ['red', !important]` > `color: red !important;`
         */
        var toCssValue = function toCssValue(value, ignoreImportant) {
          if (ignoreImportant === void 0) {
            ignoreImportant = false;
          }

          if (!Array.isArray(value)) return value;
          var cssValue = ""; // Support space separated values via `[['5px', '10px']]`.

          if (Array.isArray(value[0])) {
            for (var i = 0; i < value.length; i++) {
              if (value[i] === "!important") break;
              if (cssValue) cssValue += ", ";
              cssValue += join(value[i], " ");
            }
          } else cssValue = join(value, ", "); // Add !important, because it was ignored.

          if (!ignoreImportant && value[value.length - 1] === "!important") {
            cssValue += " !important";
          }

          return cssValue;
        };

        /**
         * Indent a string.
         * http://jsperf.com/array-join-vs-for
         */
        function indentStr(str, indent) {
          var result = "";

          for (var index = 0; index < indent; index++) {
            result += "  ";
          }

          return result + str;
        }
        /**
         * Converts a Rule to CSS string.
         */

        function toCss(selector, style, options) {
          if (options === void 0) {
            options = {};
          }

          var result = "";
          if (!style) return result;
          var _options = options,
            _options$indent = _options.indent,
            indent = _options$indent === void 0 ? 0 : _options$indent;
          var fallbacks = style.fallbacks;
          if (selector) indent++; // Apply fallbacks first.

          if (fallbacks) {
            // Array syntax {fallbacks: [{prop: value}]}
            if (Array.isArray(fallbacks)) {
              for (var index = 0; index < fallbacks.length; index++) {
                var fallback = fallbacks[index];

                for (var prop in fallback) {
                  var value = fallback[prop];

                  if (value != null) {
                    if (result) result += "\n";
                    result +=
                      "" +
                      indentStr(prop + ": " + toCssValue(value) + ";", indent);
                  }
                }
              }
            } else {
              // Object syntax {fallbacks: {prop: value}}
              for (var _prop in fallbacks) {
                var _value = fallbacks[_prop];

                if (_value != null) {
                  if (result) result += "\n";
                  result +=
                    "" +
                    indentStr(_prop + ": " + toCssValue(_value) + ";", indent);
                }
              }
            }
          }

          for (var _prop2 in style) {
            var _value2 = style[_prop2];

            if (_value2 != null && _prop2 !== "fallbacks") {
              if (result) result += "\n";
              result +=
                "" +
                indentStr(_prop2 + ": " + toCssValue(_value2) + ";", indent);
            }
          } // Allow empty style in this case, because properties will be added dynamically.

          if (!result && !options.allowEmpty) return result; // When rule is being stringified before selector was defined.

          if (!selector) return result;
          indent--;
          if (result) result = "\n" + result + "\n";
          return (
            indentStr(selector + " {" + result, indent) + indentStr("}", indent)
          );
        }

        var escapeRegex = /([[\].#*$><+~=|^:(),"'`\s])/g;
        var nativeEscape = typeof CSS !== "undefined" && CSS.escape;
        var jss_esm_escape = function (str) {
          return nativeEscape
            ? nativeEscape(str)
            : str.replace(escapeRegex, "\\$1");
        };

        var BaseStyleRule =
          /*#__PURE__*/
          (function () {
            function BaseStyleRule(key, style, options) {
              this.type = "style";
              this.key = void 0;
              this.isProcessed = false;
              this.style = void 0;
              this.renderer = void 0;
              this.renderable = void 0;
              this.options = void 0;
              var sheet = options.sheet,
                Renderer = options.Renderer;
              this.key = key;
              this.options = options;
              this.style = style;
              if (sheet) this.renderer = sheet.renderer;
              else if (Renderer) this.renderer = new Renderer();
            }
            /**
             * Get or set a style property.
             */

            var _proto = BaseStyleRule.prototype;

            _proto.prop = function prop(name, value, options) {
              // It's a getter.
              if (value === undefined) return this.style[name]; // Don't do anything if the value has not changed.

              var force = options ? options.force : false;
              if (!force && this.style[name] === value) return this;
              var newValue = value;

              if (!options || options.process !== false) {
                newValue = this.options.jss.plugins.onChangeValue(
                  value,
                  name,
                  this
                );
              }

              var isEmpty = newValue == null || newValue === false;
              var isDefined = name in this.style; // Value is empty and wasn't defined before.

              if (isEmpty && !isDefined && !force) return this; // We are going to remove this value.

              var remove = isEmpty && isDefined;
              if (remove) delete this.style[name];
              else this.style[name] = newValue; // Renderable is defined if StyleSheet option `link` is true.

              if (this.renderable && this.renderer) {
                if (remove) this.renderer.removeProperty(this.renderable, name);
                else this.renderer.setProperty(this.renderable, name, newValue);
                return this;
              }

              var sheet = this.options.sheet;

              if (sheet && sheet.attached) {
                false ? undefined : void 0;
              }

              return this;
            };

            return BaseStyleRule;
          })();
        var jss_esm_StyleRule =
          /*#__PURE__*/
          (function (_BaseStyleRule) {
            _inheritsLoose(StyleRule, _BaseStyleRule);

            function StyleRule(key, style, options) {
              var _this;

              _this = _BaseStyleRule.call(this, key, style, options) || this;
              _this.selectorText = void 0;
              _this.id = void 0;
              _this.renderable = void 0;
              var selector = options.selector,
                scoped = options.scoped,
                sheet = options.sheet,
                generateId = options.generateId;

              if (selector) {
                _this.selectorText = selector;
              } else if (scoped !== false) {
                _this.id = generateId(
                  _assertThisInitialized(_assertThisInitialized(_this)),
                  sheet
                );
                _this.selectorText = "." + jss_esm_escape(_this.id);
              }

              return _this;
            }
            /**
             * Set selector string.
             * Attention: use this with caution. Most browsers didn't implement
             * selectorText setter, so this may result in rerendering of entire Style Sheet.
             */

            var _proto2 = StyleRule.prototype;

            /**
             * Apply rule to an element inline.
             */
            _proto2.applyTo = function applyTo(renderable) {
              var renderer = this.renderer;

              if (renderer) {
                var json = this.toJSON();

                for (var prop in json) {
                  renderer.setProperty(renderable, prop, json[prop]);
                }
              }

              return this;
            };
            /**
             * Returns JSON representation of the rule.
             * Fallbacks are not supported.
             * Useful for inline styles.
             */

            _proto2.toJSON = function toJSON() {
              var json = {};

              for (var prop in this.style) {
                var value = this.style[prop];
                if (typeof value !== "object") json[prop] = value;
                else if (Array.isArray(value)) json[prop] = toCssValue(value);
              }

              return json;
            };
            /**
             * Generates a CSS string.
             */

            _proto2.toString = function toString(options) {
              var sheet = this.options.sheet;
              var link = sheet ? sheet.options.link : false;
              var opts = link
                ? _extends({}, options, {
                    allowEmpty: true,
                  })
                : options;
              return toCss(this.selectorText, this.style, opts);
            };

            _createClass(StyleRule, [
              {
                key: "selector",
                set: function set(selector) {
                  if (selector === this.selectorText) return;
                  this.selectorText = selector;
                  var renderer = this.renderer,
                    renderable = this.renderable;
                  if (!renderable || !renderer) return;
                  var hasChanged = renderer.setSelector(renderable, selector); // If selector setter is not implemented, rerender the rule.

                  if (!hasChanged) {
                    renderer.replaceRule(renderable, this);
                  }
                },
                /**
                 * Get selector string.
                 */
                get: function get() {
                  return this.selectorText;
                },
              },
            ]);

            return StyleRule;
          })(BaseStyleRule);
        var pluginStyleRule = {
          onCreateRule: function onCreateRule(name, style, options) {
            if (
              name[0] === "@" ||
              (options.parent && options.parent.type === "keyframes")
            ) {
              return null;
            }

            return new jss_esm_StyleRule(name, style, options);
          },
        };

        var defaultToStringOptions = {
          indent: 1,
          children: true,
        };
        var atRegExp = /@([\w-]+)/;
        /**
         * Conditional rule for @media, @supports
         */

        var jss_esm_ConditionalRule =
          /*#__PURE__*/
          (function () {
            function ConditionalRule(key, styles, options) {
              this.type = "conditional";
              this.at = void 0;
              this.key = void 0;
              this.query = void 0;
              this.rules = void 0;
              this.options = void 0;
              this.isProcessed = false;
              this.renderable = void 0;
              this.key = key;
              var atMatch = key.match(atRegExp);
              this.at = atMatch ? atMatch[1] : "unknown"; // Key might contain a unique suffix in case the `name` passed by user was duplicate.

              this.query = options.name || "@" + this.at;
              this.options = options;
              this.rules = new jss_esm_RuleList(
                _extends({}, options, {
                  parent: this,
                })
              );

              for (var name in styles) {
                this.rules.add(name, styles[name]);
              }

              this.rules.process();
            }
            /**
             * Get a rule.
             */

            var _proto = ConditionalRule.prototype;

            _proto.getRule = function getRule(name) {
              return this.rules.get(name);
            };
            /**
             * Get index of a rule.
             */

            _proto.indexOf = function indexOf(rule) {
              return this.rules.indexOf(rule);
            };
            /**
             * Create and register rule, run plugins.
             */

            _proto.addRule = function addRule(name, style, options) {
              var rule = this.rules.add(name, style, options);
              if (!rule) return null;
              this.options.jss.plugins.onProcessRule(rule);
              return rule;
            };
            /**
             * Generates a CSS string.
             */

            _proto.toString = function toString(options) {
              if (options === void 0) {
                options = defaultToStringOptions;
              }

              if (options.indent == null)
                options.indent = defaultToStringOptions.indent;
              if (options.children == null)
                options.children = defaultToStringOptions.children;

              if (options.children === false) {
                return this.query + " {}";
              }

              var children = this.rules.toString(options);
              return children ? this.query + " {\n" + children + "\n}" : "";
            };

            return ConditionalRule;
          })();
        var keyRegExp = /@media|@supports\s+/;
        var pluginConditionalRule = {
          onCreateRule: function onCreateRule(key, styles, options) {
            return keyRegExp.test(key)
              ? new jss_esm_ConditionalRule(key, styles, options)
              : null;
          },
        };

        var defaultToStringOptions$1 = {
          indent: 1,
          children: true,
        };
        var nameRegExp = /@keyframes\s+([\w-]+)/;
        /**
         * Rule for @keyframes
         */

        var jss_esm_KeyframesRule =
          /*#__PURE__*/
          (function () {
            function KeyframesRule(key, frames, options) {
              this.type = "keyframes";
              this.at = "@keyframes";
              this.key = void 0;
              this.name = void 0;
              this.id = void 0;
              this.rules = void 0;
              this.options = void 0;
              this.isProcessed = false;
              this.renderable = void 0;
              var nameMatch = key.match(nameRegExp);

              if (nameMatch && nameMatch[1]) {
                this.name = nameMatch[1];
              } else {
                this.name = "noname";
                false ? undefined : void 0;
              }

              this.key = this.type + "-" + this.name;
              this.options = options;
              var scoped = options.scoped,
                sheet = options.sheet,
                generateId = options.generateId;
              this.id =
                scoped === false
                  ? this.name
                  : jss_esm_escape(generateId(this, sheet));
              this.rules = new jss_esm_RuleList(
                _extends({}, options, {
                  parent: this,
                })
              );

              for (var name in frames) {
                this.rules.add(
                  name,
                  frames[name],
                  _extends({}, options, {
                    parent: this,
                  })
                );
              }

              this.rules.process();
            }
            /**
             * Generates a CSS string.
             */

            var _proto = KeyframesRule.prototype;

            _proto.toString = function toString(options) {
              if (options === void 0) {
                options = defaultToStringOptions$1;
              }

              if (options.indent == null)
                options.indent = defaultToStringOptions$1.indent;
              if (options.children == null)
                options.children = defaultToStringOptions$1.children;

              if (options.children === false) {
                return this.at + " " + this.id + " {}";
              }

              var children = this.rules.toString(options);
              if (children) children = "\n" + children + "\n";
              return this.at + " " + this.id + " {" + children + "}";
            };

            return KeyframesRule;
          })();
        var keyRegExp$1 = /@keyframes\s+/;
        var refRegExp = /\$([\w-]+)/g;

        var findReferencedKeyframe = function findReferencedKeyframe(
          val,
          keyframes
        ) {
          if (typeof val === "string") {
            return val.replace(refRegExp, function (match, name) {
              if (name in keyframes) {
                return keyframes[name];
              }

              false ? undefined : void 0;
              return match;
            });
          }

          return val;
        };
        /**
         * Replace the reference for a animation name.
         */

        var jss_esm_replaceRef = function replaceRef(style, prop, keyframes) {
          var value = style[prop];
          var refKeyframe = findReferencedKeyframe(value, keyframes);

          if (refKeyframe !== value) {
            style[prop] = refKeyframe;
          }
        };

        var jss_esm_plugin = {
          onCreateRule: function onCreateRule(key, frames, options) {
            return typeof key === "string" && keyRegExp$1.test(key)
              ? new jss_esm_KeyframesRule(key, frames, options)
              : null;
          },
          // Animation name ref replacer.
          onProcessStyle: function onProcessStyle(style, rule, sheet) {
            if (rule.type !== "style" || !sheet) return style;
            if ("animation-name" in style)
              jss_esm_replaceRef(style, "animation-name", sheet.keyframes);
            if ("animation" in style)
              jss_esm_replaceRef(style, "animation", sheet.keyframes);
            return style;
          },
          onChangeValue: function onChangeValue(val, prop, rule) {
            var sheet = rule.options.sheet;

            if (!sheet) {
              return val;
            }

            switch (prop) {
              case "animation":
                return findReferencedKeyframe(val, sheet.keyframes);

              case "animation-name":
                return findReferencedKeyframe(val, sheet.keyframes);

              default:
                return val;
            }
          },
        };

        var jss_esm_KeyframeRule =
          /*#__PURE__*/
          (function (_BaseStyleRule) {
            _inheritsLoose(KeyframeRule, _BaseStyleRule);

            function KeyframeRule() {
              var _this;

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              _this =
                _BaseStyleRule.call.apply(
                  _BaseStyleRule,
                  [this].concat(args)
                ) || this;
              _this.renderable = void 0;
              return _this;
            }

            var _proto = KeyframeRule.prototype;

            /**
             * Generates a CSS string.
             */
            _proto.toString = function toString(options) {
              var sheet = this.options.sheet;
              var link = sheet ? sheet.options.link : false;
              var opts = link
                ? _extends({}, options, {
                    allowEmpty: true,
                  })
                : options;
              return toCss(this.key, this.style, opts);
            };

            return KeyframeRule;
          })(BaseStyleRule);
        var pluginKeyframeRule = {
          onCreateRule: function onCreateRule(key, style, options) {
            if (options.parent && options.parent.type === "keyframes") {
              return new jss_esm_KeyframeRule(key, style, options);
            }

            return null;
          },
        };

        var FontFaceRule =
          /*#__PURE__*/
          (function () {
            function FontFaceRule(key, style, options) {
              this.type = "font-face";
              this.at = "@font-face";
              this.key = void 0;
              this.style = void 0;
              this.options = void 0;
              this.isProcessed = false;
              this.renderable = void 0;
              this.key = key;
              this.style = style;
              this.options = options;
            }
            /**
             * Generates a CSS string.
             */

            var _proto = FontFaceRule.prototype;

            _proto.toString = function toString(options) {
              if (Array.isArray(this.style)) {
                var str = "";

                for (var index = 0; index < this.style.length; index++) {
                  str += toCss(this.at, this.style[index]);
                  if (this.style[index + 1]) str += "\n";
                }

                return str;
              }

              return toCss(this.at, this.style, options);
            };

            return FontFaceRule;
          })();
        var keyRegExp$2 = /@font-face/;
        var pluginFontFaceRule = {
          onCreateRule: function onCreateRule(key, style, options) {
            return keyRegExp$2.test(key)
              ? new FontFaceRule(key, style, options)
              : null;
          },
        };

        var ViewportRule =
          /*#__PURE__*/
          (function () {
            function ViewportRule(key, style, options) {
              this.type = "viewport";
              this.at = "@viewport";
              this.key = void 0;
              this.style = void 0;
              this.options = void 0;
              this.isProcessed = false;
              this.renderable = void 0;
              this.key = key;
              this.style = style;
              this.options = options;
            }
            /**
             * Generates a CSS string.
             */

            var _proto = ViewportRule.prototype;

            _proto.toString = function toString(options) {
              return toCss(this.key, this.style, options);
            };

            return ViewportRule;
          })();
        var pluginViewportRule = {
          onCreateRule: function onCreateRule(key, style, options) {
            return key === "@viewport" || key === "@-ms-viewport"
              ? new ViewportRule(key, style, options)
              : null;
          },
        };

        var SimpleRule =
          /*#__PURE__*/
          (function () {
            function SimpleRule(key, value, options) {
              this.type = "simple";
              this.key = void 0;
              this.value = void 0;
              this.options = void 0;
              this.isProcessed = false;
              this.renderable = void 0;
              this.key = key;
              this.value = value;
              this.options = options;
            }
            /**
             * Generates a CSS string.
             */
            // eslint-disable-next-line no-unused-vars

            var _proto = SimpleRule.prototype;

            _proto.toString = function toString(options) {
              if (Array.isArray(this.value)) {
                var str = "";

                for (var index = 0; index < this.value.length; index++) {
                  str += this.key + " " + this.value[index] + ";";
                  if (this.value[index + 1]) str += "\n";
                }

                return str;
              }

              return this.key + " " + this.value + ";";
            };

            return SimpleRule;
          })();
        var keysMap = {
          "@charset": true,
          "@import": true,
          "@namespace": true,
        };
        var pluginSimpleRule = {
          onCreateRule: function onCreateRule(key, value, options) {
            return key in keysMap ? new SimpleRule(key, value, options) : null;
          },
        };

        var plugins = [
          pluginStyleRule,
          pluginConditionalRule,
          jss_esm_plugin,
          pluginKeyframeRule,
          pluginFontFaceRule,
          pluginViewportRule,
          pluginSimpleRule,
        ];

        var defaultUpdateOptions = {
          process: true,
        };
        var forceUpdateOptions = {
          force: true,
          process: true,
          /**
           * Contains rules objects and allows adding/removing etc.
           * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
           */
        };

        var jss_esm_RuleList =
          /*#__PURE__*/
          (function () {
            // Rules registry for access by .get() method.
            // It contains the same rule registered by name and by selector.
            // Original styles object.
            // Used to ensure correct rules order.
            function RuleList(options) {
              this.map = {};
              this.raw = {};
              this.index = [];
              this.counter = 0;
              this.options = void 0;
              this.classes = void 0;
              this.keyframes = void 0;
              this.options = options;
              this.classes = options.classes;
              this.keyframes = options.keyframes;
            }
            /**
             * Create and register rule.
             *
             * Will not render after Style Sheet was rendered the first time.
             */

            var _proto = RuleList.prototype;

            _proto.add = function add(name, decl, ruleOptions) {
              var _this$options = this.options,
                parent = _this$options.parent,
                sheet = _this$options.sheet,
                jss = _this$options.jss,
                Renderer = _this$options.Renderer,
                generateId = _this$options.generateId,
                scoped = _this$options.scoped;

              var options = _extends(
                {
                  classes: this.classes,
                  parent: parent,
                  sheet: sheet,
                  jss: jss,
                  Renderer: Renderer,
                  generateId: generateId,
                  scoped: scoped,
                  name: name,
                  keyframes: this.keyframes,
                  selector: undefined,
                },
                ruleOptions
              ); // When user uses .createStyleSheet(), duplicate names are not possible, but
              // `sheet.addRule()` opens the door for any duplicate rule name. When this happens
              // we need to make the key unique within this RuleList instance scope.

              var key = name;

              if (name in this.raw) {
                key = name + "-d" + this.counter++;
              } // We need to save the original decl before creating the rule
              // because cache plugin needs to use it as a key to return a cached rule.

              this.raw[key] = decl;

              if (key in this.classes) {
                // E.g. rules inside of @media container
                options.selector = "." + jss_esm_escape(this.classes[key]);
              }

              var rule = createRule(key, decl, options);
              if (!rule) return null;
              this.register(rule);
              var index =
                options.index === undefined ? this.index.length : options.index;
              this.index.splice(index, 0, rule);
              return rule;
            };
            /**
             * Get a rule.
             */

            _proto.get = function get(name) {
              return this.map[name];
            };
            /**
             * Delete a rule.
             */

            _proto.remove = function remove(rule) {
              this.unregister(rule);
              delete this.raw[rule.key];
              this.index.splice(this.index.indexOf(rule), 1);
            };
            /**
             * Get index of a rule.
             */

            _proto.indexOf = function indexOf(rule) {
              return this.index.indexOf(rule);
            };
            /**
             * Run `onProcessRule()` plugins on every rule.
             */

            _proto.process = function process() {
              var plugins = this.options.jss.plugins; // We need to clone array because if we modify the index somewhere else during a loop
              // we end up with very hard-to-track-down side effects.

              this.index.slice(0).forEach(plugins.onProcessRule, plugins);
            };
            /**
             * Register a rule in `.map`, `.classes` and `.keyframes` maps.
             */

            _proto.register = function register(rule) {
              this.map[rule.key] = rule;

              if (rule instanceof jss_esm_StyleRule) {
                this.map[rule.selector] = rule;
                if (rule.id) this.classes[rule.key] = rule.id;
              } else if (
                rule instanceof jss_esm_KeyframesRule &&
                this.keyframes
              ) {
                this.keyframes[rule.name] = rule.id;
              }
            };
            /**
             * Unregister a rule.
             */

            _proto.unregister = function unregister(rule) {
              delete this.map[rule.key];

              if (rule instanceof jss_esm_StyleRule) {
                delete this.map[rule.selector];
                delete this.classes[rule.key];
              } else if (rule instanceof jss_esm_KeyframesRule) {
                delete this.keyframes[rule.name];
              }
            };
            /**
             * Update the function values with a new data.
             */

            _proto.update = function update() {
              var name;
              var data;
              var options;

              if (
                typeof (arguments.length <= 0 ? undefined : arguments[0]) ===
                "string"
              ) {
                name = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]

                data = arguments.length <= 1 ? undefined : arguments[1]; // $FlowFixMe[invalid-tuple-index]

                options = arguments.length <= 2 ? undefined : arguments[2];
              } else {
                data = arguments.length <= 0 ? undefined : arguments[0]; // $FlowFixMe[invalid-tuple-index]

                options = arguments.length <= 1 ? undefined : arguments[1];
                name = null;
              }

              if (name) {
                this.updateOne(this.map[name], data, options);
              } else {
                for (var index = 0; index < this.index.length; index++) {
                  this.updateOne(this.index[index], data, options);
                }
              }
            };
            /**
             * Execute plugins, update rule props.
             */

            _proto.updateOne = function updateOne(rule, data, options) {
              if (options === void 0) {
                options = defaultUpdateOptions;
              }

              var _this$options2 = this.options,
                plugins = _this$options2.jss.plugins,
                sheet = _this$options2.sheet; // It is a rules container like for e.g. ConditionalRule.

              if (rule.rules instanceof RuleList) {
                rule.rules.update(data, options);
                return;
              }

              var styleRule = rule;
              var style = styleRule.style;
              plugins.onUpdate(data, rule, sheet, options); // We rely on a new `style` ref in case it was mutated during onUpdate hook.

              if (options.process && style && style !== styleRule.style) {
                // We need to run the plugins in case new `style` relies on syntax plugins.
                plugins.onProcessStyle(styleRule.style, styleRule, sheet); // Update and add props.

                for (var prop in styleRule.style) {
                  var nextValue = styleRule.style[prop];
                  var prevValue = style[prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
                  // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

                  if (nextValue !== prevValue) {
                    styleRule.prop(prop, nextValue, forceUpdateOptions);
                  }
                } // Remove props.

                for (var _prop in style) {
                  var _nextValue = styleRule.style[_prop];
                  var _prevValue = style[_prop]; // We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.
                  // We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

                  if (_nextValue == null && _nextValue !== _prevValue) {
                    styleRule.prop(_prop, null, forceUpdateOptions);
                  }
                }
              }
            };
            /**
             * Convert rules to a CSS string.
             */

            _proto.toString = function toString(options) {
              var str = "";
              var sheet = this.options.sheet;
              var link = sheet ? sheet.options.link : false;

              for (var index = 0; index < this.index.length; index++) {
                var rule = this.index[index];
                var css = rule.toString(options); // No need to render an empty rule.

                if (!css && !link) continue;
                if (str) str += "\n";
                str += css;
              }

              return str;
            };

            return RuleList;
          })();

        var jss_esm_StyleSheet =
          /*#__PURE__*/
          (function () {
            function StyleSheet(styles, options) {
              this.options = void 0;
              this.deployed = void 0;
              this.attached = void 0;
              this.rules = void 0;
              this.renderer = void 0;
              this.classes = void 0;
              this.keyframes = void 0;
              this.queue = void 0;
              this.attached = false;
              this.deployed = false;
              this.classes = {};
              this.keyframes = {};
              this.options = _extends({}, options, {
                sheet: this,
                parent: this,
                classes: this.classes,
                keyframes: this.keyframes,
              });

              if (options.Renderer) {
                this.renderer = new options.Renderer(this);
              }

              this.rules = new jss_esm_RuleList(this.options);

              for (var name in styles) {
                this.rules.add(name, styles[name]);
              }

              this.rules.process();
            }
            /**
             * Attach renderable to the render tree.
             */

            var _proto = StyleSheet.prototype;

            _proto.attach = function attach() {
              if (this.attached) return this;
              if (this.renderer) this.renderer.attach();
              this.attached = true; // Order is important, because we can't use insertRule API if style element is not attached.

              if (!this.deployed) this.deploy();
              return this;
            };
            /**
             * Remove renderable from render tree.
             */

            _proto.detach = function detach() {
              if (!this.attached) return this;
              if (this.renderer) this.renderer.detach();
              this.attached = false;
              return this;
            };
            /**
             * Add a rule to the current stylesheet.
             * Will insert a rule also after the stylesheet has been rendered first time.
             */

            _proto.addRule = function addRule(name, decl, options) {
              var queue = this.queue; // Plugins can create rules.
              // In order to preserve the right order, we need to queue all `.addRule` calls,
              // which happen after the first `rules.add()` call.

              if (this.attached && !queue) this.queue = [];
              var rule = this.rules.add(name, decl, options);
              if (!rule) return null;
              this.options.jss.plugins.onProcessRule(rule);

              if (this.attached) {
                if (!this.deployed) return rule; // Don't insert rule directly if there is no stringified version yet.
                // It will be inserted all together when .attach is called.

                if (queue) queue.push(rule);
                else {
                  this.insertRule(rule);

                  if (this.queue) {
                    this.queue.forEach(this.insertRule, this);
                    this.queue = undefined;
                  }
                }
                return rule;
              } // We can't add rules to a detached style node.
              // We will redeploy the sheet once user will attach it.

              this.deployed = false;
              return rule;
            };
            /**
             * Insert rule into the StyleSheet
             */

            _proto.insertRule = function insertRule(rule) {
              if (this.renderer) {
                this.renderer.insertRule(rule);
              }
            };
            /**
             * Create and add rules.
             * Will render also after Style Sheet was rendered the first time.
             */

            _proto.addRules = function addRules(styles, options) {
              var added = [];

              for (var name in styles) {
                var rule = this.addRule(name, styles[name], options);
                if (rule) added.push(rule);
              }

              return added;
            };
            /**
             * Get a rule by name.
             */

            _proto.getRule = function getRule(name) {
              return this.rules.get(name);
            };
            /**
             * Delete a rule by name.
             * Returns `true`: if rule has been deleted from the DOM.
             */

            _proto.deleteRule = function deleteRule(name) {
              var rule = typeof name === "object" ? name : this.rules.get(name);

              if (
                !rule || // Style sheet was created without link: true and attached, in this case we
                // won't be able to remove the CSS rule from the DOM.
                (this.attached && !rule.renderable)
              ) {
                return false;
              }

              this.rules.remove(rule);

              if (this.attached && rule.renderable && this.renderer) {
                return this.renderer.deleteRule(rule.renderable);
              }

              return true;
            };
            /**
             * Get index of a rule.
             */

            _proto.indexOf = function indexOf(rule) {
              return this.rules.indexOf(rule);
            };
            /**
             * Deploy pure CSS string to a renderable.
             */

            _proto.deploy = function deploy() {
              if (this.renderer) this.renderer.deploy();
              this.deployed = true;
              return this;
            };
            /**
             * Update the function values with a new data.
             */

            _proto.update = function update() {
              var _this$rules;

              (_this$rules = this.rules).update.apply(_this$rules, arguments);

              return this;
            };
            /**
             * Updates a single rule.
             */

            _proto.updateOne = function updateOne(rule, data, options) {
              this.rules.updateOne(rule, data, options);
              return this;
            };
            /**
             * Convert rules to a CSS string.
             */

            _proto.toString = function toString(options) {
              return this.rules.toString(options);
            };

            return StyleSheet;
          })();

        var PluginsRegistry =
          /*#__PURE__*/
          (function () {
            function PluginsRegistry() {
              this.plugins = {
                internal: [],
                external: [],
              };
              this.registry = void 0;
            }

            var _proto = PluginsRegistry.prototype;

            /**
             * Call `onCreateRule` hooks and return an object if returned by a hook.
             */
            _proto.onCreateRule = function onCreateRule(name, decl, options) {
              for (var i = 0; i < this.registry.onCreateRule.length; i++) {
                var rule = this.registry.onCreateRule[i](name, decl, options);
                if (rule) return rule;
              }

              return null;
            };
            /**
             * Call `onProcessRule` hooks.
             */

            _proto.onProcessRule = function onProcessRule(rule) {
              if (rule.isProcessed) return;
              var sheet = rule.options.sheet;

              for (var i = 0; i < this.registry.onProcessRule.length; i++) {
                this.registry.onProcessRule[i](rule, sheet);
              }

              if (rule.style) this.onProcessStyle(rule.style, rule, sheet);
              rule.isProcessed = true;
            };
            /**
             * Call `onProcessStyle` hooks.
             */

            _proto.onProcessStyle = function onProcessStyle(
              style,
              rule,
              sheet
            ) {
              for (var i = 0; i < this.registry.onProcessStyle.length; i++) {
                // $FlowFixMe[prop-missing]
                rule.style = this.registry.onProcessStyle[i](
                  rule.style,
                  rule,
                  sheet
                );
              }
            };
            /**
             * Call `onProcessSheet` hooks.
             */

            _proto.onProcessSheet = function onProcessSheet(sheet) {
              for (var i = 0; i < this.registry.onProcessSheet.length; i++) {
                this.registry.onProcessSheet[i](sheet);
              }
            };
            /**
             * Call `onUpdate` hooks.
             */

            _proto.onUpdate = function onUpdate(data, rule, sheet, options) {
              for (var i = 0; i < this.registry.onUpdate.length; i++) {
                this.registry.onUpdate[i](data, rule, sheet, options);
              }
            };
            /**
             * Call `onChangeValue` hooks.
             */

            _proto.onChangeValue = function onChangeValue(value, prop, rule) {
              var processedValue = value;

              for (var i = 0; i < this.registry.onChangeValue.length; i++) {
                processedValue = this.registry.onChangeValue[i](
                  processedValue,
                  prop,
                  rule
                );
              }

              return processedValue;
            };
            /**
             * Register a plugin.
             */

            _proto.use = function use(newPlugin, options) {
              if (options === void 0) {
                options = {
                  queue: "external",
                };
              }

              var plugins = this.plugins[options.queue]; // Avoids applying same plugin twice, at least based on ref.

              if (plugins.indexOf(newPlugin) !== -1) {
                return;
              }

              plugins.push(newPlugin);
              this.registry = []
                .concat(this.plugins.external, this.plugins.internal)
                .reduce(
                  function (registry, plugin) {
                    for (var name in plugin) {
                      if (name in registry) {
                        registry[name].push(plugin[name]);
                      } else {
                        false ? undefined : void 0;
                      }
                    }

                    return registry;
                  },
                  {
                    onCreateRule: [],
                    onProcessRule: [],
                    onProcessStyle: [],
                    onProcessSheet: [],
                    onChangeValue: [],
                    onUpdate: [],
                  }
                );
            };

            return PluginsRegistry;
          })();

        /**
         * Sheets registry to access them all at one place.
         */
        var jss_esm_SheetsRegistry =
          /*#__PURE__*/
          (function () {
            function SheetsRegistry() {
              this.registry = [];
            }

            var _proto = SheetsRegistry.prototype;

            /**
             * Register a Style Sheet.
             */
            _proto.add = function add(sheet) {
              var registry = this.registry;
              var index = sheet.options.index;
              if (registry.indexOf(sheet) !== -1) return;

              if (registry.length === 0 || index >= this.index) {
                registry.push(sheet);
                return;
              } // Find a position.

              for (var i = 0; i < registry.length; i++) {
                if (registry[i].options.index > index) {
                  registry.splice(i, 0, sheet);
                  return;
                }
              }
            };
            /**
             * Reset the registry.
             */

            _proto.reset = function reset() {
              this.registry = [];
            };
            /**
             * Remove a Style Sheet.
             */

            _proto.remove = function remove(sheet) {
              var index = this.registry.indexOf(sheet);
              this.registry.splice(index, 1);
            };
            /**
             * Convert all attached sheets to a CSS string.
             */

            _proto.toString = function toString(_temp) {
              var _ref = _temp === void 0 ? {} : _temp,
                attached = _ref.attached,
                options = _objectWithoutPropertiesLoose(_ref, ["attached"]);

              var css = "";

              for (var i = 0; i < this.registry.length; i++) {
                var sheet = this.registry[i];

                if (attached != null && sheet.attached !== attached) {
                  continue;
                }

                if (css) css += "\n";
                css += sheet.toString(options);
              }

              return css;
            };

            _createClass(SheetsRegistry, [
              {
                key: "index",

                /**
                 * Current highest index number.
                 */
                get: function get() {
                  return this.registry.length === 0
                    ? 0
                    : this.registry[this.registry.length - 1].options.index;
                },
              },
            ]);

            return SheetsRegistry;
          })();

        /**
         * This is a global sheets registry. Only DomRenderer will add sheets to it.
         * On the server one should use an own SheetsRegistry instance and add the
         * sheets to it, because you need to make sure to create a new registry for
         * each request in order to not leak sheets across requests.
         */

        var registry = new jss_esm_SheetsRegistry();

        /* eslint-disable */
        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var globalThis =
          typeof window != "undefined" && window.Math == Math
            ? window
            : typeof self != "undefined" && self.Math == Math
            ? self
            : Function("return this")();

        var ns = "2f1acc6c3a606b082e5eef5e54414ffb";
        if (globalThis[ns] == null) globalThis[ns] = 0; // Bundle may contain multiple JSS versions at the same time. In order to identify
        // the current version with just one short number and use it for classes generation
        // we use a counter. Also it is more accurate, because user can manually reevaluate
        // the module.

        var moduleId = globalThis[ns]++;

        var maxRules = 1e10;

        /**
         * Returns a function which generates unique class names based on counters.
         * When new generator function is created, rule counter is reseted.
         * We need to reset the rule counter for SSR for each request.
         */
        var createGenerateId = function createGenerateId(options) {
          if (options === void 0) {
            options = {};
          }

          var ruleCounter = 0;
          return function (rule, sheet) {
            ruleCounter += 1;

            if (ruleCounter > maxRules) {
              false ? undefined : void 0;
            }

            var jssId = "";
            var prefix = "";

            if (sheet) {
              if (sheet.options.classNamePrefix) {
                prefix = sheet.options.classNamePrefix;
              }

              if (sheet.options.jss.id != null) {
                jssId = String(sheet.options.jss.id);
              }
            }

            if (options.minify) {
              // Using "c" because a number can't be the first char in a class name.
              return "" + (prefix || "c") + moduleId + jssId + ruleCounter;
            }

            return (
              prefix +
              rule.key +
              "-" +
              moduleId +
              (jssId ? "-" + jssId : "") +
              "-" +
              ruleCounter
            );
          };
        };

        /**
         * Cache the value from the first time a function is called.
         */
        var memoize = function memoize(fn) {
          var value;
          return function () {
            if (!value) value = fn();
            return value;
          };
        };

        /**
         * Get a style property value.
         */
        var getPropertyValue = function getPropertyValue(cssRule, prop) {
          try {
            // Support CSSTOM.
            if (cssRule.attributeStyleMap) {
              return cssRule.attributeStyleMap.get(prop);
            }

            return cssRule.style.getPropertyValue(prop);
          } catch (err) {
            // IE may throw if property is unknown.
            return "";
          }
        };

        /**
         * Set a style property.
         */
        var setProperty = function setProperty(cssRule, prop, value) {
          try {
            var cssValue = value;

            if (Array.isArray(value)) {
              cssValue = toCssValue(value, true);

              if (value[value.length - 1] === "!important") {
                cssRule.style.setProperty(prop, cssValue, "important");
                return true;
              }
            } // Support CSSTOM.

            if (cssRule.attributeStyleMap) {
              cssRule.attributeStyleMap.set(prop, cssValue);
            } else {
              cssRule.style.setProperty(prop, cssValue);
            }
          } catch (err) {
            // IE may throw if property is unknown.
            return false;
          }

          return true;
        };

        /**
         * Remove a style property.
         */
        var removeProperty = function removeProperty(cssRule, prop) {
          try {
            // Support CSSTOM.
            if (cssRule.attributeStyleMap) {
              cssRule.attributeStyleMap.delete(prop);
            } else {
              cssRule.style.removeProperty(prop);
            }
          } catch (err) {
            false ? undefined : void 0;
          }
        };

        /**
         * Set the selector.
         */
        var setSelector = function setSelector(cssRule, selectorText) {
          cssRule.selectorText = selectorText; // Return false if setter was not successful.
          // Currently works in chrome only.

          return cssRule.selectorText === selectorText;
        };
        /**
         * Gets the `head` element upon the first call and caches it.
         * We assume it can't be null.
         */

        var getHead = memoize(function () {
          return document.querySelector("head");
        });
        /**
         * Find attached sheet with an index higher than the passed one.
         */

        function findHigherSheet(registry, options) {
          for (var i = 0; i < registry.length; i++) {
            var sheet = registry[i];

            if (
              sheet.attached &&
              sheet.options.index > options.index &&
              sheet.options.insertionPoint === options.insertionPoint
            ) {
              return sheet;
            }
          }

          return null;
        }
        /**
         * Find attached sheet with the highest index.
         */

        function findHighestSheet(registry, options) {
          for (var i = registry.length - 1; i >= 0; i--) {
            var sheet = registry[i];

            if (
              sheet.attached &&
              sheet.options.insertionPoint === options.insertionPoint
            ) {
              return sheet;
            }
          }

          return null;
        }
        /**
         * Find a comment with "jss" inside.
         */

        function findCommentNode(text) {
          var head = getHead();

          for (var i = 0; i < head.childNodes.length; i++) {
            var node = head.childNodes[i];

            if (node.nodeType === 8 && node.nodeValue.trim() === text) {
              return node;
            }
          }

          return null;
        }

        /**
         * Find a node before which we can insert the sheet.
         */
        function findPrevNode(options) {
          var registry$1 = registry.registry;

          if (registry$1.length > 0) {
            // Try to insert before the next higher sheet.
            var sheet = findHigherSheet(registry$1, options);

            if (sheet && sheet.renderer) {
              return {
                parent: sheet.renderer.element.parentNode,
                node: sheet.renderer.element,
              };
            } // Otherwise insert after the last attached.

            sheet = findHighestSheet(registry$1, options);

            if (sheet && sheet.renderer) {
              return {
                parent: sheet.renderer.element.parentNode,
                node: sheet.renderer.element.nextSibling,
              };
            }
          } // Try to find a comment placeholder if registry is empty.

          var insertionPoint = options.insertionPoint;

          if (insertionPoint && typeof insertionPoint === "string") {
            var comment = findCommentNode(insertionPoint);

            if (comment) {
              return {
                parent: comment.parentNode,
                node: comment.nextSibling,
              };
            } // If user specifies an insertion point and it can't be found in the document -
            // bad specificity issues may appear.

            false ? undefined : void 0;
          }

          return false;
        }
        /**
         * Insert style element into the DOM.
         */

        function insertStyle(style, options) {
          var insertionPoint = options.insertionPoint;
          var nextNode = findPrevNode(options);

          if (nextNode !== false && nextNode.parent) {
            nextNode.parent.insertBefore(style, nextNode.node);
            return;
          } // Works with iframes and any node types.

          if (insertionPoint && typeof insertionPoint.nodeType === "number") {
            // https://stackoverflow.com/questions/41328728/force-casting-in-flow
            var insertionPointElement = insertionPoint;
            var parentNode = insertionPointElement.parentNode;
            if (parentNode)
              parentNode.insertBefore(style, insertionPointElement.nextSibling);
            else false ? undefined : void 0;
            return;
          }

          getHead().appendChild(style);
        }
        /**
         * Read jss nonce setting from the page if the user has set it.
         */

        var getNonce = memoize(function () {
          var node = document.querySelector('meta[property="csp-nonce"]');
          return node ? node.getAttribute("content") : null;
        });

        var _insertRule = function insertRule(container, rule, index) {
          try {
            if ("insertRule" in container) {
              var c = container;
              c.insertRule(rule, index);
            } // Keyframes rule.
            else if ("appendRule" in container) {
              var _c = container;

              _c.appendRule(rule);
            }
          } catch (err) {
            false ? undefined : void 0;
            return false;
          }

          return container.cssRules[index];
        };

        var getValidRuleInsertionIndex = function getValidRuleInsertionIndex(
          container,
          index
        ) {
          var maxIndex = container.cssRules.length; // In case previous insertion fails, passed index might be wrong

          if (index === undefined || index > maxIndex) {
            // eslint-disable-next-line no-param-reassign
            return maxIndex;
          }

          return index;
        };

        var createStyle = function createStyle() {
          var el = document.createElement("style"); // Without it, IE will have a broken source order specificity if we
          // insert rules after we insert the style tag.
          // It seems to kick-off the source order specificity algorithm.

          el.textContent = "\n";
          return el;
        };

        var DomRenderer =
          /*#__PURE__*/
          (function () {
            // HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696
            // Will be empty if link: true option is not set, because
            // it is only for use together with insertRule API.
            function DomRenderer(sheet) {
              this.getPropertyValue = getPropertyValue;
              this.setProperty = setProperty;
              this.removeProperty = removeProperty;
              this.setSelector = setSelector;
              this.element = void 0;
              this.sheet = void 0;
              this.hasInsertedRules = false;
              this.cssRules = [];
              // There is no sheet when the renderer is used from a standalone StyleRule.
              if (sheet) registry.add(sheet);
              this.sheet = sheet;

              var _ref = this.sheet ? this.sheet.options : {},
                media = _ref.media,
                meta = _ref.meta,
                element = _ref.element;

              this.element = element || createStyle();
              this.element.setAttribute("data-jss", "");
              if (media) this.element.setAttribute("media", media);
              if (meta) this.element.setAttribute("data-meta", meta);
              var nonce = getNonce();
              if (nonce) this.element.setAttribute("nonce", nonce);
            }
            /**
             * Insert style element into render tree.
             */

            var _proto = DomRenderer.prototype;

            _proto.attach = function attach() {
              // In the case the element node is external and it is already in the DOM.
              if (this.element.parentNode || !this.sheet) return;
              insertStyle(this.element, this.sheet.options); // When rules are inserted using `insertRule` API, after `sheet.detach().attach()`
              // most browsers create a new CSSStyleSheet, except of all IEs.

              var deployed = Boolean(this.sheet && this.sheet.deployed);

              if (this.hasInsertedRules && deployed) {
                this.hasInsertedRules = false;
                this.deploy();
              }
            };
            /**
             * Remove style element from render tree.
             */

            _proto.detach = function detach() {
              if (!this.sheet) return;
              var parentNode = this.element.parentNode;
              if (parentNode) parentNode.removeChild(this.element); // In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.
              // Though IE will keep them and we need a consistent behavior.

              if (this.sheet.options.link) {
                this.cssRules = [];
                this.element.textContent = "\n";
              }
            };
            /**
             * Inject CSS string into element.
             */

            _proto.deploy = function deploy() {
              var sheet = this.sheet;
              if (!sheet) return;

              if (sheet.options.link) {
                this.insertRules(sheet.rules);
                return;
              }

              this.element.textContent = "\n" + sheet.toString() + "\n";
            };
            /**
             * Insert RuleList into an element.
             */

            _proto.insertRules = function insertRules(rules, nativeParent) {
              for (var i = 0; i < rules.index.length; i++) {
                this.insertRule(rules.index[i], i, nativeParent);
              }
            };
            /**
             * Insert a rule into element.
             */

            _proto.insertRule = function insertRule(rule, index, nativeParent) {
              if (nativeParent === void 0) {
                nativeParent = this.element.sheet;
              }

              if (rule.rules) {
                var parent = rule;
                var latestNativeParent = nativeParent;

                if (rule.type === "conditional" || rule.type === "keyframes") {
                  var _insertionIndex = getValidRuleInsertionIndex(
                    nativeParent,
                    index
                  ); // We need to render the container without children first.

                  latestNativeParent = _insertRule(
                    nativeParent,
                    parent.toString({
                      children: false,
                    }),
                    _insertionIndex
                  );

                  if (latestNativeParent === false) {
                    return false;
                  }

                  this.refCssRule(rule, _insertionIndex, latestNativeParent);
                }

                this.insertRules(parent.rules, latestNativeParent);
                return latestNativeParent;
              }

              var ruleStr = rule.toString();
              if (!ruleStr) return false;
              var insertionIndex = getValidRuleInsertionIndex(
                nativeParent,
                index
              );

              var nativeRule = _insertRule(
                nativeParent,
                ruleStr,
                insertionIndex
              );

              if (nativeRule === false) {
                return false;
              }

              this.hasInsertedRules = true;
              this.refCssRule(rule, insertionIndex, nativeRule);
              return nativeRule;
            };

            _proto.refCssRule = function refCssRule(rule, index, cssRule) {
              rule.renderable = cssRule; // We only want to reference the top level rules, deleteRule API doesn't support removing nested rules
              // like rules inside media queries or keyframes

              if (rule.options.parent instanceof jss_esm_StyleSheet) {
                this.cssRules[index] = cssRule;
              }
            };
            /**
             * Delete a rule.
             */

            _proto.deleteRule = function deleteRule(cssRule) {
              var sheet = this.element.sheet;
              var index = this.indexOf(cssRule);
              if (index === -1) return false;
              sheet.deleteRule(index);
              this.cssRules.splice(index, 1);
              return true;
            };
            /**
             * Get index of a CSS Rule.
             */

            _proto.indexOf = function indexOf(cssRule) {
              return this.cssRules.indexOf(cssRule);
            };
            /**
             * Generate a new CSS rule and replace the existing one.
             *
             * Only used for some old browsers because they can't set a selector.
             */

            _proto.replaceRule = function replaceRule(cssRule, rule) {
              var index = this.indexOf(cssRule);
              if (index === -1) return false;
              this.element.sheet.deleteRule(index);
              this.cssRules.splice(index, 1);
              return this.insertRule(rule, index);
            };
            /**
             * Get all rules elements.
             */

            _proto.getRules = function getRules() {
              return this.element.sheet.cssRules;
            };

            return DomRenderer;
          })();

        var instanceCounter = 0;

        var jss_esm_Jss =
          /*#__PURE__*/
          (function () {
            function Jss(options) {
              this.id = instanceCounter++;
              this.version = "10.5.1";
              this.plugins = new PluginsRegistry();
              this.options = {
                id: {
                  minify: false,
                },
                createGenerateId: createGenerateId,
                Renderer: dist_module ? DomRenderer : null,
                plugins: [],
              };
              this.generateId = createGenerateId({
                minify: false,
              });

              for (var i = 0; i < plugins.length; i++) {
                this.plugins.use(plugins[i], {
                  queue: "internal",
                });
              }

              this.setup(options);
            }
            /**
             * Prepares various options, applies plugins.
             * Should not be used twice on the same instance, because there is no plugins
             * deduplication logic.
             */

            var _proto = Jss.prototype;

            _proto.setup = function setup(options) {
              if (options === void 0) {
                options = {};
              }

              if (options.createGenerateId) {
                this.options.createGenerateId = options.createGenerateId;
              }

              if (options.id) {
                this.options.id = _extends({}, this.options.id, options.id);
              }

              if (options.createGenerateId || options.id) {
                this.generateId = this.options.createGenerateId(
                  this.options.id
                );
              }

              if (options.insertionPoint != null)
                this.options.insertionPoint = options.insertionPoint;

              if ("Renderer" in options) {
                this.options.Renderer = options.Renderer;
              } // eslint-disable-next-line prefer-spread

              if (options.plugins) this.use.apply(this, options.plugins);
              return this;
            };
            /**
             * Create a Style Sheet.
             */

            _proto.createStyleSheet = function createStyleSheet(
              styles,
              options
            ) {
              if (options === void 0) {
                options = {};
              }

              var _options = options,
                index = _options.index;

              if (typeof index !== "number") {
                index = registry.index === 0 ? 0 : registry.index + 1;
              }

              var sheet = new jss_esm_StyleSheet(
                styles,
                _extends({}, options, {
                  jss: this,
                  generateId: options.generateId || this.generateId,
                  insertionPoint: this.options.insertionPoint,
                  Renderer: this.options.Renderer,
                  index: index,
                })
              );
              this.plugins.onProcessSheet(sheet);
              return sheet;
            };
            /**
             * Detach the Style Sheet and remove it from the registry.
             */

            _proto.removeStyleSheet = function removeStyleSheet(sheet) {
              sheet.detach();
              registry.remove(sheet);
              return this;
            };
            /**
             * Create a rule without a Style Sheet.
             * [Deprecated] will be removed in the next major version.
             */

            _proto.createRule = function createRule$1(name, style, options) {
              if (style === void 0) {
                style = {};
              }

              if (options === void 0) {
                options = {};
              }

              // Enable rule without name for inline styles.
              if (typeof name === "object") {
                // $FlowFixMe[incompatible-call]
                return this.createRule(undefined, name, style);
              } // $FlowFixMe[incompatible-type]

              var ruleOptions = _extends({}, options, {
                name: name,
                jss: this,
                Renderer: this.options.Renderer,
              });

              if (!ruleOptions.generateId)
                ruleOptions.generateId = this.generateId;
              if (!ruleOptions.classes) ruleOptions.classes = {};
              if (!ruleOptions.keyframes) ruleOptions.keyframes = {};

              var rule = createRule(name, style, ruleOptions);

              if (rule) this.plugins.onProcessRule(rule);
              return rule;
            };
            /**
             * Register plugin. Passed function will be invoked with a rule instance.
             */

            _proto.use = function use() {
              var _this = this;

              for (
                var _len = arguments.length,
                  plugins = new Array(_len),
                  _key = 0;
                _key < _len;
                _key++
              ) {
                plugins[_key] = arguments[_key];
              }

              plugins.forEach(function (plugin) {
                _this.plugins.use(plugin);
              });
              return this;
            };

            return Jss;
          })();

        /**
         * Extracts a styles object with only props that contain function values.
         */
        function getDynamicStyles(styles) {
          var to = null;

          for (var key in styles) {
            var value = styles[key];
            var type = typeof value;

            if (type === "function") {
              if (!to) to = {};
              to[key] = value;
            } else if (
              type === "object" &&
              value !== null &&
              !Array.isArray(value)
            ) {
              var extracted = getDynamicStyles(value);

              if (extracted) {
                if (!to) to = {};
                to[key] = extracted;
              }
            }
          }

          return to;
        }

        /**
         * SheetsManager is like a WeakMap which is designed to count StyleSheet
         * instances and attach/detach automatically.
         */
        var jss_esm_SheetsManager =
          /*#__PURE__*/
          (function () {
            function SheetsManager() {
              this.length = 0;
              this.sheets = new WeakMap();
            }

            var _proto = SheetsManager.prototype;

            _proto.get = function get(key) {
              var entry = this.sheets.get(key);
              return entry && entry.sheet;
            };

            _proto.add = function add(key, sheet) {
              if (this.sheets.has(key)) return;
              this.length++;
              this.sheets.set(key, {
                sheet: sheet,
                refs: 0,
              });
            };

            _proto.manage = function manage(key) {
              var entry = this.sheets.get(key);

              if (entry) {
                if (entry.refs === 0) {
                  entry.sheet.attach();
                }

                entry.refs++;
                return entry.sheet;
              }

              tiny_warning_esm(
                false,
                "[JSS] SheetsManager: can't find sheet to manage"
              );
              return undefined;
            };

            _proto.unmanage = function unmanage(key) {
              var entry = this.sheets.get(key);

              if (entry) {
                if (entry.refs > 0) {
                  entry.refs--;
                  if (entry.refs === 0) entry.sheet.detach();
                }
              } else {
                tiny_warning_esm(
                  false,
                  "SheetsManager: can't find sheet to unmanage"
                );
              }
            };

            _createClass(SheetsManager, [
              {
                key: "size",
                get: function get() {
                  return this.length;
                },
              },
            ]);

            return SheetsManager;
          })();

        /**
         * A better abstraction over CSS.
         *
         * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
         * @website https://github.com/cssinjs/jss
         * @license MIT
         */

        /**
         * Export a constant indicating if this browser has CSSTOM support.
         * https://developers.google.com/web/updates/2018/03/cssom
         */
        var hasCSSTOMSupport =
          typeof CSS === "object" && CSS != null && "number" in CSS;
        /**
         * Creates a new instance of Jss.
         */

        var jss_esm_create = function create(options) {
          return new jss_esm_Jss(options);
        };
        /**
         * A global Jss instance.
         */

        var jss_esm_jss = jss_esm_create();

        /* harmony default export */ var jss_esm = jss_esm_jss;

        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js

        function mergeClasses() {
          var options =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          var baseClasses = options.baseClasses,
            newClasses = options.newClasses,
            Component = options.Component;

          if (!newClasses) {
            return baseClasses;
          }

          var nextClasses = _extends({}, baseClasses);

          if (false) {
          }

          Object.keys(newClasses).forEach(function (key) {
            if (false) {
            }

            if (newClasses[key]) {
              nextClasses[key] = ""
                .concat(baseClasses[key], " ")
                .concat(newClasses[key]);
            }
          });
          return nextClasses;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/multiKeyStore.js
        // Used https://github.com/thinkloop/multi-key-cache as inspiration
        var multiKeyStore = {
          set: function set(cache, key1, key2, value) {
            var subCache = cache.get(key1);

            if (!subCache) {
              subCache = new Map();
              cache.set(key1, subCache);
            }

            subCache.set(key2, value);
          },
          get: function get(cache, key1, key2) {
            var subCache = cache.get(key1);
            return subCache ? subCache.get(key2) : undefined;
          },
          delete: function _delete(cache, key1, key2) {
            var subCache = cache.get(key1);
            subCache.delete(key2);
          },
        };
        /* harmony default export */ var makeStyles_multiKeyStore = multiKeyStore;
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js

        var ThemeContext = react_default.a.createContext(null);

        if (false) {
        }

        /* harmony default export */ var useTheme_ThemeContext = ThemeContext;
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/useTheme/useTheme.js

        function useTheme() {
          var theme = react_default.a.useContext(useTheme_ThemeContext);

          if (false) {
          }

          return theme;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/ThemeProvider/nested.js
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        /* harmony default export */ var nested = hasSymbol
          ? Symbol.for("mui.nested")
          : "__THEME_NESTED__";
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js

        /**
         * This is the list of the style rule name we use as drop in replacement for the built-in
         * pseudo classes (:checked, :disabled, :focused, etc.).
         *
         * Why do they exist in the first place?
         * These classes are used at a specificity of 2.
         * It allows them to override previously definied styles as well as
         * being untouched by simple user overrides.
         */

        var createGenerateClassName_pseudoClasses = [
          "checked",
          "disabled",
          "error",
          "focused",
          "focusVisible",
          "required",
          "expanded",
          "selected",
        ]; // Returns a function which generates unique class names based on counters.
        // When new generator function is created, rule counter is reset.
        // We need to reset the rule counter for SSR for each request.
        //
        // It's inspired by
        // https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

        function createGenerateClassName() {
          var options =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};
          var _options$disableGloba = options.disableGlobal,
            disableGlobal =
              _options$disableGloba === void 0 ? false : _options$disableGloba,
            _options$productionPr = options.productionPrefix,
            productionPrefix =
              _options$productionPr === void 0 ? "jss" : _options$productionPr,
            _options$seed = options.seed,
            seed = _options$seed === void 0 ? "" : _options$seed;
          var seedPrefix = seed === "" ? "" : "".concat(seed, "-");
          var ruleCounter = 0;

          var getNextCounterId = function getNextCounterId() {
            ruleCounter += 1;

            if (false) {
            }

            return ruleCounter;
          };

          return function (rule, styleSheet) {
            var name = styleSheet.options.name; // Is a global static MUI style?

            if (
              name &&
              name.indexOf("Mui") === 0 &&
              !styleSheet.options.link &&
              !disableGlobal
            ) {
              // We can use a shorthand class name, we never use the keys to style the components.
              if (
                createGenerateClassName_pseudoClasses.indexOf(rule.key) !== -1
              ) {
                return "Mui-".concat(rule.key);
              }

              var prefix = ""
                .concat(seedPrefix)
                .concat(name, "-")
                .concat(rule.key);

              if (!styleSheet.options.theme[nested] || seed !== "") {
                return prefix;
              }

              return "".concat(prefix, "-").concat(getNextCounterId());
            }

            if (true) {
              return ""
                .concat(seedPrefix)
                .concat(productionPrefix)
                .concat(getNextCounterId());
            }

            var suffix = "".concat(rule.key, "-").concat(getNextCounterId()); // Help with debuggability.

            if (styleSheet.options.classNamePrefix) {
              return ""
                .concat(seedPrefix)
                .concat(styleSheet.options.classNamePrefix, "-")
                .concat(suffix);
            }

            return "".concat(seedPrefix).concat(suffix);
          };
        }
        // CONCATENATED MODULE: ./node_modules/jss-plugin-rule-value-function/dist/jss-plugin-rule-value-function.esm.js

        var now = Date.now();
        var fnValuesNs = "fnValues" + now;
        var fnRuleNs = "fnStyle" + ++now;

        var jss_plugin_rule_value_function_esm_functionPlugin = function functionPlugin() {
          return {
            onCreateRule: function onCreateRule(name, decl, options) {
              if (typeof decl !== "function") return null;
              var rule = createRule(name, {}, options);
              rule[fnRuleNs] = decl;
              return rule;
            },
            onProcessStyle: function onProcessStyle(style, rule) {
              // We need to extract function values from the declaration, so that we can keep core unaware of them.
              // We need to do that only once.
              // We don't need to extract functions on each style update, since this can happen only once.
              // We don't support function values inside of function rules.
              if (fnValuesNs in rule || fnRuleNs in rule) return style;
              var fnValues = {};

              for (var prop in style) {
                var value = style[prop];
                if (typeof value !== "function") continue;
                delete style[prop];
                fnValues[prop] = value;
              } // $FlowFixMe[prop-missing]

              rule[fnValuesNs] = fnValues;
              return style;
            },
            onUpdate: function onUpdate(data, rule, sheet, options) {
              var styleRule = rule; // $FlowFixMe[prop-missing]

              var fnRule = styleRule[fnRuleNs]; // If we have a style function, the entire rule is dynamic and style object
              // will be returned from that function.

              if (fnRule) {
                // Empty object will remove all currently defined props
                // in case function rule returns a falsy value.
                styleRule.style = fnRule(data) || {};

                if (false) {
                  var prop;
                }
              } // $FlowFixMe[prop-missing]

              var fnValues = styleRule[fnValuesNs]; // If we have a fn values map, it is a rule with function values.

              if (fnValues) {
                for (var _prop in fnValues) {
                  styleRule.prop(_prop, fnValues[_prop](data), options);
                }
              }
            },
          };
        };

        /* harmony default export */ var jss_plugin_rule_value_function_esm = jss_plugin_rule_value_function_esm_functionPlugin;

        // CONCATENATED MODULE: ./node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js

        var at = "@global";
        var atPrefix = "@global ";

        var jss_plugin_global_esm_GlobalContainerRule =
          /*#__PURE__*/
          (function () {
            function GlobalContainerRule(key, styles, options) {
              this.type = "global";
              this.at = at;
              this.rules = void 0;
              this.options = void 0;
              this.key = void 0;
              this.isProcessed = false;
              this.key = key;
              this.options = options;
              this.rules = new jss_esm_RuleList(
                _extends({}, options, {
                  parent: this,
                })
              );

              for (var selector in styles) {
                this.rules.add(selector, styles[selector]);
              }

              this.rules.process();
            }
            /**
             * Get a rule.
             */

            var _proto = GlobalContainerRule.prototype;

            _proto.getRule = function getRule(name) {
              return this.rules.get(name);
            };
            /**
             * Create and register rule, run plugins.
             */

            _proto.addRule = function addRule(name, style, options) {
              var rule = this.rules.add(name, style, options);
              if (rule) this.options.jss.plugins.onProcessRule(rule);
              return rule;
            };
            /**
             * Get index of a rule.
             */

            _proto.indexOf = function indexOf(rule) {
              return this.rules.indexOf(rule);
            };
            /**
             * Generates a CSS string.
             */

            _proto.toString = function toString() {
              return this.rules.toString();
            };

            return GlobalContainerRule;
          })();

        var jss_plugin_global_esm_GlobalPrefixedRule =
          /*#__PURE__*/
          (function () {
            function GlobalPrefixedRule(key, style, options) {
              this.type = "global";
              this.at = at;
              this.options = void 0;
              this.rule = void 0;
              this.isProcessed = false;
              this.key = void 0;
              this.key = key;
              this.options = options;
              var selector = key.substr(atPrefix.length);
              this.rule = options.jss.createRule(
                selector,
                style,
                _extends({}, options, {
                  parent: this,
                })
              );
            }

            var _proto2 = GlobalPrefixedRule.prototype;

            _proto2.toString = function toString(options) {
              return this.rule ? this.rule.toString(options) : "";
            };

            return GlobalPrefixedRule;
          })();

        var separatorRegExp = /\s*,\s*/g;

        function addScope(selector, scope) {
          var parts = selector.split(separatorRegExp);
          var scoped = "";

          for (var i = 0; i < parts.length; i++) {
            scoped += scope + " " + parts[i].trim();
            if (parts[i + 1]) scoped += ", ";
          }

          return scoped;
        }

        function handleNestedGlobalContainerRule(rule, sheet) {
          var options = rule.options,
            style = rule.style;
          var rules = style ? style[at] : null;
          if (!rules) return;

          for (var name in rules) {
            sheet.addRule(
              name,
              rules[name],
              _extends({}, options, {
                selector: addScope(name, rule.selector),
              })
            );
          }

          delete style[at];
        }

        function handlePrefixedGlobalRule(rule, sheet) {
          var options = rule.options,
            style = rule.style;

          for (var prop in style) {
            if (prop[0] !== "@" || prop.substr(0, at.length) !== at) continue;
            var selector = addScope(prop.substr(at.length), rule.selector);
            sheet.addRule(
              selector,
              style[prop],
              _extends({}, options, {
                selector: selector,
              })
            );
            delete style[prop];
          }
        }
        /**
         * Convert nested rules to separate, remove them from original styles.
         *
         * @param {Rule} rule
         * @api public
         */

        function jssGlobal() {
          function onCreateRule(name, styles, options) {
            if (!name) return null;

            if (name === at) {
              return new jss_plugin_global_esm_GlobalContainerRule(
                name,
                styles,
                options
              );
            }

            if (
              name[0] === "@" &&
              name.substr(0, atPrefix.length) === atPrefix
            ) {
              return new jss_plugin_global_esm_GlobalPrefixedRule(
                name,
                styles,
                options
              );
            }

            var parent = options.parent;

            if (parent) {
              if (
                parent.type === "global" ||
                (parent.options.parent &&
                  parent.options.parent.type === "global")
              ) {
                options.scoped = false;
              }
            }

            if (options.scoped === false) {
              options.selector = name;
            }

            return null;
          }

          function onProcessRule(rule, sheet) {
            if (rule.type !== "style" || !sheet) return;
            handleNestedGlobalContainerRule(rule, sheet);
            handlePrefixedGlobalRule(rule, sheet);
          }

          return {
            onCreateRule: onCreateRule,
            onProcessRule: onProcessRule,
          };
        }

        /* harmony default export */ var jss_plugin_global_esm = jssGlobal;

        // CONCATENATED MODULE: ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js

        var jss_plugin_nested_esm_separatorRegExp = /\s*,\s*/g;
        var parentRegExp = /&/g;
        var jss_plugin_nested_esm_refRegExp = /\$([\w-]+)/g;
        /**
         * Convert nested rules to separate, remove them from original styles.
         *
         * @param {Rule} rule
         * @api public
         */

        function jssNested() {
          // Get a function to be used for $ref replacement.
          function getReplaceRef(container, sheet) {
            return function (match, key) {
              var rule =
                container.getRule(key) || (sheet && sheet.getRule(key));

              if (rule) {
                rule = rule;
                return rule.selector;
              }

              false ? undefined : void 0;
              return key;
            };
          }

          function replaceParentRefs(nestedProp, parentProp) {
            var parentSelectors = parentProp.split(
              jss_plugin_nested_esm_separatorRegExp
            );
            var nestedSelectors = nestedProp.split(
              jss_plugin_nested_esm_separatorRegExp
            );
            var result = "";

            for (var i = 0; i < parentSelectors.length; i++) {
              var parent = parentSelectors[i];

              for (var j = 0; j < nestedSelectors.length; j++) {
                var nested = nestedSelectors[j];
                if (result) result += ", "; // Replace all & by the parent or prefix & with the parent.

                result +=
                  nested.indexOf("&") !== -1
                    ? nested.replace(parentRegExp, parent)
                    : parent + " " + nested;
              }
            }

            return result;
          }

          function getOptions(rule, container, prevOptions) {
            // Options has been already created, now we only increase index.
            if (prevOptions)
              return _extends({}, prevOptions, {
                index: prevOptions.index + 1, // $FlowFixMe[prop-missing]
              });
            var nestingLevel = rule.options.nestingLevel;
            nestingLevel = nestingLevel === undefined ? 1 : nestingLevel + 1;

            var options = _extends({}, rule.options, {
              nestingLevel: nestingLevel,
              index: container.indexOf(rule) + 1, // We don't need the parent name to be set options for chlid.
            });

            delete options.name;
            return options;
          }

          function onProcessStyle(style, rule, sheet) {
            if (rule.type !== "style") return style;
            var styleRule = rule;
            var container = styleRule.options.parent;
            var options;
            var replaceRef;

            for (var prop in style) {
              var isNested = prop.indexOf("&") !== -1;
              var isNestedConditional = prop[0] === "@";
              if (!isNested && !isNestedConditional) continue;
              options = getOptions(styleRule, container, options);

              if (isNested) {
                var selector = replaceParentRefs(prop, styleRule.selector); // Lazily create the ref replacer function just once for
                // all nested rules within the sheet.

                if (!replaceRef) replaceRef = getReplaceRef(container, sheet); // Replace all $refs.

                selector = selector.replace(
                  jss_plugin_nested_esm_refRegExp,
                  replaceRef
                );
                container.addRule(
                  selector,
                  style[prop],
                  _extends({}, options, {
                    selector: selector,
                  })
                );
              } else if (isNestedConditional) {
                // Place conditional right after the parent rule to ensure right ordering.
                container
                  .addRule(prop, {}, options) // Flow expects more options but they aren't required
                  // And flow doesn't know this will always be a StyleRule which has the addRule method
                  // $FlowFixMe[incompatible-use]
                  // $FlowFixMe[prop-missing]
                  .addRule(styleRule.key, style[prop], {
                    selector: styleRule.selector,
                  });
              }

              delete style[prop];
            }

            return style;
          }

          return {
            onProcessStyle: onProcessStyle,
          };
        }

        /* harmony default export */ var jss_plugin_nested_esm = jssNested;

        // CONCATENATED MODULE: ./node_modules/hyphenate-style-name/index.js
        /* eslint-disable no-var, prefer-template */
        var uppercasePattern = /[A-Z]/g;
        var msPattern = /^ms-/;
        var cache = {};

        function toHyphenLower(match) {
          return "-" + match.toLowerCase();
        }

        function hyphenateStyleName(name) {
          if (cache.hasOwnProperty(name)) {
            return cache[name];
          }

          var hName = name.replace(uppercasePattern, toHyphenLower);
          return (cache[name] = msPattern.test(hName) ? "-" + hName : hName);
        }

        /* harmony default export */ var hyphenate_style_name = hyphenateStyleName;

        // CONCATENATED MODULE: ./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js

        /**
         * Convert camel cased property names to dash separated.
         *
         * @param {Object} style
         * @return {Object}
         */

        function convertCase(style) {
          var converted = {};

          for (var prop in style) {
            var key =
              prop.indexOf("--") === 0 ? prop : hyphenate_style_name(prop);
            converted[key] = style[prop];
          }

          if (style.fallbacks) {
            if (Array.isArray(style.fallbacks))
              converted.fallbacks = style.fallbacks.map(convertCase);
            else converted.fallbacks = convertCase(style.fallbacks);
          }

          return converted;
        }
        /**
         * Allow camel cased property names by converting them back to dasherized.
         *
         * @param {Rule} rule
         */

        function camelCase() {
          function onProcessStyle(style) {
            if (Array.isArray(style)) {
              // Handle rules like @font-face, which can have multiple styles in an array
              for (var index = 0; index < style.length; index++) {
                style[index] = convertCase(style[index]);
              }

              return style;
            }

            return convertCase(style);
          }

          function onChangeValue(value, prop, rule) {
            if (prop.indexOf("--") === 0) {
              return value;
            }

            var hyphenatedProp = hyphenate_style_name(prop); // There was no camel case in place

            if (prop === hyphenatedProp) return value;
            rule.prop(hyphenatedProp, value); // Core will ignore that property value we set the proper one above.

            return null;
          }

          return {
            onProcessStyle: onProcessStyle,
            onChangeValue: onChangeValue,
          };
        }

        /* harmony default export */ var jss_plugin_camel_case_esm = camelCase;

        // CONCATENATED MODULE: ./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js

        var px = hasCSSTOMSupport && CSS ? CSS.px : "px";
        var ms = hasCSSTOMSupport && CSS ? CSS.ms : "ms";
        var jss_plugin_default_unit_esm_percent =
          hasCSSTOMSupport && CSS ? CSS.percent : "%";
        /**
         * Generated jss-plugin-default-unit CSS property units
         *
         * @type object
         */

        var defaultUnits = {
          // Animation properties
          "animation-delay": ms,
          "animation-duration": ms,
          // Background properties
          "background-position": px,
          "background-position-x": px,
          "background-position-y": px,
          "background-size": px,
          // Border Properties
          border: px,
          "border-bottom": px,
          "border-bottom-left-radius": px,
          "border-bottom-right-radius": px,
          "border-bottom-width": px,
          "border-left": px,
          "border-left-width": px,
          "border-radius": px,
          "border-right": px,
          "border-right-width": px,
          "border-top": px,
          "border-top-left-radius": px,
          "border-top-right-radius": px,
          "border-top-width": px,
          "border-width": px,
          "border-block": px,
          "border-block-end": px,
          "border-block-end-width": px,
          "border-block-start": px,
          "border-block-start-width": px,
          "border-block-width": px,
          "border-inline": px,
          "border-inline-end": px,
          "border-inline-end-width": px,
          "border-inline-start": px,
          "border-inline-start-width": px,
          "border-inline-width": px,
          "border-start-start-radius": px,
          "border-start-end-radius": px,
          "border-end-start-radius": px,
          "border-end-end-radius": px,
          // Margin properties
          margin: px,
          "margin-bottom": px,
          "margin-left": px,
          "margin-right": px,
          "margin-top": px,
          "margin-block": px,
          "margin-block-end": px,
          "margin-block-start": px,
          "margin-inline": px,
          "margin-inline-end": px,
          "margin-inline-start": px,
          // Padding properties
          padding: px,
          "padding-bottom": px,
          "padding-left": px,
          "padding-right": px,
          "padding-top": px,
          "padding-block": px,
          "padding-block-end": px,
          "padding-block-start": px,
          "padding-inline": px,
          "padding-inline-end": px,
          "padding-inline-start": px,
          // Mask properties
          "mask-position-x": px,
          "mask-position-y": px,
          "mask-size": px,
          // Width and height properties
          height: px,
          width: px,
          "min-height": px,
          "max-height": px,
          "min-width": px,
          "max-width": px,
          // Position properties
          bottom: px,
          left: px,
          top: px,
          right: px,
          inset: px,
          "inset-block": px,
          "inset-block-end": px,
          "inset-block-start": px,
          "inset-inline": px,
          "inset-inline-end": px,
          "inset-inline-start": px,
          // Shadow properties
          "box-shadow": px,
          "text-shadow": px,
          // Column properties
          "column-gap": px,
          "column-rule": px,
          "column-rule-width": px,
          "column-width": px,
          // Font and text properties
          "font-size": px,
          "font-size-delta": px,
          "letter-spacing": px,
          "text-decoration-thickness": px,
          "text-indent": px,
          "text-stroke": px,
          "text-stroke-width": px,
          "word-spacing": px,
          // Motion properties
          motion: px,
          "motion-offset": px,
          // Outline properties
          outline: px,
          "outline-offset": px,
          "outline-width": px,
          // Perspective properties
          perspective: px,
          "perspective-origin-x": jss_plugin_default_unit_esm_percent,
          "perspective-origin-y": jss_plugin_default_unit_esm_percent,
          // Transform properties
          "transform-origin": jss_plugin_default_unit_esm_percent,
          "transform-origin-x": jss_plugin_default_unit_esm_percent,
          "transform-origin-y": jss_plugin_default_unit_esm_percent,
          "transform-origin-z": jss_plugin_default_unit_esm_percent,
          // Transition properties
          "transition-delay": ms,
          "transition-duration": ms,
          // Alignment properties
          "vertical-align": px,
          "flex-basis": px,
          // Some random properties
          "shape-margin": px,
          size: px,
          gap: px,
          // Grid properties
          grid: px,
          "grid-gap": px,
          "row-gap": px,
          "grid-row-gap": px,
          "grid-column-gap": px,
          "grid-template-rows": px,
          "grid-template-columns": px,
          "grid-auto-rows": px,
          "grid-auto-columns": px,
          // Not existing properties.
          // Used to avoid issues with jss-plugin-expand integration.
          "box-shadow-x": px,
          "box-shadow-y": px,
          "box-shadow-blur": px,
          "box-shadow-spread": px,
          "font-line-height": px,
          "text-shadow-x": px,
          "text-shadow-y": px,
          "text-shadow-blur": px,
        };

        /**
         * Clones the object and adds a camel cased property version.
         */
        function addCamelCasedVersion(obj) {
          var regExp = /(-[a-z])/g;

          var replace = function replace(str) {
            return str[1].toUpperCase();
          };

          var newObj = {};

          for (var _key in obj) {
            newObj[_key] = obj[_key];
            newObj[_key.replace(regExp, replace)] = obj[_key];
          }

          return newObj;
        }

        var units = addCamelCasedVersion(defaultUnits);
        /**
         * Recursive deep style passing function
         */

        function iterate(prop, value, options) {
          if (value == null) return value;

          if (Array.isArray(value)) {
            for (var i = 0; i < value.length; i++) {
              value[i] = iterate(prop, value[i], options);
            }
          } else if (typeof value === "object") {
            if (prop === "fallbacks") {
              for (var innerProp in value) {
                value[innerProp] = iterate(
                  innerProp,
                  value[innerProp],
                  options
                );
              }
            } else {
              for (var _innerProp in value) {
                value[_innerProp] = iterate(
                  prop + "-" + _innerProp,
                  value[_innerProp],
                  options
                );
              }
            }
          } else if (typeof value === "number" && !Number.isNaN(value)) {
            var unit = options[prop] || units[prop]; // Add the unit if available, except for the special case of 0px.

            if (unit && !(value === 0 && unit === px)) {
              return typeof unit === "function"
                ? unit(value).toString()
                : "" + value + unit;
            }

            return value.toString();
          }

          return value;
        }
        /**
         * Add unit to numeric values.
         */

        function defaultUnit(options) {
          if (options === void 0) {
            options = {};
          }

          var camelCasedOptions = addCamelCasedVersion(options);

          function onProcessStyle(style, rule) {
            if (rule.type !== "style") return style;

            for (var prop in style) {
              style[prop] = iterate(prop, style[prop], camelCasedOptions);
            }

            return style;
          }

          function onChangeValue(value, prop) {
            return iterate(prop, value, camelCasedOptions);
          }

          return {
            onProcessStyle: onProcessStyle,
            onChangeValue: onChangeValue,
          };
        }

        /* harmony default export */ var jss_plugin_default_unit_esm = defaultUnit;

        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

        function _arrayWithoutHoles(arr) {
          if (Array.isArray(arr)) return _arrayLikeToArray(arr);
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
        function _iterableToArray(iter) {
          if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter))
            return Array.from(iter);
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
        function _nonIterableSpread() {
          throw new TypeError(
            "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
          );
        }
        // CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js

        function _toConsumableArray(arr) {
          return (
            _arrayWithoutHoles(arr) ||
            _iterableToArray(arr) ||
            _unsupportedIterableToArray(arr) ||
            _nonIterableSpread()
          );
        }
        // CONCATENATED MODULE: ./node_modules/css-vendor/dist/css-vendor.esm.js

        // Export javascript style and css style vendor prefixes.
        var js = "";
        var css_vendor_esm_css = "";
        var vendor = "";
        var browser = "";
        var isTouch = dist_module && "ontouchstart" in document.documentElement; // We should not do anything if required serverside.

        if (dist_module) {
          // Order matters. We need to check Webkit the last one because
          // other vendors use to add Webkit prefixes to some properties
          var jsCssMap = {
            Moz: "-moz-",
            ms: "-ms-",
            O: "-o-",
            Webkit: "-webkit-",
          };

          var _document$createEleme = document.createElement("p"),
            css_vendor_esm_style = _document$createEleme.style;

          var testProp = "Transform";

          for (var css_vendor_esm_key in jsCssMap) {
            if (css_vendor_esm_key + testProp in css_vendor_esm_style) {
              js = css_vendor_esm_key;
              css_vendor_esm_css = jsCssMap[css_vendor_esm_key];
              break;
            }
          } // Correctly detect the Edge browser.

          if (js === "Webkit" && "msHyphens" in css_vendor_esm_style) {
            js = "ms";
            css_vendor_esm_css = jsCssMap.ms;
            browser = "edge";
          } // Correctly detect the Safari browser.

          if (
            js === "Webkit" &&
            "-apple-trailing-word" in css_vendor_esm_style
          ) {
            vendor = "apple";
          }
        }
        /**
         * Vendor prefix string for the current browser.
         *
         * @type {{js: String, css: String, vendor: String, browser: String}}
         * @api public
         */

        var css_vendor_esm_prefix = {
          js: js,
          css: css_vendor_esm_css,
          vendor: vendor,
          browser: browser,
          isTouch: isTouch,
        };

        /**
         * Test if a keyframe at-rule should be prefixed or not
         *
         * @param {String} vendor prefix string for the current browser.
         * @return {String}
         * @api public
         */

        function supportedKeyframes(key) {
          // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
          if (key[1] === "-") return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
          // https://caniuse.com/#search=keyframes

          if (css_vendor_esm_prefix.js === "ms") return key;
          return "@" + css_vendor_esm_prefix.css + "keyframes" + key.substr(10);
        }

        // https://caniuse.com/#search=appearance

        var appearence = {
          noPrefill: ["appearance"],
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "appearance") return false;
            if (css_vendor_esm_prefix.js === "ms") return "-webkit-" + prop;
            return css_vendor_esm_prefix.css + prop;
          },
        };

        // https://caniuse.com/#search=color-adjust

        var colorAdjust = {
          noPrefill: ["color-adjust"],
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "color-adjust") return false;
            if (css_vendor_esm_prefix.js === "Webkit")
              return css_vendor_esm_prefix.css + "print-" + prop;
            return prop;
          },
        };

        var regExp = /[-\s]+(.)?/g;
        /**
         * Replaces the letter with the capital letter
         *
         * @param {String} match
         * @param {String} c
         * @return {String}
         * @api private
         */

        function toUpper(match, c) {
          return c ? c.toUpperCase() : "";
        }
        /**
         * Convert dash separated strings to camel-cased.
         *
         * @param {String} str
         * @return {String}
         * @api private
         */

        function camelize(str) {
          return str.replace(regExp, toUpper);
        }

        /**
         * Convert dash separated strings to pascal cased.
         *
         * @param {String} str
         * @return {String}
         * @api private
         */

        function pascalize(str) {
          return camelize("-" + str);
        }

        // but we can use a longhand property instead.
        // https://caniuse.com/#search=mask

        var mask = {
          noPrefill: ["mask"],
          supportedProperty: function supportedProperty(prop, style) {
            if (!/^mask/.test(prop)) return false;

            if (css_vendor_esm_prefix.js === "Webkit") {
              var longhand = "mask-image";

              if (camelize(longhand) in style) {
                return prop;
              }

              if (css_vendor_esm_prefix.js + pascalize(longhand) in style) {
                return css_vendor_esm_prefix.css + prop;
              }
            }

            return prop;
          },
        };

        // https://caniuse.com/#search=text-orientation

        var textOrientation = {
          noPrefill: ["text-orientation"],
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "text-orientation") return false;

            if (
              css_vendor_esm_prefix.vendor === "apple" &&
              !css_vendor_esm_prefix.isTouch
            ) {
              return css_vendor_esm_prefix.css + prop;
            }

            return prop;
          },
        };

        // https://caniuse.com/#search=transform

        var css_vendor_esm_transform = {
          noPrefill: ["transform"],
          supportedProperty: function supportedProperty(prop, style, options) {
            if (prop !== "transform") return false;

            if (options.transform) {
              return prop;
            }

            return css_vendor_esm_prefix.css + prop;
          },
        };

        // https://caniuse.com/#search=transition

        var css_vendor_esm_transition = {
          noPrefill: ["transition"],
          supportedProperty: function supportedProperty(prop, style, options) {
            if (prop !== "transition") return false;

            if (options.transition) {
              return prop;
            }

            return css_vendor_esm_prefix.css + prop;
          },
        };

        // https://caniuse.com/#search=writing-mode

        var writingMode = {
          noPrefill: ["writing-mode"],
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "writing-mode") return false;

            if (
              css_vendor_esm_prefix.js === "Webkit" ||
              (css_vendor_esm_prefix.js === "ms" &&
                css_vendor_esm_prefix.browser !== "edge")
            ) {
              return css_vendor_esm_prefix.css + prop;
            }

            return prop;
          },
        };

        // https://caniuse.com/#search=user-select

        var userSelect = {
          noPrefill: ["user-select"],
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "user-select") return false;

            if (
              css_vendor_esm_prefix.js === "Moz" ||
              css_vendor_esm_prefix.js === "ms" ||
              css_vendor_esm_prefix.vendor === "apple"
            ) {
              return css_vendor_esm_prefix.css + prop;
            }

            return prop;
          },
        };

        // https://caniuse.com/#search=multicolumn
        // https://github.com/postcss/autoprefixer/issues/491
        // https://github.com/postcss/autoprefixer/issues/177

        var breakPropsOld = {
          supportedProperty: function supportedProperty(prop, style) {
            if (!/^break-/.test(prop)) return false;

            if (css_vendor_esm_prefix.js === "Webkit") {
              var jsProp = "WebkitColumn" + pascalize(prop);
              return jsProp in style
                ? css_vendor_esm_prefix.css + "column-" + prop
                : false;
            }

            if (css_vendor_esm_prefix.js === "Moz") {
              var _jsProp = "page" + pascalize(prop);

              return _jsProp in style ? "page-" + prop : false;
            }

            return false;
          },
        };

        // See https://github.com/postcss/autoprefixer/issues/324.

        var inlineLogicalOld = {
          supportedProperty: function supportedProperty(prop, style) {
            if (!/^(border|margin|padding)-inline/.test(prop)) return false;
            if (css_vendor_esm_prefix.js === "Moz") return prop;
            var newProp = prop.replace("-inline", "");
            return css_vendor_esm_prefix.js + pascalize(newProp) in style
              ? css_vendor_esm_prefix.css + newProp
              : false;
          },
        };

        // Camelization is required because we can't test using.
        // CSS syntax for e.g. in FF.

        var unprefixed = {
          supportedProperty: function supportedProperty(prop, style) {
            return camelize(prop) in style ? prop : false;
          },
        };

        var prefixed = {
          supportedProperty: function supportedProperty(prop, style) {
            var pascalized = pascalize(prop); // Return custom CSS variable without prefixing.

            if (prop[0] === "-") return prop; // Return already prefixed value without prefixing.

            if (prop[0] === "-" && prop[1] === "-") return prop;
            if (css_vendor_esm_prefix.js + pascalized in style)
              return css_vendor_esm_prefix.css + prop; // Try webkit fallback.

            if (
              css_vendor_esm_prefix.js !== "Webkit" &&
              "Webkit" + pascalized in style
            )
              return "-webkit-" + prop;
            return false;
          },
        };

        // https://caniuse.com/#search=scroll-snap

        var scrollSnap = {
          supportedProperty: function supportedProperty(prop) {
            if (prop.substring(0, 11) !== "scroll-snap") return false;

            if (css_vendor_esm_prefix.js === "ms") {
              return "" + css_vendor_esm_prefix.css + prop;
            }

            return prop;
          },
        };

        // https://caniuse.com/#search=overscroll-behavior

        var overscrollBehavior = {
          supportedProperty: function supportedProperty(prop) {
            if (prop !== "overscroll-behavior") return false;

            if (css_vendor_esm_prefix.js === "ms") {
              return css_vendor_esm_prefix.css + "scroll-chaining";
            }

            return prop;
          },
        };

        var propMap = {
          "flex-grow": "flex-positive",
          "flex-shrink": "flex-negative",
          "flex-basis": "flex-preferred-size",
          "justify-content": "flex-pack",
          order: "flex-order",
          "align-items": "flex-align",
          "align-content": "flex-line-pack", // 'align-self' is handled by 'align-self' plugin.
        }; // Support old flex spec from 2012.

        var flex2012 = {
          supportedProperty: function supportedProperty(prop, style) {
            var newProp = propMap[prop];
            if (!newProp) return false;
            return css_vendor_esm_prefix.js + pascalize(newProp) in style
              ? css_vendor_esm_prefix.css + newProp
              : false;
          },
        };

        var propMap$1 = {
          flex: "box-flex",
          "flex-grow": "box-flex",
          "flex-direction": ["box-orient", "box-direction"],
          order: "box-ordinal-group",
          "align-items": "box-align",
          "flex-flow": ["box-orient", "box-direction"],
          "justify-content": "box-pack",
        };
        var propKeys = Object.keys(propMap$1);

        var prefixCss = function prefixCss(p) {
          return css_vendor_esm_prefix.css + p;
        }; // Support old flex spec from 2009.

        var flex2009 = {
          supportedProperty: function supportedProperty(prop, style, _ref) {
            var multiple = _ref.multiple;

            if (propKeys.indexOf(prop) > -1) {
              var newProp = propMap$1[prop];

              if (!Array.isArray(newProp)) {
                return css_vendor_esm_prefix.js + pascalize(newProp) in style
                  ? css_vendor_esm_prefix.css + newProp
                  : false;
              }

              if (!multiple) return false;

              for (var i = 0; i < newProp.length; i++) {
                if (
                  !(css_vendor_esm_prefix.js + pascalize(newProp[0]) in style)
                ) {
                  return false;
                }
              }

              return newProp.map(prefixCss);
            }

            return false;
          },
        };

        // plugins = [
        //   ...plugins,
        //    breakPropsOld,
        //    inlineLogicalOld,
        //    unprefixed,
        //    prefixed,
        //    scrollSnap,
        //    flex2012,
        //    flex2009
        // ]
        // Plugins without 'noPrefill' value, going last.
        // 'flex-*' plugins should be at the bottom.
        // 'flex2009' going after 'flex2012'.
        // 'prefixed' going after 'unprefixed'

        var css_vendor_esm_plugins = [
          appearence,
          colorAdjust,
          mask,
          textOrientation,
          css_vendor_esm_transform,
          css_vendor_esm_transition,
          writingMode,
          userSelect,
          breakPropsOld,
          inlineLogicalOld,
          unprefixed,
          prefixed,
          scrollSnap,
          overscrollBehavior,
          flex2012,
          flex2009,
        ];
        var propertyDetectors = css_vendor_esm_plugins
          .filter(function (p) {
            return p.supportedProperty;
          })
          .map(function (p) {
            return p.supportedProperty;
          });
        var noPrefill = css_vendor_esm_plugins
          .filter(function (p) {
            return p.noPrefill;
          })
          .reduce(function (a, p) {
            a.push.apply(a, _toConsumableArray(p.noPrefill));
            return a;
          }, []);

        var el;
        var css_vendor_esm_cache = {};

        if (dist_module) {
          el = document.createElement("p"); // We test every property on vendor prefix requirement.
          // Once tested, result is cached. It gives us up to 70% perf boost.
          // http://jsperf.com/element-style-object-access-vs-plain-object
          //
          // Prefill cache with known css properties to reduce amount of
          // properties we need to feature test at runtime.
          // http://davidwalsh.name/vendor-prefix

          var computed = window.getComputedStyle(document.documentElement, "");

          for (var key$1 in computed) {
            // eslint-disable-next-line no-restricted-globals
            if (!isNaN(key$1))
              css_vendor_esm_cache[computed[key$1]] = computed[key$1];
          } // Properties that cannot be correctly detected using the
          // cache prefill method.

          noPrefill.forEach(function (x) {
            return delete css_vendor_esm_cache[x];
          });
        }
        /**
         * Test if a property is supported, returns supported property with vendor
         * prefix if required. Returns `false` if not supported.
         *
         * @param {String} prop dash separated
         * @param {Object} [options]
         * @return {String|Boolean}
         * @api public
         */

        function supportedProperty(prop, options) {
          if (options === void 0) {
            options = {};
          }

          // For server-side rendering.
          if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.

          if (true && css_vendor_esm_cache[prop] != null) {
            return css_vendor_esm_cache[prop];
          } // Check if 'transition' or 'transform' natively supported in browser.

          if (prop === "transition" || prop === "transform") {
            options[prop] = prop in el.style;
          } // Find a plugin for current prefix property.

          for (var i = 0; i < propertyDetectors.length; i++) {
            css_vendor_esm_cache[prop] = propertyDetectors[i](
              prop,
              el.style,
              options
            ); // Break loop, if value found.

            if (css_vendor_esm_cache[prop]) break;
          } // Reset styles for current property.
          // Firefox can even throw an error for invalid properties, e.g., "0".

          try {
            el.style[prop] = "";
          } catch (err) {
            return false;
          }

          return css_vendor_esm_cache[prop];
        }

        var cache$1 = {};
        var transitionProperties = {
          transition: 1,
          "transition-property": 1,
          "-webkit-transition": 1,
          "-webkit-transition-property": 1,
        };
        var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
        var el$1;
        /**
         * Returns prefixed value transition/transform if needed.
         *
         * @param {String} match
         * @param {String} p1
         * @param {String} p2
         * @return {String}
         * @api private
         */

        function prefixTransitionCallback(match, p1, p2) {
          if (p1 === "var") return "var";
          if (p1 === "all") return "all";
          if (p2 === "all") return ", all";
          var prefixedValue = p1
            ? supportedProperty(p1)
            : ", " + supportedProperty(p2);
          if (!prefixedValue) return p1 || p2;
          return prefixedValue;
        }

        if (dist_module) el$1 = document.createElement("p");
        /**
         * Returns prefixed value if needed. Returns `false` if value is not supported.
         *
         * @param {String} property
         * @param {String} value
         * @return {String|Boolean}
         * @api public
         */

        function supportedValue(property, value) {
          // For server-side rendering.
          var prefixedValue = value;
          if (!el$1 || property === "content") return value; // It is a string or a number as a string like '1'.
          // We want only prefixable values here.
          // eslint-disable-next-line no-restricted-globals

          if (
            typeof prefixedValue !== "string" ||
            !isNaN(parseInt(prefixedValue, 10))
          ) {
            return prefixedValue;
          } // Create cache key for current value.

          var cacheKey = property + prefixedValue; // Remove cache for benchmark tests or return value from cache.

          if (true && cache$1[cacheKey] != null) {
            return cache$1[cacheKey];
          } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.

          try {
            // Test value as it is.
            el$1.style[property] = prefixedValue;
          } catch (err) {
            // Return false if value not supported.
            cache$1[cacheKey] = false;
            return false;
          } // If 'transition' or 'transition-property' property.

          if (transitionProperties[property]) {
            prefixedValue = prefixedValue.replace(
              transPropsRegExp,
              prefixTransitionCallback
            );
          } else if (el$1.style[property] === "") {
            // Value with a vendor prefix.
            prefixedValue = css_vendor_esm_prefix.css + prefixedValue; // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

            if (prefixedValue === "-ms-flex")
              el$1.style[property] = "-ms-flexbox"; // Test prefixed value.

            el$1.style[property] = prefixedValue; // Return false if value not supported.

            if (el$1.style[property] === "") {
              cache$1[cacheKey] = false;
              return false;
            }
          } // Reset styles for current property.

          el$1.style[property] = ""; // Write current value to cache.

          cache$1[cacheKey] = prefixedValue;
          return cache$1[cacheKey];
        }

        // CONCATENATED MODULE: ./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js

        /**
         * Add vendor prefix to a property name when needed.
         *
         * @api public
         */

        function jssVendorPrefixer() {
          function onProcessRule(rule) {
            if (rule.type === "keyframes") {
              var atRule = rule;
              atRule.at = supportedKeyframes(atRule.at);
            }
          }

          function prefixStyle(style) {
            for (var prop in style) {
              var value = style[prop];

              if (prop === "fallbacks" && Array.isArray(value)) {
                style[prop] = value.map(prefixStyle);
                continue;
              }

              var changeProp = false;
              var supportedProp = supportedProperty(prop);
              if (supportedProp && supportedProp !== prop) changeProp = true;
              var changeValue = false;
              var supportedValue$1 = supportedValue(
                supportedProp,
                toCssValue(value)
              );
              if (supportedValue$1 && supportedValue$1 !== value)
                changeValue = true;

              if (changeProp || changeValue) {
                if (changeProp) delete style[prop];
                style[supportedProp || prop] = supportedValue$1 || value;
              }
            }

            return style;
          }

          function onProcessStyle(style, rule) {
            if (rule.type !== "style") return style;
            return prefixStyle(style);
          }

          function onChangeValue(value, prop) {
            return supportedValue(prop, toCssValue(value)) || value;
          }

          return {
            onProcessRule: onProcessRule,
            onProcessStyle: onProcessStyle,
            onChangeValue: onChangeValue,
          };
        }

        /* harmony default export */ var jss_plugin_vendor_prefixer_esm = jssVendorPrefixer;

        // CONCATENATED MODULE: ./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js
        /**
         * Sort props by length.
         */
        function jssPropsSort() {
          var sort = function sort(prop0, prop1) {
            if (prop0.length === prop1.length) {
              return prop0 > prop1 ? 1 : -1;
            }

            return prop0.length - prop1.length;
          };

          return {
            onProcessStyle: function onProcessStyle(style, rule) {
              if (rule.type !== "style") return style;
              var newStyle = {};
              var props = Object.keys(style).sort(sort);

              for (var i = 0; i < props.length; i++) {
                newStyle[props[i]] = style[props[i]];
              }

              return newStyle;
            },
          };
        }

        /* harmony default export */ var jss_plugin_props_sort_esm = jssPropsSort;

        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js

        // Subset of jss-preset-default with only the plugins the Material-UI components are using.

        function jssPreset() {
          return {
            plugins: [
              jss_plugin_rule_value_function_esm(),
              jss_plugin_global_esm(),
              jss_plugin_nested_esm(),
              jss_plugin_camel_case_esm(),
              jss_plugin_default_unit_esm(), // Disable the vendor prefixer server-side, it does nothing.
              // This way, we can get a performance boost.
              // In the documentation, we are using `autoprefixer` to solve this problem.
              typeof window === "undefined"
                ? null
                : jss_plugin_vendor_prefixer_esm(),
              jss_plugin_props_sort_esm(),
            ],
          };
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js

        // Default JSS instance.

        var StylesProvider_jss = jss_esm_create(jssPreset()); // Use a singleton or the provided one by the context.
        //
        // The counter-based approach doesn't tolerate any mistake.
        // It's much safer to use the same counter everywhere.

        var generateClassName = createGenerateClassName(); // Exported for test purposes

        var sheetsManager = new Map();
        var defaultOptions = {
          disableGeneration: false,
          generateClassName: generateClassName,
          jss: StylesProvider_jss,
          sheetsCache: null,
          sheetsManager: sheetsManager,
          sheetsRegistry: null,
        };
        var StylesContext = react_default.a.createContext(defaultOptions);

        if (false) {
        }

        var injectFirstNode;
        function StylesProvider(props) {
          var children = props.children,
            _props$injectFirst = props.injectFirst,
            injectFirst =
              _props$injectFirst === void 0 ? false : _props$injectFirst,
            _props$disableGenerat = props.disableGeneration,
            disableGeneration =
              _props$disableGenerat === void 0 ? false : _props$disableGenerat,
            localOptions = _objectWithoutProperties(props, [
              "children",
              "injectFirst",
              "disableGeneration",
            ]);

          var outerOptions = react_default.a.useContext(StylesContext);

          var context = _extends(
            {},
            outerOptions,
            {
              disableGeneration: disableGeneration,
            },
            localOptions
          );

          if (false) {
          }

          if (false) {
          }

          if (false) {
          }

          if (
            !context.jss.options.insertionPoint &&
            injectFirst &&
            typeof window !== "undefined"
          ) {
            if (!injectFirstNode) {
              var head = document.head;
              injectFirstNode = document.createComment("mui-inject-first");
              head.insertBefore(injectFirstNode, head.firstChild);
            }

            context.jss = jss_esm_create({
              plugins: jssPreset().plugins,
              insertionPoint: injectFirstNode,
            });
          }

          return /*#__PURE__*/ react_default.a.createElement(
            StylesContext.Provider,
            {
              value: context,
            },
            children
          );
        }
        false ? undefined : void 0;

        if (false) {
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js
        /* eslint-disable import/prefer-default-export */
        // Global index counter to preserve source order.
        // We create the style sheet during the creation of the component,
        // children are handled after the parents, so the order of style elements would be parent->child.
        // It is a problem though when a parent passes a className
        // which needs to override any child's styles.
        // StyleSheet of the child has a higher specificity, because of the source order.
        // So our solution is to render sheets them in the reverse order child->sheet, so
        // that parent has a higher specificity.
        var indexCounter = -1e9;
        function increment() {
          indexCounter += 1;

          if (false) {
          }

          return indexCounter;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js

        function getStylesCreator(stylesOrCreator) {
          var themingEnabled = typeof stylesOrCreator === "function";

          if (false) {
          }

          return {
            create: function create(theme, name) {
              var styles;

              try {
                styles = themingEnabled
                  ? stylesOrCreator(theme)
                  : stylesOrCreator;
              } catch (err) {
                if (false) {
                }

                throw err;
              }

              if (!name || !theme.overrides || !theme.overrides[name]) {
                return styles;
              }

              var overrides = theme.overrides[name];

              var stylesWithOverrides = _extends({}, styles);

              Object.keys(overrides).forEach(function (key) {
                if (false) {
                }

                stylesWithOverrides[key] = deepmerge(
                  stylesWithOverrides[key],
                  overrides[key]
                );
              });
              return stylesWithOverrides;
            },
            options: {},
          };
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getStylesCreator/noopTheme.js
        // We use the same empty object to ref count the styles that don't need a theme object.
        var noopTheme = {};
        /* harmony default export */ var getStylesCreator_noopTheme = noopTheme;
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js

        function getClasses(_ref, classes, Component) {
          var state = _ref.state,
            stylesOptions = _ref.stylesOptions;

          if (stylesOptions.disableGeneration) {
            return classes || {};
          }

          if (!state.cacheClasses) {
            state.cacheClasses = {
              // Cache for the finalized classes value.
              value: null,
              // Cache for the last used classes prop pointer.
              lastProp: null,
              // Cache for the last used rendered classes pointer.
              lastJSS: {},
            };
          } // Tracks if either the rendered classes or classes prop has changed,
          // requiring the generation of a new finalized classes object.

          var generate = false;

          if (state.classes !== state.cacheClasses.lastJSS) {
            state.cacheClasses.lastJSS = state.classes;
            generate = true;
          }

          if (classes !== state.cacheClasses.lastProp) {
            state.cacheClasses.lastProp = classes;
            generate = true;
          }

          if (generate) {
            state.cacheClasses.value = mergeClasses({
              baseClasses: state.cacheClasses.lastJSS,
              newClasses: classes,
              Component: Component,
            });
          }

          return state.cacheClasses.value;
        }

        function attach(_ref2, props) {
          var state = _ref2.state,
            theme = _ref2.theme,
            stylesOptions = _ref2.stylesOptions,
            stylesCreator = _ref2.stylesCreator,
            name = _ref2.name;

          if (stylesOptions.disableGeneration) {
            return;
          }

          var sheetManager = makeStyles_multiKeyStore.get(
            stylesOptions.sheetsManager,
            stylesCreator,
            theme
          );

          if (!sheetManager) {
            sheetManager = {
              refs: 0,
              staticSheet: null,
              dynamicStyles: null,
            };
            makeStyles_multiKeyStore.set(
              stylesOptions.sheetsManager,
              stylesCreator,
              theme,
              sheetManager
            );
          }

          var options = _extends({}, stylesCreator.options, stylesOptions, {
            theme: theme,
            flip:
              typeof stylesOptions.flip === "boolean"
                ? stylesOptions.flip
                : theme.direction === "rtl",
          });

          options.generateId =
            options.serverGenerateClassName || options.generateClassName;
          var sheetsRegistry = stylesOptions.sheetsRegistry;

          if (sheetManager.refs === 0) {
            var staticSheet;

            if (stylesOptions.sheetsCache) {
              staticSheet = makeStyles_multiKeyStore.get(
                stylesOptions.sheetsCache,
                stylesCreator,
                theme
              );
            }

            var styles = stylesCreator.create(theme, name);

            if (!staticSheet) {
              staticSheet = stylesOptions.jss.createStyleSheet(
                styles,
                _extends(
                  {
                    link: false,
                  },
                  options
                )
              );
              staticSheet.attach();

              if (stylesOptions.sheetsCache) {
                makeStyles_multiKeyStore.set(
                  stylesOptions.sheetsCache,
                  stylesCreator,
                  theme,
                  staticSheet
                );
              }
            }

            if (sheetsRegistry) {
              sheetsRegistry.add(staticSheet);
            }

            sheetManager.staticSheet = staticSheet;
            sheetManager.dynamicStyles = getDynamicStyles(styles);
          }

          if (sheetManager.dynamicStyles) {
            var dynamicSheet = stylesOptions.jss.createStyleSheet(
              sheetManager.dynamicStyles,
              _extends(
                {
                  link: true,
                },
                options
              )
            );
            dynamicSheet.update(props);
            dynamicSheet.attach();
            state.dynamicSheet = dynamicSheet;
            state.classes = mergeClasses({
              baseClasses: sheetManager.staticSheet.classes,
              newClasses: dynamicSheet.classes,
            });

            if (sheetsRegistry) {
              sheetsRegistry.add(dynamicSheet);
            }
          } else {
            state.classes = sheetManager.staticSheet.classes;
          }

          sheetManager.refs += 1;
        }

        function update(_ref3, props) {
          var state = _ref3.state;

          if (state.dynamicSheet) {
            state.dynamicSheet.update(props);
          }
        }

        function detach(_ref4) {
          var state = _ref4.state,
            theme = _ref4.theme,
            stylesOptions = _ref4.stylesOptions,
            stylesCreator = _ref4.stylesCreator;

          if (stylesOptions.disableGeneration) {
            return;
          }

          var sheetManager = makeStyles_multiKeyStore.get(
            stylesOptions.sheetsManager,
            stylesCreator,
            theme
          );
          sheetManager.refs -= 1;
          var sheetsRegistry = stylesOptions.sheetsRegistry;

          if (sheetManager.refs === 0) {
            makeStyles_multiKeyStore.delete(
              stylesOptions.sheetsManager,
              stylesCreator,
              theme
            );
            stylesOptions.jss.removeStyleSheet(sheetManager.staticSheet);

            if (sheetsRegistry) {
              sheetsRegistry.remove(sheetManager.staticSheet);
            }
          }

          if (state.dynamicSheet) {
            stylesOptions.jss.removeStyleSheet(state.dynamicSheet);

            if (sheetsRegistry) {
              sheetsRegistry.remove(state.dynamicSheet);
            }
          }
        }

        function useSynchronousEffect(func, values) {
          var key = react_default.a.useRef([]);
          var output; // Store "generation" key. Just returns a new object every time

          var currentKey = react_default.a.useMemo(function () {
            return {};
          }, values); // eslint-disable-line react-hooks/exhaustive-deps
          // "the first render", or "memo dropped the value"

          if (key.current !== currentKey) {
            key.current = currentKey;
            output = func();
          }

          react_default.a.useEffect(
            function () {
              return function () {
                if (output) {
                  output();
                }
              };
            },
            [currentKey] // eslint-disable-line react-hooks/exhaustive-deps
          );
        }

        function makeStyles(stylesOrCreator) {
          var options =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};

          var name = options.name,
            classNamePrefixOption = options.classNamePrefix,
            Component = options.Component,
            _options$defaultTheme = options.defaultTheme,
            defaultTheme =
              _options$defaultTheme === void 0
                ? getStylesCreator_noopTheme
                : _options$defaultTheme,
            stylesOptions2 = _objectWithoutProperties(options, [
              "name",
              "classNamePrefix",
              "Component",
              "defaultTheme",
            ]);

          var stylesCreator = getStylesCreator(stylesOrCreator);
          var classNamePrefix = name || classNamePrefixOption || "makeStyles";
          stylesCreator.options = {
            index: increment(),
            name: name,
            meta: classNamePrefix,
            classNamePrefix: classNamePrefix,
          };

          var useStyles = function useStyles() {
            var props =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {};
            var theme = useTheme() || defaultTheme;

            var stylesOptions = _extends(
              {},
              react_default.a.useContext(StylesContext),
              stylesOptions2
            );

            var instance = react_default.a.useRef();
            var shouldUpdate = react_default.a.useRef();
            useSynchronousEffect(
              function () {
                var current = {
                  name: name,
                  state: {},
                  stylesCreator: stylesCreator,
                  stylesOptions: stylesOptions,
                  theme: theme,
                };
                attach(current, props);
                shouldUpdate.current = false;
                instance.current = current;
                return function () {
                  detach(current);
                };
              },
              [theme, stylesCreator]
            );
            react_default.a.useEffect(function () {
              if (shouldUpdate.current) {
                update(instance.current, props);
              }

              shouldUpdate.current = true;
            });
            var classes = getClasses(
              instance.current,
              props.classes,
              Component
            );

            if (false) {
            }

            return classes;
          };

          return useStyles;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js
        /* eslint-disable no-restricted-syntax */
        function getThemeProps(params) {
          var theme = params.theme,
            name = params.name,
            props = params.props;

          if (!theme || !theme.props || !theme.props[name]) {
            return props;
          } // Resolve default props, code borrow from React source.
          // https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221

          var defaultProps = theme.props[name];
          var propName;

          for (propName in defaultProps) {
            if (props[propName] === undefined) {
              props[propName] = defaultProps[propName];
            }
          }

          return props;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/withStyles/withStyles.js

        // Link a style sheet with a component.
        // It does not modify the component passed to it;
        // instead, it returns a new component, with a `classes` property.

        var withStyles_withStyles = function withStyles(stylesOrCreator) {
          var options =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : {};
          return function (Component) {
            var defaultTheme = options.defaultTheme,
              _options$withTheme = options.withTheme,
              withTheme =
                _options$withTheme === void 0 ? false : _options$withTheme,
              name = options.name,
              stylesOptions = _objectWithoutProperties(options, [
                "defaultTheme",
                "withTheme",
                "name",
              ]);

            if (false) {
            }

            var classNamePrefix = name;

            if (false) {
              var displayName;
            }

            var useStyles = makeStyles(
              stylesOrCreator,
              _extends(
                {
                  defaultTheme: defaultTheme,
                  Component: Component,
                  name: name || Component.displayName,
                  classNamePrefix: classNamePrefix,
                },
                stylesOptions
              )
            );
            var WithStyles = /*#__PURE__*/ react_default.a.forwardRef(
              function WithStyles(props, ref) {
                var classesProp = props.classes,
                  innerRef = props.innerRef,
                  other = _objectWithoutProperties(props, [
                    "classes",
                    "innerRef",
                  ]); // The wrapper receives only user supplied props, which could be a subset of
                // the actual props Component might receive due to merging with defaultProps.
                // So copying it here would give us the same result in the wrapper as well.

                var classes = useStyles(
                  _extends({}, Component.defaultProps, props)
                );
                var theme;
                var more = other;

                if (typeof name === "string" || withTheme) {
                  // name and withTheme are invariant in the outer scope
                  // eslint-disable-next-line react-hooks/rules-of-hooks
                  theme = useTheme() || defaultTheme;

                  if (name) {
                    more = getThemeProps({
                      theme: theme,
                      name: name,
                      props: other,
                    });
                  } // Provide the theme to the wrapped component.
                  // So we don't have to use the `withTheme()` Higher-order Component.

                  if (withTheme && !more.theme) {
                    more.theme = theme;
                  }
                }

                return /*#__PURE__*/ react_default.a.createElement(
                  Component,
                  _extends(
                    {
                      ref: innerRef || ref,
                      classes: classes,
                    },
                    more
                  )
                );
              }
            );
            false ? undefined : void 0;

            if (false) {
            }

            hoist_non_react_statics_cjs_default()(WithStyles, Component);

            if (false) {
            }

            return WithStyles;
          };
        };

        /* harmony default export */ var esm_withStyles_withStyles = withStyles_withStyles;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createBreakpoints.js

        // Sorted ASC by size. That's important.
        // It can't be configured as it's used statically for propTypes.
        var keys = ["xs", "sm", "md", "lg", "xl"]; // Keep in mind that @media is inclusive by the CSS specification.

        function createBreakpoints(breakpoints) {
          var _breakpoints$values = breakpoints.values,
            values =
              _breakpoints$values === void 0
                ? {
                    xs: 0,
                    sm: 600,
                    md: 960,
                    lg: 1280,
                    xl: 1920,
                  }
                : _breakpoints$values,
            _breakpoints$unit = breakpoints.unit,
            unit = _breakpoints$unit === void 0 ? "px" : _breakpoints$unit,
            _breakpoints$step = breakpoints.step,
            step = _breakpoints$step === void 0 ? 5 : _breakpoints$step,
            other = _objectWithoutProperties(breakpoints, [
              "values",
              "unit",
              "step",
            ]);

          function up(key) {
            var value = typeof values[key] === "number" ? values[key] : key;
            return "@media (min-width:".concat(value).concat(unit, ")");
          }

          function down(key) {
            var endIndex = keys.indexOf(key) + 1;
            var upperbound = values[keys[endIndex]];

            if (endIndex === keys.length) {
              // xl down applies to all sizes
              return up("xs");
            }

            var value =
              typeof upperbound === "number" && endIndex > 0 ? upperbound : key;
            return "@media (max-width:"
              .concat(value - step / 100)
              .concat(unit, ")");
          }

          function between(start, end) {
            var endIndex = keys.indexOf(end);

            if (endIndex === keys.length - 1) {
              return up(start);
            }

            return (
              "@media (min-width:"
                .concat(
                  typeof values[start] === "number" ? values[start] : start
                )
                .concat(unit, ") and ") +
              "(max-width:"
                .concat(
                  (endIndex !== -1 &&
                  typeof values[keys[endIndex + 1]] === "number"
                    ? values[keys[endIndex + 1]]
                    : end) -
                    step / 100
                )
                .concat(unit, ")")
            );
          }

          function only(key) {
            return between(key, key);
          }

          function width(key) {
            return values[key];
          }

          return _extends(
            {
              keys: keys,
              values: values,
              up: up,
              down: down,
              between: between,
              only: only,
              width: width,
            },
            other
          );
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createMixins.js

        function createMixins(breakpoints, spacing, mixins) {
          var _toolbar;

          return _extends(
            {
              gutters: function gutters() {
                var styles =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : {};
                // To deprecate in v4.1
                //       warning(
                //         false,
                //         [
                //           'Material-UI: Theme.mixins.gutters() is deprecated.',
                //           'You can use the source of the mixin directly:',
                //           `
                // paddingLeft: theme.spacing(2),
                // paddingRight: theme.spacing(2),
                // [theme.breakpoints.up('sm')]: {
                //   paddingLeft: theme.spacing(3),
                //   paddingRight: theme.spacing(3),
                // },
                // `,
                //         ].join('\n'),
                //       );
                return _extends(
                  {
                    paddingLeft: spacing(2),
                    paddingRight: spacing(2),
                  },
                  styles,
                  _defineProperty(
                    {},
                    breakpoints.up("sm"),
                    _extends(
                      {
                        paddingLeft: spacing(3),
                        paddingRight: spacing(3),
                      },
                      styles[breakpoints.up("sm")]
                    )
                  )
                );
              },
              toolbar:
                ((_toolbar = {
                  minHeight: 56,
                }),
                _defineProperty(
                  _toolbar,
                  "".concat(
                    breakpoints.up("xs"),
                    " and (orientation: landscape)"
                  ),
                  {
                    minHeight: 48,
                  }
                ),
                _defineProperty(_toolbar, breakpoints.up("sm"), {
                  minHeight: 64,
                }),
                _toolbar),
            },
            mixins
          );
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/common.js
        var common = {
          black: "#000",
          white: "#fff",
        };
        /* harmony default export */ var colors_common = common;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/grey.js
        var grey = {
          50: "#fafafa",
          100: "#f5f5f5",
          200: "#eeeeee",
          300: "#e0e0e0",
          400: "#bdbdbd",
          500: "#9e9e9e",
          600: "#757575",
          700: "#616161",
          800: "#424242",
          900: "#212121",
          A100: "#d5d5d5",
          A200: "#aaaaaa",
          A400: "#303030",
          A700: "#616161",
        };
        /* harmony default export */ var colors_grey = grey;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/indigo.js
        var indigo = {
          50: "#e8eaf6",
          100: "#c5cae9",
          200: "#9fa8da",
          300: "#7986cb",
          400: "#5c6bc0",
          500: "#3f51b5",
          600: "#3949ab",
          700: "#303f9f",
          800: "#283593",
          900: "#1a237e",
          A100: "#8c9eff",
          A200: "#536dfe",
          A400: "#3d5afe",
          A700: "#304ffe",
        };
        /* harmony default export */ var colors_indigo = indigo;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/pink.js
        var pink = {
          50: "#fce4ec",
          100: "#f8bbd0",
          200: "#f48fb1",
          300: "#f06292",
          400: "#ec407a",
          500: "#e91e63",
          600: "#d81b60",
          700: "#c2185b",
          800: "#ad1457",
          900: "#880e4f",
          A100: "#ff80ab",
          A200: "#ff4081",
          A400: "#f50057",
          A700: "#c51162",
        };
        /* harmony default export */ var colors_pink = pink;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/red.js
        var red = {
          50: "#ffebee",
          100: "#ffcdd2",
          200: "#ef9a9a",
          300: "#e57373",
          400: "#ef5350",
          500: "#f44336",
          600: "#e53935",
          700: "#d32f2f",
          800: "#c62828",
          900: "#b71c1c",
          A100: "#ff8a80",
          A200: "#ff5252",
          A400: "#ff1744",
          A700: "#d50000",
        };
        /* harmony default export */ var colors_red = red;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/orange.js
        var orange = {
          50: "#fff3e0",
          100: "#ffe0b2",
          200: "#ffcc80",
          300: "#ffb74d",
          400: "#ffa726",
          500: "#ff9800",
          600: "#fb8c00",
          700: "#f57c00",
          800: "#ef6c00",
          900: "#e65100",
          A100: "#ffd180",
          A200: "#ffab40",
          A400: "#ff9100",
          A700: "#ff6d00",
        };
        /* harmony default export */ var colors_orange = orange;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/blue.js
        var blue = {
          50: "#e3f2fd",
          100: "#bbdefb",
          200: "#90caf9",
          300: "#64b5f6",
          400: "#42a5f5",
          500: "#2196f3",
          600: "#1e88e5",
          700: "#1976d2",
          800: "#1565c0",
          900: "#0d47a1",
          A100: "#82b1ff",
          A200: "#448aff",
          A400: "#2979ff",
          A700: "#2962ff",
        };
        /* harmony default export */ var colors_blue = blue;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/colors/green.js
        var green = {
          50: "#e8f5e9",
          100: "#c8e6c9",
          200: "#a5d6a7",
          300: "#81c784",
          400: "#66bb6a",
          500: "#4caf50",
          600: "#43a047",
          700: "#388e3c",
          800: "#2e7d32",
          900: "#1b5e20",
          A100: "#b9f6ca",
          A200: "#69f0ae",
          A400: "#00e676",
          A700: "#00c853",
        };
        /* harmony default export */ var colors_green = green;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createPalette.js

        var light = {
          // The colors used to style the text.
          text: {
            // The most important text.
            primary: "rgba(0, 0, 0, 0.87)",
            // Secondary text.
            secondary: "rgba(0, 0, 0, 0.54)",
            // Disabled text have even lower visual prominence.
            disabled: "rgba(0, 0, 0, 0.38)",
            // Text hints.
            hint: "rgba(0, 0, 0, 0.38)",
          },
          // The color used to divide different elements.
          divider: "rgba(0, 0, 0, 0.12)",
          // The background colors used to style the surfaces.
          // Consistency between these values is important.
          background: {
            paper: colors_common.white,
            default: colors_grey[50],
          },
          // The colors used to style the action elements.
          action: {
            // The color of an active action like an icon button.
            active: "rgba(0, 0, 0, 0.54)",
            // The color of an hovered action.
            hover: "rgba(0, 0, 0, 0.04)",
            hoverOpacity: 0.04,
            // The color of a selected action.
            selected: "rgba(0, 0, 0, 0.08)",
            selectedOpacity: 0.08,
            // The color of a disabled action.
            disabled: "rgba(0, 0, 0, 0.26)",
            // The background color of a disabled action.
            disabledBackground: "rgba(0, 0, 0, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(0, 0, 0, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.12,
          },
        };
        var dark = {
          text: {
            primary: colors_common.white,
            secondary: "rgba(255, 255, 255, 0.7)",
            disabled: "rgba(255, 255, 255, 0.5)",
            hint: "rgba(255, 255, 255, 0.5)",
            icon: "rgba(255, 255, 255, 0.5)",
          },
          divider: "rgba(255, 255, 255, 0.12)",
          background: {
            paper: colors_grey[800],
            default: "#303030",
          },
          action: {
            active: colors_common.white,
            hover: "rgba(255, 255, 255, 0.08)",
            hoverOpacity: 0.08,
            selected: "rgba(255, 255, 255, 0.16)",
            selectedOpacity: 0.16,
            disabled: "rgba(255, 255, 255, 0.3)",
            disabledBackground: "rgba(255, 255, 255, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(255, 255, 255, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.24,
          },
        };

        function addLightOrDark(intent, direction, shade, tonalOffset) {
          var tonalOffsetLight = tonalOffset.light || tonalOffset;
          var tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;

          if (!intent[direction]) {
            if (intent.hasOwnProperty(shade)) {
              intent[direction] = intent[shade];
            } else if (direction === "light") {
              intent.light = lighten(intent.main, tonalOffsetLight);
            } else if (direction === "dark") {
              intent.dark = darken(intent.main, tonalOffsetDark);
            }
          }
        }

        function createPalette(palette) {
          var _palette$primary = palette.primary,
            primary =
              _palette$primary === void 0
                ? {
                    light: colors_indigo[300],
                    main: colors_indigo[500],
                    dark: colors_indigo[700],
                  }
                : _palette$primary,
            _palette$secondary = palette.secondary,
            secondary =
              _palette$secondary === void 0
                ? {
                    light: colors_pink.A200,
                    main: colors_pink.A400,
                    dark: colors_pink.A700,
                  }
                : _palette$secondary,
            _palette$error = palette.error,
            error =
              _palette$error === void 0
                ? {
                    light: colors_red[300],
                    main: colors_red[500],
                    dark: colors_red[700],
                  }
                : _palette$error,
            _palette$warning = palette.warning,
            warning =
              _palette$warning === void 0
                ? {
                    light: colors_orange[300],
                    main: colors_orange[500],
                    dark: colors_orange[700],
                  }
                : _palette$warning,
            _palette$info = palette.info,
            info =
              _palette$info === void 0
                ? {
                    light: colors_blue[300],
                    main: colors_blue[500],
                    dark: colors_blue[700],
                  }
                : _palette$info,
            _palette$success = palette.success,
            success =
              _palette$success === void 0
                ? {
                    light: colors_green[300],
                    main: colors_green[500],
                    dark: colors_green[700],
                  }
                : _palette$success,
            _palette$type = palette.type,
            type = _palette$type === void 0 ? "light" : _palette$type,
            _palette$contrastThre = palette.contrastThreshold,
            contrastThreshold =
              _palette$contrastThre === void 0 ? 3 : _palette$contrastThre,
            _palette$tonalOffset = palette.tonalOffset,
            tonalOffset =
              _palette$tonalOffset === void 0 ? 0.2 : _palette$tonalOffset,
            other = _objectWithoutProperties(palette, [
              "primary",
              "secondary",
              "error",
              "warning",
              "info",
              "success",
              "type",
              "contrastThreshold",
              "tonalOffset",
            ]); // Use the same logic as
          // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
          // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

          function getContrastText(background) {
            var contrastText =
              getContrastRatio(background, dark.text.primary) >=
              contrastThreshold
                ? dark.text.primary
                : light.text.primary;

            if (false) {
              var contrast;
            }

            return contrastText;
          }

          var augmentColor = function augmentColor(color) {
            var mainShade =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : 500;
            var lightShade =
              arguments.length > 2 && arguments[2] !== undefined
                ? arguments[2]
                : 300;
            var darkShade =
              arguments.length > 3 && arguments[3] !== undefined
                ? arguments[3]
                : 700;
            color = _extends({}, color);

            if (!color.main && color[mainShade]) {
              color.main = color[mainShade];
            }

            if (!color.main) {
              throw new Error(
                false ? undefined : formatMuiErrorMessage(4, mainShade)
              );
            }

            if (typeof color.main !== "string") {
              throw new Error(
                false
                  ? undefined
                  : formatMuiErrorMessage(5, JSON.stringify(color.main))
              );
            }

            addLightOrDark(color, "light", lightShade, tonalOffset);
            addLightOrDark(color, "dark", darkShade, tonalOffset);

            if (!color.contrastText) {
              color.contrastText = getContrastText(color.main);
            }

            return color;
          };

          var types = {
            dark: dark,
            light: light,
          };

          if (false) {
          }

          var paletteOutput = deepmerge(
            _extends(
              {
                // A collection of common colors.
                common: colors_common,
                // The palette type, can be light or dark.
                type: type,
                // The colors used to represent primary interface elements for a user.
                primary: augmentColor(primary),
                // The colors used to represent secondary interface elements for a user.
                secondary: augmentColor(secondary, "A400", "A200", "A700"),
                // The colors used to represent interface elements that the user should be made aware of.
                error: augmentColor(error),
                // The colors used to represent potentially dangerous actions or important messages.
                warning: augmentColor(warning),
                // The colors used to present information to the user that is neutral and not necessarily important.
                info: augmentColor(info),
                // The colors used to indicate the successful completion of an action that user triggered.
                success: augmentColor(success),
                // The grey colors.
                grey: colors_grey,
                // Used by `getContrastText()` to maximize the contrast between
                // the background and the text.
                contrastThreshold: contrastThreshold,
                // Takes a background color and returns the text color that maximizes the contrast.
                getContrastText: getContrastText,
                // Generate a rich color object.
                augmentColor: augmentColor,
                // Used by the functions below to shift a color's luminance by approximately
                // two indexes within its tonal palette.
                // E.g., shift from Red 500 to Red 300 or Red 700.
                tonalOffset: tonalOffset,
              },
              types[type]
            ),
            other
          );
          return paletteOutput;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createTypography.js

        function round(value) {
          return Math.round(value * 1e5) / 1e5;
        }

        var caseAllCaps = {
          textTransform: "uppercase",
        };
        var defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
        /**
         * @see @link{https://material.io/design/typography/the-type-system.html}
         * @see @link{https://material.io/design/typography/understanding-typography.html}
         */

        function createTypography(palette, typography) {
          var _ref =
              typeof typography === "function"
                ? typography(palette)
                : typography,
            _ref$fontFamily = _ref.fontFamily,
            fontFamily =
              _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,
            _ref$fontSize = _ref.fontSize,
            fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,
            _ref$fontWeightLight = _ref.fontWeightLight,
            fontWeightLight =
              _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,
            _ref$fontWeightRegula = _ref.fontWeightRegular,
            fontWeightRegular =
              _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,
            _ref$fontWeightMedium = _ref.fontWeightMedium,
            fontWeightMedium =
              _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,
            _ref$fontWeightBold = _ref.fontWeightBold,
            fontWeightBold =
              _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,
            _ref$htmlFontSize = _ref.htmlFontSize,
            htmlFontSize =
              _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,
            allVariants = _ref.allVariants,
            pxToRem2 = _ref.pxToRem,
            other = _objectWithoutProperties(_ref, [
              "fontFamily",
              "fontSize",
              "fontWeightLight",
              "fontWeightRegular",
              "fontWeightMedium",
              "fontWeightBold",
              "htmlFontSize",
              "allVariants",
              "pxToRem",
            ]);

          if (false) {
          }

          var coef = fontSize / 14;

          var pxToRem =
            pxToRem2 ||
            function (size) {
              return "".concat((size / htmlFontSize) * coef, "rem");
            };

          var buildVariant = function buildVariant(
            fontWeight,
            size,
            lineHeight,
            letterSpacing,
            casing
          ) {
            return _extends(
              {
                fontFamily: fontFamily,
                fontWeight: fontWeight,
                fontSize: pxToRem(size),
                // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
                lineHeight: lineHeight,
              },
              fontFamily === defaultFontFamily
                ? {
                    letterSpacing: "".concat(round(letterSpacing / size), "em"),
                  }
                : {},
              casing,
              allVariants
            );
          };

          var variants = {
            h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
            h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
            h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
            h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
            h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
            h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
            subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
            subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
            body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
            body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
            button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
            caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
            overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
          };
          return deepmerge(
            _extends(
              {
                htmlFontSize: htmlFontSize,
                pxToRem: pxToRem,
                round: round,
                // TODO v5: remove
                fontFamily: fontFamily,
                fontSize: fontSize,
                fontWeightLight: fontWeightLight,
                fontWeightRegular: fontWeightRegular,
                fontWeightMedium: fontWeightMedium,
                fontWeightBold: fontWeightBold,
              },
              variants
            ),
            other,
            {
              clone: false, // No need to clone deep
            }
          );
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/shadows.js
        var shadowKeyUmbraOpacity = 0.2;
        var shadowKeyPenumbraOpacity = 0.14;
        var shadowAmbientShadowOpacity = 0.12;

        function createShadow() {
          return [
            ""
              .concat(arguments.length <= 0 ? undefined : arguments[0], "px ")
              .concat(arguments.length <= 1 ? undefined : arguments[1], "px ")
              .concat(arguments.length <= 2 ? undefined : arguments[2], "px ")
              .concat(
                arguments.length <= 3 ? undefined : arguments[3],
                "px rgba(0,0,0,"
              )
              .concat(shadowKeyUmbraOpacity, ")"),
            ""
              .concat(arguments.length <= 4 ? undefined : arguments[4], "px ")
              .concat(arguments.length <= 5 ? undefined : arguments[5], "px ")
              .concat(arguments.length <= 6 ? undefined : arguments[6], "px ")
              .concat(
                arguments.length <= 7 ? undefined : arguments[7],
                "px rgba(0,0,0,"
              )
              .concat(shadowKeyPenumbraOpacity, ")"),
            ""
              .concat(arguments.length <= 8 ? undefined : arguments[8], "px ")
              .concat(arguments.length <= 9 ? undefined : arguments[9], "px ")
              .concat(arguments.length <= 10 ? undefined : arguments[10], "px ")
              .concat(
                arguments.length <= 11 ? undefined : arguments[11],
                "px rgba(0,0,0,"
              )
              .concat(shadowAmbientShadowOpacity, ")"),
          ].join(",");
        } // Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

        var shadows = [
          "none",
          createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
          createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
          createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
          createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
          createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
          createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
          createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
          createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
          createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
          createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
          createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
          createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
          createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
          createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
          createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
          createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
          createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
          createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
          createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
          createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
          createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
          createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
          createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
          createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
        ];
        /* harmony default export */ var styles_shadows = shadows;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/shape.js
        var shape = {
          borderRadius: 4,
        };
        /* harmony default export */ var styles_shape = shape;
        // CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/merge.js

        function merge(acc, item) {
          if (!item) {
            return acc;
          }

          return deepmerge(acc, item, {
            clone: false, // No need to clone deep, it's way faster.
          });
        }

        /* harmony default export */ var esm_merge = merge;
        // CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/breakpoints.js

        // The breakpoint **start** at this value.
        // For instance with the first breakpoint xs: [xs, sm[.

        var breakpoints_values = {
          xs: 0,
          sm: 600,
          md: 960,
          lg: 1280,
          xl: 1920,
        };
        var defaultBreakpoints = {
          // Sorted ASC by size. That's important.
          // It can't be configured as it's used statically for propTypes.
          keys: ["xs", "sm", "md", "lg", "xl"],
          up: function up(key) {
            return "@media (min-width:".concat(breakpoints_values[key], "px)");
          },
        };
        function handleBreakpoints(props, propValue, styleFromPropValue) {
          if (false) {
          }

          if (Array.isArray(propValue)) {
            var themeBreakpoints =
              props.theme.breakpoints || defaultBreakpoints;
            return propValue.reduce(function (acc, item, index) {
              acc[
                themeBreakpoints.up(themeBreakpoints.keys[index])
              ] = styleFromPropValue(propValue[index]);
              return acc;
            }, {});
          }

          if (_typeof(propValue) === "object") {
            var _themeBreakpoints =
              props.theme.breakpoints || defaultBreakpoints;

            return Object.keys(propValue).reduce(function (acc, breakpoint) {
              acc[_themeBreakpoints.up(breakpoint)] = styleFromPropValue(
                propValue[breakpoint]
              );
              return acc;
            }, {});
          }

          var output = styleFromPropValue(propValue);
          return output;
        }

        function breakpoints_breakpoints(styleFunction) {
          var newStyleFunction = function newStyleFunction(props) {
            var base = styleFunction(props);
            var themeBreakpoints =
              props.theme.breakpoints || defaultBreakpoints;
            var extended = themeBreakpoints.keys.reduce(function (acc, key) {
              if (props[key]) {
                acc = acc || {};
                acc[themeBreakpoints.up(key)] = styleFunction(
                  _extends(
                    {
                      theme: props.theme,
                    },
                    props[key]
                  )
                );
              }

              return acc;
            }, null);
            return esm_merge(base, extended);
          };

          newStyleFunction.propTypes = false ? undefined : {};
          newStyleFunction.filterProps = ["xs", "sm", "md", "lg", "xl"].concat(
            _toConsumableArray(styleFunction.filterProps)
          );
          return newStyleFunction;
        }

        /* harmony default export */ var esm_breakpoints = breakpoints_breakpoints;
        // CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/memoize.js
        function memoize_memoize(fn) {
          var cache = {};
          return function (arg) {
            if (cache[arg] === undefined) {
              cache[arg] = fn(arg);
            }

            return cache[arg];
          };
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/spacing.js

        var properties = {
          m: "margin",
          p: "padding",
        };
        var directions = {
          t: "Top",
          r: "Right",
          b: "Bottom",
          l: "Left",
          x: ["Left", "Right"],
          y: ["Top", "Bottom"],
        };
        var aliases = {
          marginX: "mx",
          marginY: "my",
          paddingX: "px",
          paddingY: "py",
        }; // memoize() impact:
        // From 300,000 ops/sec
        // To 350,000 ops/sec

        var getCssProperties = memoize_memoize(function (prop) {
          // It's not a shorthand notation.
          if (prop.length > 2) {
            if (aliases[prop]) {
              prop = aliases[prop];
            } else {
              return [prop];
            }
          }

          var _prop$split = prop.split(""),
            _prop$split2 = _slicedToArray(_prop$split, 2),
            a = _prop$split2[0],
            b = _prop$split2[1];

          var property = properties[a];
          var direction = directions[b] || "";
          return Array.isArray(direction)
            ? direction.map(function (dir) {
                return property + dir;
              })
            : [property + direction];
        });
        var spacingKeys = [
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "margin",
          "marginTop",
          "marginRight",
          "marginBottom",
          "marginLeft",
          "marginX",
          "marginY",
          "padding",
          "paddingTop",
          "paddingRight",
          "paddingBottom",
          "paddingLeft",
          "paddingX",
          "paddingY",
        ];
        function createUnarySpacing(theme) {
          var themeSpacing = theme.spacing || 8;

          if (typeof themeSpacing === "number") {
            return function (abs) {
              if (false) {
              }

              return themeSpacing * abs;
            };
          }

          if (Array.isArray(themeSpacing)) {
            return function (abs) {
              if (false) {
              }

              return themeSpacing[abs];
            };
          }

          if (typeof themeSpacing === "function") {
            return themeSpacing;
          }

          if (false) {
          }

          return function () {
            return undefined;
          };
        }

        function getValue(transformer, propValue) {
          if (typeof propValue === "string" || propValue == null) {
            return propValue;
          }

          var abs = Math.abs(propValue);
          var transformed = transformer(abs);

          if (propValue >= 0) {
            return transformed;
          }

          if (typeof transformed === "number") {
            return -transformed;
          }

          return "-".concat(transformed);
        }

        function getStyleFromPropValue(cssProperties, transformer) {
          return function (propValue) {
            return cssProperties.reduce(function (acc, cssProperty) {
              acc[cssProperty] = getValue(transformer, propValue);
              return acc;
            }, {});
          };
        }

        function spacing_spacing(props) {
          var theme = props.theme;
          var transformer = createUnarySpacing(theme);
          return Object.keys(props)
            .map(function (prop) {
              // Using a hash computation over an array iteration could be faster, but with only 28 items,
              // it's doesn't worth the bundle size.
              if (spacingKeys.indexOf(prop) === -1) {
                return null;
              }

              var cssProperties = getCssProperties(prop);
              var styleFromPropValue = getStyleFromPropValue(
                cssProperties,
                transformer
              );
              var propValue = props[prop];
              return handleBreakpoints(props, propValue, styleFromPropValue);
            })
            .reduce(esm_merge, {});
        }

        spacing_spacing.propTypes = false ? undefined : {};
        spacing_spacing.filterProps = spacingKeys;
        /* harmony default export */ var esm_spacing = spacing_spacing;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createSpacing.js

        var warnOnce;
        function createSpacing() {
          var spacingInput =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : 8;

          // Already transformed.
          if (spacingInput.mui) {
            return spacingInput;
          } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.
          // Smaller components, such as icons and type, can align to a 4dp grid.
          // https://material.io/design/layout/understanding-layout.html#usage

          var transform = createUnarySpacing({
            spacing: spacingInput,
          });

          var spacing = function spacing() {
            for (
              var _len = arguments.length, args = new Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            if (false) {
            }

            if (args.length === 0) {
              return transform(1);
            }

            if (args.length === 1) {
              return transform(args[0]);
            }

            return args
              .map(function (argument) {
                if (typeof argument === "string") {
                  return argument;
                }

                var output = transform(argument);
                return typeof output === "number"
                  ? "".concat(output, "px")
                  : output;
              })
              .join(" ");
          }; // Backward compatibility, to remove in v5.

          Object.defineProperty(spacing, "unit", {
            get: function get() {
              if (false) {
              }

              return spacingInput;
            },
          });
          spacing.mui = true;
          return spacing;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/transitions.js

        // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves
        // to learn the context in which each easing should be used.
        var easing = {
          // This is the most common easing curve.
          easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
          // Objects enter the screen at full velocity from off-screen and
          // slowly decelerate to a resting point.
          easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
          // Objects leave the screen at full velocity. They do not decelerate when off-screen.
          easeIn: "cubic-bezier(0.4, 0, 1, 1)",
          // The sharp curve is used by objects that may return to the screen at any time.
          sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
        }; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations
        // to learn when use what timing

        var transitions_duration = {
          shortest: 150,
          shorter: 200,
          short: 250,
          // most basic recommended timing
          standard: 300,
          // this is to be used in complex animations
          complex: 375,
          // recommended when something is entering screen
          enteringScreen: 225,
          // recommended when something is leaving screen
          leavingScreen: 195,
        };

        function formatMs(milliseconds) {
          return "".concat(Math.round(milliseconds), "ms");
        }
        /**
         * @param {string|Array} props
         * @param {object} param
         * @param {string} param.prop
         * @param {number} param.duration
         * @param {string} param.easing
         * @param {number} param.delay
         */

        /* harmony default export */ var transitions = {
          easing: easing,
          duration: transitions_duration,
          create: function create() {
            var props =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : ["all"];
            var options =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};

            var _options$duration = options.duration,
              durationOption =
                _options$duration === void 0
                  ? transitions_duration.standard
                  : _options$duration,
              _options$easing = options.easing,
              easingOption =
                _options$easing === void 0 ? easing.easeInOut : _options$easing,
              _options$delay = options.delay,
              delay = _options$delay === void 0 ? 0 : _options$delay,
              other = _objectWithoutProperties(options, [
                "duration",
                "easing",
                "delay",
              ]);

            if (false) {
              var isNumber, isString;
            }

            return (Array.isArray(props) ? props : [props])
              .map(function (animatedProp) {
                return ""
                  .concat(animatedProp, " ")
                  .concat(
                    typeof durationOption === "string"
                      ? durationOption
                      : formatMs(durationOption),
                    " "
                  )
                  .concat(easingOption, " ")
                  .concat(typeof delay === "string" ? delay : formatMs(delay));
              })
              .join(",");
          },
          getAutoHeightDuration: function getAutoHeightDuration(height) {
            if (!height) {
              return 0;
            }

            var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

            return Math.round(
              (4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10
            );
          },
        };
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/zIndex.js
        // We need to centralize the zIndex definitions as they work
        // like global values in the browser.
        var zIndex = {
          mobileStepper: 1000,
          speedDial: 1050,
          appBar: 1100,
          drawer: 1200,
          modal: 1300,
          snackbar: 1400,
          tooltip: 1500,
        };
        /* harmony default export */ var styles_zIndex = zIndex;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createMuiTheme.js

        function createMuiTheme() {
          var options =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : {};

          var _options$breakpoints = options.breakpoints,
            breakpointsInput =
              _options$breakpoints === void 0 ? {} : _options$breakpoints,
            _options$mixins = options.mixins,
            mixinsInput = _options$mixins === void 0 ? {} : _options$mixins,
            _options$palette = options.palette,
            paletteInput = _options$palette === void 0 ? {} : _options$palette,
            spacingInput = options.spacing,
            _options$typography = options.typography,
            typographyInput =
              _options$typography === void 0 ? {} : _options$typography,
            other = _objectWithoutProperties(options, [
              "breakpoints",
              "mixins",
              "palette",
              "spacing",
              "typography",
            ]);

          var palette = createPalette(paletteInput);
          var breakpoints = createBreakpoints(breakpointsInput);
          var spacing = createSpacing(spacingInput);
          var muiTheme = deepmerge(
            {
              breakpoints: breakpoints,
              direction: "ltr",
              mixins: createMixins(breakpoints, spacing, mixinsInput),
              overrides: {},
              // Inject custom styles
              palette: palette,
              props: {},
              // Provide default props
              shadows: styles_shadows,
              typography: createTypography(palette, typographyInput),
              spacing: spacing,
              shape: styles_shape,
              transitions: transitions,
              zIndex: styles_zIndex,
            },
            other
          );

          for (
            var _len = arguments.length,
              args = new Array(_len > 1 ? _len - 1 : 0),
              _key = 1;
            _key < _len;
            _key++
          ) {
            args[_key - 1] = arguments[_key];
          }

          muiTheme = args.reduce(function (acc, argument) {
            return deepmerge(acc, argument);
          }, muiTheme);

          if (false) {
            var traverse, pseudoClasses;
          }

          return muiTheme;
        }

        /* harmony default export */ var styles_createMuiTheme = createMuiTheme;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/defaultTheme.js

        var defaultTheme_defaultTheme = styles_createMuiTheme();
        /* harmony default export */ var styles_defaultTheme = defaultTheme_defaultTheme;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/withStyles.js

        function styles_withStyles_withStyles(stylesOrCreator, options) {
          return esm_withStyles_withStyles(
            stylesOrCreator,
            _extends(
              {
                defaultTheme: styles_defaultTheme,
              },
              options
            )
          );
        }

        /* harmony default export */ var styles_withStyles = styles_withStyles_withStyles;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/capitalize.js

        // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.
        //
        // A strict capitalization should uppercase the first letter of each word a the sentence.
        // We only handle the first word.
        function capitalize(string) {
          if (typeof string !== "string") {
            throw new Error(false ? undefined : formatMuiErrorMessage(7));
          }

          return string.charAt(0).toUpperCase() + string.slice(1);
        }
        // CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js
        /* harmony default export */ var config = {
          disabled: false,
        };
        // CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js

        /* harmony default export */ var TransitionGroupContext = react_default.a.createContext(
          null
        );
        // CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js

        var UNMOUNTED = "unmounted";
        var EXITED = "exited";
        var ENTERING = "entering";
        var ENTERED = "entered";
        var EXITING = "exiting";
        /**
         * The Transition component lets you describe a transition from one component
         * state to another _over time_ with a simple declarative API. Most commonly
         * it's used to animate the mounting and unmounting of a component, but can also
         * be used to describe in-place transition states as well.
         *
         * ---
         *
         * **Note**: `Transition` is a platform-agnostic base component. If you're using
         * transitions in CSS, you'll probably want to use
         * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
         * instead. It inherits all the features of `Transition`, but contains
         * additional features necessary to play nice with CSS transitions (hence the
         * name of the component).
         *
         * ---
         *
         * By default the `Transition` component does not alter the behavior of the
         * component it renders, it only tracks "enter" and "exit" states for the
         * components. It's up to you to give meaning and effect to those states. For
         * example we can add styles to a component when it enters or exits:
         *
         * ```jsx
         * import { Transition } from 'react-transition-group';
         *
         * const duration = 300;
         *
         * const defaultStyle = {
         *   transition: `opacity ${duration}ms ease-in-out`,
         *   opacity: 0,
         * }
         *
         * const transitionStyles = {
         *   entering: { opacity: 1 },
         *   entered:  { opacity: 1 },
         *   exiting:  { opacity: 0 },
         *   exited:  { opacity: 0 },
         * };
         *
         * const Fade = ({ in: inProp }) => (
         *   <Transition in={inProp} timeout={duration}>
         *     {state => (
         *       <div style={{
         *         ...defaultStyle,
         *         ...transitionStyles[state]
         *       }}>
         *         I'm a fade Transition!
         *       </div>
         *     )}
         *   </Transition>
         * );
         * ```
         *
         * There are 4 main states a Transition can be in:
         *  - `'entering'`
         *  - `'entered'`
         *  - `'exiting'`
         *  - `'exited'`
         *
         * Transition state is toggled via the `in` prop. When `true` the component
         * begins the "Enter" stage. During this stage, the component will shift from
         * its current transition state, to `'entering'` for the duration of the
         * transition and then to the `'entered'` stage once it's complete. Let's take
         * the following example (we'll use the
         * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
         *
         * ```jsx
         * function App() {
         *   const [inProp, setInProp] = useState(false);
         *   return (
         *     <div>
         *       <Transition in={inProp} timeout={500}>
         *         {state => (
         *           // ...
         *         )}
         *       </Transition>
         *       <button onClick={() => setInProp(true)}>
         *         Click to Enter
         *       </button>
         *     </div>
         *   );
         * }
         * ```
         *
         * When the button is clicked the component will shift to the `'entering'` state
         * and stay there for 500ms (the value of `timeout`) before it finally switches
         * to `'entered'`.
         *
         * When `in` is `false` the same thing happens except the state moves from
         * `'exiting'` to `'exited'`.
         */

        var Transition_Transition = /*#__PURE__*/ (function (_React$Component) {
          _inheritsLoose(Transition, _React$Component);

          function Transition(props, context) {
            var _this;

            _this = _React$Component.call(this, props, context) || this;
            var parentGroup = context; // In the context of a TransitionGroup all enters are really appears

            var appear =
              parentGroup && !parentGroup.isMounting
                ? props.enter
                : props.appear;
            var initialStatus;
            _this.appearStatus = null;

            if (props.in) {
              if (appear) {
                initialStatus = EXITED;
                _this.appearStatus = ENTERING;
              } else {
                initialStatus = ENTERED;
              }
            } else {
              if (props.unmountOnExit || props.mountOnEnter) {
                initialStatus = UNMOUNTED;
              } else {
                initialStatus = EXITED;
              }
            }

            _this.state = {
              status: initialStatus,
            };
            _this.nextCallback = null;
            return _this;
          }

          Transition.getDerivedStateFromProps = function getDerivedStateFromProps(
            _ref,
            prevState
          ) {
            var nextIn = _ref.in;

            if (nextIn && prevState.status === UNMOUNTED) {
              return {
                status: EXITED,
              };
            }

            return null;
          }; // getSnapshotBeforeUpdate(prevProps) {
          //   let nextStatus = null
          //   if (prevProps !== this.props) {
          //     const { status } = this.state
          //     if (this.props.in) {
          //       if (status !== ENTERING && status !== ENTERED) {
          //         nextStatus = ENTERING
          //       }
          //     } else {
          //       if (status === ENTERING || status === ENTERED) {
          //         nextStatus = EXITING
          //       }
          //     }
          //   }
          //   return { nextStatus }
          // }

          var _proto = Transition.prototype;

          _proto.componentDidMount = function componentDidMount() {
            this.updateStatus(true, this.appearStatus);
          };

          _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
            var nextStatus = null;

            if (prevProps !== this.props) {
              var status = this.state.status;

              if (this.props.in) {
                if (status !== ENTERING && status !== ENTERED) {
                  nextStatus = ENTERING;
                }
              } else {
                if (status === ENTERING || status === ENTERED) {
                  nextStatus = EXITING;
                }
              }
            }

            this.updateStatus(false, nextStatus);
          };

          _proto.componentWillUnmount = function componentWillUnmount() {
            this.cancelNextCallback();
          };

          _proto.getTimeouts = function getTimeouts() {
            var timeout = this.props.timeout;
            var exit, enter, appear;
            exit = enter = appear = timeout;

            if (timeout != null && typeof timeout !== "number") {
              exit = timeout.exit;
              enter = timeout.enter; // TODO: remove fallback for next major

              appear = timeout.appear !== undefined ? timeout.appear : enter;
            }

            return {
              exit: exit,
              enter: enter,
              appear: appear,
            };
          };

          _proto.updateStatus = function updateStatus(mounting, nextStatus) {
            if (mounting === void 0) {
              mounting = false;
            }

            if (nextStatus !== null) {
              // nextStatus will always be ENTERING or EXITING.
              this.cancelNextCallback();

              if (nextStatus === ENTERING) {
                this.performEnter(mounting);
              } else {
                this.performExit();
              }
            } else if (
              this.props.unmountOnExit &&
              this.state.status === EXITED
            ) {
              this.setState({
                status: UNMOUNTED,
              });
            }
          };

          _proto.performEnter = function performEnter(mounting) {
            var _this2 = this;

            var enter = this.props.enter;
            var appearing = this.context ? this.context.isMounting : mounting;

            var _ref2 = this.props.nodeRef
                ? [appearing]
                : [react_dom_default.a.findDOMNode(this), appearing],
              maybeNode = _ref2[0],
              maybeAppearing = _ref2[1];

            var timeouts = this.getTimeouts();
            var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
            // if we are mounting and running this it means appear _must_ be set

            if ((!mounting && !enter) || config.disabled) {
              this.safeSetState(
                {
                  status: ENTERED,
                },
                function () {
                  _this2.props.onEntered(maybeNode);
                }
              );
              return;
            }

            this.props.onEnter(maybeNode, maybeAppearing);
            this.safeSetState(
              {
                status: ENTERING,
              },
              function () {
                _this2.props.onEntering(maybeNode, maybeAppearing);

                _this2.onTransitionEnd(enterTimeout, function () {
                  _this2.safeSetState(
                    {
                      status: ENTERED,
                    },
                    function () {
                      _this2.props.onEntered(maybeNode, maybeAppearing);
                    }
                  );
                });
              }
            );
          };

          _proto.performExit = function performExit() {
            var _this3 = this;

            var exit = this.props.exit;
            var timeouts = this.getTimeouts();
            var maybeNode = this.props.nodeRef
              ? undefined
              : react_dom_default.a.findDOMNode(this); // no exit animation skip right to EXITED

            if (!exit || config.disabled) {
              this.safeSetState(
                {
                  status: EXITED,
                },
                function () {
                  _this3.props.onExited(maybeNode);
                }
              );
              return;
            }

            this.props.onExit(maybeNode);
            this.safeSetState(
              {
                status: EXITING,
              },
              function () {
                _this3.props.onExiting(maybeNode);

                _this3.onTransitionEnd(timeouts.exit, function () {
                  _this3.safeSetState(
                    {
                      status: EXITED,
                    },
                    function () {
                      _this3.props.onExited(maybeNode);
                    }
                  );
                });
              }
            );
          };

          _proto.cancelNextCallback = function cancelNextCallback() {
            if (this.nextCallback !== null) {
              this.nextCallback.cancel();
              this.nextCallback = null;
            }
          };

          _proto.safeSetState = function safeSetState(nextState, callback) {
            // This shouldn't be necessary, but there are weird race conditions with
            // setState callbacks and unmounting in testing, so always make sure that
            // we can cancel any pending setState callbacks after we unmount.
            callback = this.setNextCallback(callback);
            this.setState(nextState, callback);
          };

          _proto.setNextCallback = function setNextCallback(callback) {
            var _this4 = this;

            var active = true;

            this.nextCallback = function (event) {
              if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
              }
            };

            this.nextCallback.cancel = function () {
              active = false;
            };

            return this.nextCallback;
          };

          _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
            this.setNextCallback(handler);
            var node = this.props.nodeRef
              ? this.props.nodeRef.current
              : react_dom_default.a.findDOMNode(this);
            var doesNotHaveTimeoutOrListener =
              timeout == null && !this.props.addEndListener;

            if (!node || doesNotHaveTimeoutOrListener) {
              setTimeout(this.nextCallback, 0);
              return;
            }

            if (this.props.addEndListener) {
              var _ref3 = this.props.nodeRef
                  ? [this.nextCallback]
                  : [node, this.nextCallback],
                maybeNode = _ref3[0],
                maybeNextCallback = _ref3[1];

              this.props.addEndListener(maybeNode, maybeNextCallback);
            }

            if (timeout != null) {
              setTimeout(this.nextCallback, timeout);
            }
          };

          _proto.render = function render() {
            var status = this.state.status;

            if (status === UNMOUNTED) {
              return null;
            }

            var _this$props = this.props,
              children = _this$props.children,
              _in = _this$props.in,
              _mountOnEnter = _this$props.mountOnEnter,
              _unmountOnExit = _this$props.unmountOnExit,
              _appear = _this$props.appear,
              _enter = _this$props.enter,
              _exit = _this$props.exit,
              _timeout = _this$props.timeout,
              _addEndListener = _this$props.addEndListener,
              _onEnter = _this$props.onEnter,
              _onEntering = _this$props.onEntering,
              _onEntered = _this$props.onEntered,
              _onExit = _this$props.onExit,
              _onExiting = _this$props.onExiting,
              _onExited = _this$props.onExited,
              _nodeRef = _this$props.nodeRef,
              childProps = _objectWithoutPropertiesLoose(_this$props, [
                "children",
                "in",
                "mountOnEnter",
                "unmountOnExit",
                "appear",
                "enter",
                "exit",
                "timeout",
                "addEndListener",
                "onEnter",
                "onEntering",
                "onEntered",
                "onExit",
                "onExiting",
                "onExited",
                "nodeRef",
              ]);

            return (
              /*#__PURE__*/
              // allows for nested Transitions
              react_default.a.createElement(
                TransitionGroupContext.Provider,
                {
                  value: null,
                },
                typeof children === "function"
                  ? children(status, childProps)
                  : react_default.a.cloneElement(
                      react_default.a.Children.only(children),
                      childProps
                    )
              )
            );
          };

          return Transition;
        })(react_default.a.Component);

        Transition_Transition.contextType = TransitionGroupContext;
        Transition_Transition.propTypes = false ? undefined : {}; // Name the function so it is clearer in the documentation

        function noop() {}

        Transition_Transition.defaultProps = {
          in: false,
          mountOnEnter: false,
          unmountOnExit: false,
          appear: false,
          enter: true,
          exit: true,
          onEnter: noop,
          onEntering: noop,
          onEntered: noop,
          onExit: noop,
          onExiting: noop,
          onExited: noop,
        };
        Transition_Transition.UNMOUNTED = UNMOUNTED;
        Transition_Transition.EXITED = EXITED;
        Transition_Transition.ENTERING = ENTERING;
        Transition_Transition.ENTERED = ENTERED;
        Transition_Transition.EXITING = EXITING;
        /* harmony default export */ var esm_Transition = Transition_Transition;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/useTheme.js

        function useTheme_useTheme() {
          var theme = useTheme() || styles_defaultTheme;

          if (false) {
          }

          return theme;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/transitions/utils.js
        var reflow = function reflow(node) {
          return node.scrollTop;
        };
        function getTransitionProps(props, options) {
          var timeout = props.timeout,
            _props$style = props.style,
            style = _props$style === void 0 ? {} : _props$style;
          return {
            duration:
              style.transitionDuration || typeof timeout === "number"
                ? timeout
                : timeout[options.mode] || 0,
            delay: style.transitionDelay,
          };
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/setRef.js
        // TODO v5: consider to make it private
        function setRef(ref, value) {
          if (typeof ref === "function") {
            ref(value);
          } else if (ref) {
            ref.current = value;
          }
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/useForkRef.js

        function useForkRef(refA, refB) {
          /**
           * This will create a new function if the ref props change and are defined.
           * This means react will call the old forkRef with `null` and the new forkRef
           * with the ref. Cleanup naturally emerges from this behavior
           */
          return react["useMemo"](
            function () {
              if (refA == null && refB == null) {
                return null;
              }

              return function (refValue) {
                setRef(refA, refValue);
                setRef(refB, refValue);
              };
            },
            [refA, refB]
          );
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Grow/Grow.js

        function getScale(value) {
          return "scale(".concat(value, ", ").concat(Math.pow(value, 2), ")");
        }

        var Grow_styles = {
          entering: {
            opacity: 1,
            transform: getScale(1),
          },
          entered: {
            opacity: 1,
            transform: "none",
          },
        };
        /**
         * The Grow transition is used by the [Tooltip](/components/tooltips/) and
         * [Popover](/components/popover/) components.
         * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
         */

        var Grow_Grow = /*#__PURE__*/ react["forwardRef"](function Grow(
          props,
          ref
        ) {
          var children = props.children,
            _props$disableStrictM = props.disableStrictModeCompat,
            disableStrictModeCompat =
              _props$disableStrictM === void 0 ? false : _props$disableStrictM,
            inProp = props.in,
            onEnter = props.onEnter,
            onEntered = props.onEntered,
            onEntering = props.onEntering,
            onExit = props.onExit,
            onExited = props.onExited,
            onExiting = props.onExiting,
            style = props.style,
            _props$timeout = props.timeout,
            timeout = _props$timeout === void 0 ? "auto" : _props$timeout,
            _props$TransitionComp = props.TransitionComponent,
            TransitionComponent =
              _props$TransitionComp === void 0
                ? esm_Transition
                : _props$TransitionComp,
            other = _objectWithoutProperties(props, [
              "children",
              "disableStrictModeCompat",
              "in",
              "onEnter",
              "onEntered",
              "onEntering",
              "onExit",
              "onExited",
              "onExiting",
              "style",
              "timeout",
              "TransitionComponent",
            ]);

          var timer = react["useRef"]();
          var autoTimeout = react["useRef"]();
          var theme = useTheme_useTheme();
          var enableStrictModeCompat =
            theme.unstable_strictMode && !disableStrictModeCompat;
          var nodeRef = react["useRef"](null);
          var foreignRef = useForkRef(children.ref, ref);
          var handleRef = useForkRef(
            enableStrictModeCompat ? nodeRef : undefined,
            foreignRef
          );

          var normalizedTransitionCallback = function normalizedTransitionCallback(
            callback
          ) {
            return function (nodeOrAppearing, maybeAppearing) {
              if (callback) {
                var _ref = enableStrictModeCompat
                    ? [nodeRef.current, nodeOrAppearing]
                    : [nodeOrAppearing, maybeAppearing],
                  _ref2 = _slicedToArray(_ref, 2),
                  node = _ref2[0],
                  isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.

                if (isAppearing === undefined) {
                  callback(node);
                } else {
                  callback(node, isAppearing);
                }
              }
            };
          };

          var handleEntering = normalizedTransitionCallback(onEntering);
          var handleEnter = normalizedTransitionCallback(function (
            node,
            isAppearing
          ) {
            reflow(node); // So the animation always start from the start.

            var _getTransitionProps = getTransitionProps(
                {
                  style: style,
                  timeout: timeout,
                },
                {
                  mode: "enter",
                }
              ),
              transitionDuration = _getTransitionProps.duration,
              delay = _getTransitionProps.delay;

            var duration;

            if (timeout === "auto") {
              duration = theme.transitions.getAutoHeightDuration(
                node.clientHeight
              );
              autoTimeout.current = duration;
            } else {
              duration = transitionDuration;
            }

            node.style.transition = [
              theme.transitions.create("opacity", {
                duration: duration,
                delay: delay,
              }),
              theme.transitions.create("transform", {
                duration: duration * 0.666,
                delay: delay,
              }),
            ].join(",");

            if (onEnter) {
              onEnter(node, isAppearing);
            }
          });
          var handleEntered = normalizedTransitionCallback(onEntered);
          var handleExiting = normalizedTransitionCallback(onExiting);
          var handleExit = normalizedTransitionCallback(function (node) {
            var _getTransitionProps2 = getTransitionProps(
                {
                  style: style,
                  timeout: timeout,
                },
                {
                  mode: "exit",
                }
              ),
              transitionDuration = _getTransitionProps2.duration,
              delay = _getTransitionProps2.delay;

            var duration;

            if (timeout === "auto") {
              duration = theme.transitions.getAutoHeightDuration(
                node.clientHeight
              );
              autoTimeout.current = duration;
            } else {
              duration = transitionDuration;
            }

            node.style.transition = [
              theme.transitions.create("opacity", {
                duration: duration,
                delay: delay,
              }),
              theme.transitions.create("transform", {
                duration: duration * 0.666,
                delay: delay || duration * 0.333,
              }),
            ].join(",");
            node.style.opacity = "0";
            node.style.transform = getScale(0.75);

            if (onExit) {
              onExit(node);
            }
          });
          var handleExited = normalizedTransitionCallback(onExited);

          var addEndListener = function addEndListener(nodeOrNext, maybeNext) {
            var next = enableStrictModeCompat ? nodeOrNext : maybeNext;

            if (timeout === "auto") {
              timer.current = setTimeout(next, autoTimeout.current || 0);
            }
          };

          react["useEffect"](function () {
            return function () {
              clearTimeout(timer.current);
            };
          }, []);
          return /*#__PURE__*/ react["createElement"](
            TransitionComponent,
            _extends(
              {
                appear: true,
                in: inProp,
                nodeRef: enableStrictModeCompat ? nodeRef : undefined,
                onEnter: handleEnter,
                onEntered: handleEntered,
                onEntering: handleEntering,
                onExit: handleExit,
                onExited: handleExited,
                onExiting: handleExiting,
                addEndListener: addEndListener,
                timeout: timeout === "auto" ? null : timeout,
              },
              other
            ),
            function (state, childProps) {
              return /*#__PURE__*/ react["cloneElement"](
                children,
                _extends(
                  {
                    style: _extends(
                      {
                        opacity: 0,
                        transform: getScale(0.75),
                        visibility:
                          state === "exited" && !inProp ? "hidden" : undefined,
                      },
                      Grow_styles[state],
                      style,
                      children.props.style
                    ),
                    ref: handleRef,
                  },
                  childProps
                )
              );
            }
          );
        });
        false ? undefined : void 0;
        Grow_Grow.muiSupportAuto = true;
        /* harmony default export */ var esm_Grow_Grow = Grow_Grow;
        // EXTERNAL MODULE: ./node_modules/popper.js/dist/esm/popper.js
        var esm_popper = __webpack_require__(245);

        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Portal/Portal.js

        function getContainer(container) {
          container = typeof container === "function" ? container() : container; // #StrictMode ready

          return react_dom["findDOMNode"](container);
        }

        var useEnhancedEffect =
          typeof window !== "undefined"
            ? react["useLayoutEffect"]
            : react["useEffect"];
        /**
         * Portals provide a first-class way to render children into a DOM node
         * that exists outside the DOM hierarchy of the parent component.
         */

        var Portal_Portal = /*#__PURE__*/ react["forwardRef"](function Portal(
          props,
          ref
        ) {
          var children = props.children,
            container = props.container,
            _props$disablePortal = props.disablePortal,
            disablePortal =
              _props$disablePortal === void 0 ? false : _props$disablePortal,
            onRendered = props.onRendered;

          var _React$useState = react["useState"](null),
            mountNode = _React$useState[0],
            setMountNode = _React$useState[1];

          var handleRef = useForkRef(
            /*#__PURE__*/ react["isValidElement"](children)
              ? children.ref
              : null,
            ref
          );
          useEnhancedEffect(
            function () {
              if (!disablePortal) {
                setMountNode(getContainer(container) || document.body);
              }
            },
            [container, disablePortal]
          );
          useEnhancedEffect(
            function () {
              if (mountNode && !disablePortal) {
                setRef(ref, mountNode);
                return function () {
                  setRef(ref, null);
                };
              }

              return undefined;
            },
            [ref, mountNode, disablePortal]
          );
          useEnhancedEffect(
            function () {
              if (onRendered && (mountNode || disablePortal)) {
                onRendered();
              }
            },
            [onRendered, mountNode, disablePortal]
          );

          if (disablePortal) {
            if (/*#__PURE__*/ react["isValidElement"](children)) {
              return /*#__PURE__*/ react["cloneElement"](children, {
                ref: handleRef,
              });
            }

            return children;
          }

          return mountNode
            ? /*#__PURE__*/ react_dom["createPortal"](children, mountNode)
            : mountNode;
        });
        false ? undefined : void 0;

        if (false) {
        }

        /* harmony default export */ var esm_Portal_Portal = Portal_Portal;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/createChainedFunction.js
        /**
         * Safe chained function
         *
         * Will only create a new function if needed,
         * otherwise will pass back existing functions or null.
         *
         * @param {function} functions to chain
         * @returns {function|null}
         */
        function createChainedFunction() {
          for (
            var _len = arguments.length, funcs = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            funcs[_key] = arguments[_key];
          }

          return funcs.reduce(
            function (acc, func) {
              if (func == null) {
                return acc;
              }

              if (false) {
              }

              return function chainedFunction() {
                for (
                  var _len2 = arguments.length,
                    args = new Array(_len2),
                    _key2 = 0;
                  _key2 < _len2;
                  _key2++
                ) {
                  args[_key2] = arguments[_key2];
                }

                acc.apply(this, args);
                func.apply(this, args);
              };
            },
            function () {}
          );
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Popper/Popper.js

        function flipPlacement(placement, theme) {
          var direction = (theme && theme.direction) || "ltr";

          if (direction === "ltr") {
            return placement;
          }

          switch (placement) {
            case "bottom-end":
              return "bottom-start";

            case "bottom-start":
              return "bottom-end";

            case "top-end":
              return "top-start";

            case "top-start":
              return "top-end";

            default:
              return placement;
          }
        }

        function getAnchorEl(anchorEl) {
          return typeof anchorEl === "function" ? anchorEl() : anchorEl;
        }

        var Popper_useEnhancedEffect =
          typeof window !== "undefined"
            ? react["useLayoutEffect"]
            : react["useEffect"];
        var defaultPopperOptions = {};
        /**
         * Poppers rely on the 3rd party library [Popper.js](https://popper.js.org/docs/v1/) for positioning.
         */

        var Popper_Popper = /*#__PURE__*/ react["forwardRef"](function Popper(
          props,
          ref
        ) {
          var anchorEl = props.anchorEl,
            children = props.children,
            container = props.container,
            _props$disablePortal = props.disablePortal,
            disablePortal =
              _props$disablePortal === void 0 ? false : _props$disablePortal,
            _props$keepMounted = props.keepMounted,
            keepMounted =
              _props$keepMounted === void 0 ? false : _props$keepMounted,
            modifiers = props.modifiers,
            open = props.open,
            _props$placement = props.placement,
            initialPlacement =
              _props$placement === void 0 ? "bottom" : _props$placement,
            _props$popperOptions = props.popperOptions,
            popperOptions =
              _props$popperOptions === void 0
                ? defaultPopperOptions
                : _props$popperOptions,
            popperRefProp = props.popperRef,
            style = props.style,
            _props$transition = props.transition,
            transition =
              _props$transition === void 0 ? false : _props$transition,
            other = _objectWithoutProperties(props, [
              "anchorEl",
              "children",
              "container",
              "disablePortal",
              "keepMounted",
              "modifiers",
              "open",
              "placement",
              "popperOptions",
              "popperRef",
              "style",
              "transition",
            ]);

          var tooltipRef = react["useRef"](null);
          var ownRef = useForkRef(tooltipRef, ref);
          var popperRef = react["useRef"](null);
          var handlePopperRef = useForkRef(popperRef, popperRefProp);
          var handlePopperRefRef = react["useRef"](handlePopperRef);
          Popper_useEnhancedEffect(
            function () {
              handlePopperRefRef.current = handlePopperRef;
            },
            [handlePopperRef]
          );
          react["useImperativeHandle"](
            popperRefProp,
            function () {
              return popperRef.current;
            },
            []
          );

          var _React$useState = react["useState"](true),
            exited = _React$useState[0],
            setExited = _React$useState[1];

          var theme = useTheme();
          var rtlPlacement = flipPlacement(initialPlacement, theme);
          /**
           * placement initialized from prop but can change during lifetime if modifiers.flip.
           * modifiers.flip is essentially a flip for controlled/uncontrolled behavior
           */

          var _React$useState2 = react["useState"](rtlPlacement),
            placement = _React$useState2[0],
            setPlacement = _React$useState2[1];

          react["useEffect"](function () {
            if (popperRef.current) {
              popperRef.current.update();
            }
          });
          var handleOpen = react["useCallback"](
            function () {
              if (!tooltipRef.current || !anchorEl || !open) {
                return;
              }

              if (popperRef.current) {
                popperRef.current.destroy();
                handlePopperRefRef.current(null);
              }

              var handlePopperUpdate = function handlePopperUpdate(data) {
                setPlacement(data.placement);
              };

              var resolvedAnchorEl = getAnchorEl(anchorEl);

              if (false) {
                var box;
              }

              var popper = new esm_popper["a" /* default */](
                getAnchorEl(anchorEl),
                tooltipRef.current,
                _extends(
                  {
                    placement: rtlPlacement,
                  },
                  popperOptions,
                  {
                    modifiers: _extends(
                      {},
                      disablePortal
                        ? {}
                        : {
                            // It's using scrollParent by default, we can use the viewport when using a portal.
                            preventOverflow: {
                              boundariesElement: "window",
                            },
                          },
                      modifiers,
                      popperOptions.modifiers
                    ),
                    // We could have been using a custom modifier like react-popper is doing.
                    // But it seems this is the best public API for this use case.
                    onCreate: createChainedFunction(
                      handlePopperUpdate,
                      popperOptions.onCreate
                    ),
                    onUpdate: createChainedFunction(
                      handlePopperUpdate,
                      popperOptions.onUpdate
                    ),
                  }
                )
              );
              handlePopperRefRef.current(popper);
            },
            [
              anchorEl,
              disablePortal,
              modifiers,
              open,
              rtlPlacement,
              popperOptions,
            ]
          );
          var handleRef = react["useCallback"](
            function (node) {
              setRef(ownRef, node);
              handleOpen();
            },
            [ownRef, handleOpen]
          );

          var handleEnter = function handleEnter() {
            setExited(false);
          };

          var handleClose = function handleClose() {
            if (!popperRef.current) {
              return;
            }

            popperRef.current.destroy();
            handlePopperRefRef.current(null);
          };

          var handleExited = function handleExited() {
            setExited(true);
            handleClose();
          };

          react["useEffect"](function () {
            return function () {
              handleClose();
            };
          }, []);
          react["useEffect"](
            function () {
              if (!open && !transition) {
                // Otherwise handleExited will call this.
                handleClose();
              }
            },
            [open, transition]
          );

          if (!keepMounted && !open && (!transition || exited)) {
            return null;
          }

          var childProps = {
            placement: placement,
          };

          if (transition) {
            childProps.TransitionProps = {
              in: open,
              onEnter: handleEnter,
              onExited: handleExited,
            };
          }

          return /*#__PURE__*/ react["createElement"](
            esm_Portal_Portal,
            {
              disablePortal: disablePortal,
              container: container,
            },
            /*#__PURE__*/ react["createElement"](
              "div",
              _extends(
                {
                  ref: handleRef,
                  role: "tooltip",
                },
                other,
                {
                  style: _extends(
                    {
                      // Prevents scroll issue, waiting for Popper.js to add this style once initiated.
                      position: "fixed",
                      // Fix Popper.js display issue
                      top: 0,
                      left: 0,
                      display:
                        !open && keepMounted && !transition ? "none" : null,
                    },
                    style
                  ),
                }
              ),
              typeof children === "function" ? children(childProps) : children
            )
          );
        });
        false ? undefined : void 0;
        /* harmony default export */ var esm_Popper_Popper = Popper_Popper;
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/unstable_useId.js

        /**
         * Private module reserved for @material-ui/x packages.
         */

        function useId(idOverride) {
          var _React$useState = react["useState"](idOverride),
            defaultId = _React$useState[0],
            setDefaultId = _React$useState[1];

          var id = idOverride || defaultId;
          react["useEffect"](
            function () {
              if (defaultId == null) {
                // Fallback to this default id when possible.
                // Use the random value for client-side rendering only.
                // We can't use it server-side.
                setDefaultId("mui-".concat(Math.round(Math.random() * 1e5)));
              }
            },
            [defaultId]
          );
          return id;
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js
        // based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js

        var hadKeyboardEvent = true;
        var hadFocusVisibleRecently = false;
        var hadFocusVisibleRecentlyTimeout = null;
        var inputTypesWhitelist = {
          text: true,
          search: true,
          url: true,
          tel: true,
          email: true,
          password: true,
          number: true,
          date: true,
          month: true,
          week: true,
          time: true,
          datetime: true,
          "datetime-local": true,
        };
        /**
         * Computes whether the given element should automatically trigger the
         * `focus-visible` class being added, i.e. whether it should always match
         * `:focus-visible` when focused.
         * @param {Element} node
         * @return {boolean}
         */

        function focusTriggersKeyboardModality(node) {
          var type = node.type,
            tagName = node.tagName;

          if (
            tagName === "INPUT" &&
            inputTypesWhitelist[type] &&
            !node.readOnly
          ) {
            return true;
          }

          if (tagName === "TEXTAREA" && !node.readOnly) {
            return true;
          }

          if (node.isContentEditable) {
            return true;
          }

          return false;
        }
        /**
         * Keep track of our keyboard modality state with `hadKeyboardEvent`.
         * If the most recent user interaction was via the keyboard;
         * and the key press did not include a meta, alt/option, or control key;
         * then the modality is keyboard. Otherwise, the modality is not keyboard.
         * @param {KeyboardEvent} event
         */

        function handleKeyDown(event) {
          if (event.metaKey || event.altKey || event.ctrlKey) {
            return;
          }

          hadKeyboardEvent = true;
        }
        /**
         * If at any point a user clicks with a pointing device, ensure that we change
         * the modality away from keyboard.
         * This avoids the situation where a user presses a key on an already focused
         * element, and then clicks on a different element, focusing it with a
         * pointing device, while we still think we're in keyboard modality.
         */

        function handlePointerDown() {
          hadKeyboardEvent = false;
        }

        function handleVisibilityChange() {
          if (this.visibilityState === "hidden") {
            // If the tab becomes active again, the browser will handle calling focus
            // on the element (Safari actually calls it twice).
            // If this tab change caused a blur on an element with focus-visible,
            // re-apply the class when the user switches back to the tab.
            if (hadFocusVisibleRecently) {
              hadKeyboardEvent = true;
            }
          }
        }

        function prepare(doc) {
          doc.addEventListener("keydown", handleKeyDown, true);
          doc.addEventListener("mousedown", handlePointerDown, true);
          doc.addEventListener("pointerdown", handlePointerDown, true);
          doc.addEventListener("touchstart", handlePointerDown, true);
          doc.addEventListener(
            "visibilitychange",
            handleVisibilityChange,
            true
          );
        }

        function teardown(doc) {
          doc.removeEventListener("keydown", handleKeyDown, true);
          doc.removeEventListener("mousedown", handlePointerDown, true);
          doc.removeEventListener("pointerdown", handlePointerDown, true);
          doc.removeEventListener("touchstart", handlePointerDown, true);
          doc.removeEventListener(
            "visibilitychange",
            handleVisibilityChange,
            true
          );
        }

        function useIsFocusVisible_isFocusVisible(event) {
          var target = event.target;

          try {
            return target.matches(":focus-visible");
          } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError
          // we use our own heuristic for those browsers
          // rethrow might be better if it's not the expected error but do we really
          // want to crash if focus-visible malfunctioned?
          // no need for validFocusTarget check. the user does that by attaching it to
          // focusable events only

          return hadKeyboardEvent || focusTriggersKeyboardModality(target);
        }
        /**
         * Should be called if a blur event is fired on a focus-visible element
         */

        function handleBlurVisible() {
          // To detect a tab/window switch, we look for a blur event followed
          // rapidly by a visibility change.
          // If we don't see a visibility change within 100ms, it's probably a
          // regular focus change.
          hadFocusVisibleRecently = true;
          window.clearTimeout(hadFocusVisibleRecentlyTimeout);
          hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {
            hadFocusVisibleRecently = false;
          }, 100);
        }

        function useIsFocusVisible() {
          var ref = react["useCallback"](function (instance) {
            var node = react_dom["findDOMNode"](instance);

            if (node != null) {
              prepare(node.ownerDocument);
            }
          }, []);

          if (false) {
          }

          return {
            isFocusVisible: useIsFocusVisible_isFocusVisible,
            onBlurVisible: handleBlurVisible,
            ref: ref,
          };
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/useControlled.js
        /* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

        function useControlled(_ref) {
          var controlled = _ref.controlled,
            defaultProp = _ref.default,
            name = _ref.name,
            _ref$state = _ref.state,
            state = _ref$state === void 0 ? "value" : _ref$state;

          var _React$useRef = react["useRef"](controlled !== undefined),
            isControlled = _React$useRef.current;

          var _React$useState = react["useState"](defaultProp),
            valueState = _React$useState[0],
            setValue = _React$useState[1];

          var value = isControlled ? controlled : valueState;

          if (false) {
            var _React$useRef2, defaultValue;
          }

          var setValueIfUncontrolled = react["useCallback"](function (
            newValue
          ) {
            if (!isControlled) {
              setValue(newValue);
            }
          },
          []);
          return [value, setValueIfUncontrolled];
        }
        // CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Tooltip/Tooltip.js

        function Tooltip_round(value) {
          return Math.round(value * 1e5) / 1e5;
        }

        function arrowGenerator() {
          return {
            '&[x-placement*="bottom"] $arrow': {
              top: 0,
              left: 0,
              marginTop: "-0.71em",
              marginLeft: 4,
              marginRight: 4,
              "&::before": {
                transformOrigin: "0 100%",
              },
            },
            '&[x-placement*="top"] $arrow': {
              bottom: 0,
              left: 0,
              marginBottom: "-0.71em",
              marginLeft: 4,
              marginRight: 4,
              "&::before": {
                transformOrigin: "100% 0",
              },
            },
            '&[x-placement*="right"] $arrow': {
              left: 0,
              marginLeft: "-0.71em",
              height: "1em",
              width: "0.71em",
              marginTop: 4,
              marginBottom: 4,
              "&::before": {
                transformOrigin: "100% 100%",
              },
            },
            '&[x-placement*="left"] $arrow': {
              right: 0,
              marginRight: "-0.71em",
              height: "1em",
              width: "0.71em",
              marginTop: 4,
              marginBottom: 4,
              "&::before": {
                transformOrigin: "0 0",
              },
            },
          };
        }

        var Tooltip_styles = function styles(theme) {
          return {
            /* Styles applied to the Popper component. */
            popper: {
              zIndex: theme.zIndex.tooltip,
              pointerEvents: "none", // disable jss-rtl plugin
            },

            /* Styles applied to the Popper component if `interactive={true}`. */
            popperInteractive: {
              pointerEvents: "auto",
            },

            /* Styles applied to the Popper component if `arrow={true}`. */
            popperArrow: arrowGenerator(),

            /* Styles applied to the tooltip (label wrapper) element. */
            tooltip: {
              backgroundColor: fade(theme.palette.grey[700], 0.9),
              borderRadius: theme.shape.borderRadius,
              color: theme.palette.common.white,
              fontFamily: theme.typography.fontFamily,
              padding: "4px 8px",
              fontSize: theme.typography.pxToRem(10),
              lineHeight: "".concat(Tooltip_round(14 / 10), "em"),
              maxWidth: 300,
              wordWrap: "break-word",
              fontWeight: theme.typography.fontWeightMedium,
            },

            /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */
            tooltipArrow: {
              position: "relative",
              margin: "0",
            },

            /* Styles applied to the arrow element. */
            arrow: {
              overflow: "hidden",
              position: "absolute",
              width: "1em",
              height: "0.71em",
              /* = width / sqrt(2) = (length of the hypotenuse) */
              boxSizing: "border-box",
              color: fade(theme.palette.grey[700], 0.9),
              "&::before": {
                content: '""',
                margin: "auto",
                display: "block",
                width: "100%",
                height: "100%",
                backgroundColor: "currentColor",
                transform: "rotate(45deg)",
              },
            },

            /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */
            touch: {
              padding: "8px 16px",
              fontSize: theme.typography.pxToRem(14),
              lineHeight: "".concat(Tooltip_round(16 / 14), "em"),
              fontWeight: theme.typography.fontWeightRegular,
            },

            /* Styles applied to the tooltip (label wrapper) element if `placement` contains "left". */
            tooltipPlacementLeft: _defineProperty(
              {
                transformOrigin: "right center",
                margin: "0 24px ",
              },
              theme.breakpoints.up("sm"),
              {
                margin: "0 14px",
              }
            ),

            /* Styles applied to the tooltip (label wrapper) element if `placement` contains "right". */
            tooltipPlacementRight: _defineProperty(
              {
                transformOrigin: "left center",
                margin: "0 24px",
              },
              theme.breakpoints.up("sm"),
              {
                margin: "0 14px",
              }
            ),

            /* Styles applied to the tooltip (label wrapper) element if `placement` contains "top". */
            tooltipPlacementTop: _defineProperty(
              {
                transformOrigin: "center bottom",
                margin: "24px 0",
              },
              theme.breakpoints.up("sm"),
              {
                margin: "14px 0",
              }
            ),

            /* Styles applied to the tooltip (label wrapper) element if `placement` contains "bottom". */
            tooltipPlacementBottom: _defineProperty(
              {
                transformOrigin: "center top",
                margin: "24px 0",
              },
              theme.breakpoints.up("sm"),
              {
                margin: "14px 0",
              }
            ),
          };
        };
        var hystersisOpen = false;
        var hystersisTimer = null;
        function testReset() {
          hystersisOpen = false;
          clearTimeout(hystersisTimer);
        }
        var Tooltip_Tooltip = /*#__PURE__*/ react["forwardRef"](
          function Tooltip(props, ref) {
            var _props$arrow = props.arrow,
              arrow = _props$arrow === void 0 ? false : _props$arrow,
              children = props.children,
              classes = props.classes,
              _props$disableFocusLi = props.disableFocusListener,
              disableFocusListener =
                _props$disableFocusLi === void 0
                  ? false
                  : _props$disableFocusLi,
              _props$disableHoverLi = props.disableHoverListener,
              disableHoverListener =
                _props$disableHoverLi === void 0
                  ? false
                  : _props$disableHoverLi,
              _props$disableTouchLi = props.disableTouchListener,
              disableTouchListener =
                _props$disableTouchLi === void 0
                  ? false
                  : _props$disableTouchLi,
              _props$enterDelay = props.enterDelay,
              enterDelay =
                _props$enterDelay === void 0 ? 100 : _props$enterDelay,
              _props$enterNextDelay = props.enterNextDelay,
              enterNextDelay =
                _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay,
              _props$enterTouchDela = props.enterTouchDelay,
              enterTouchDelay =
                _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,
              idProp = props.id,
              _props$interactive = props.interactive,
              interactive =
                _props$interactive === void 0 ? false : _props$interactive,
              _props$leaveDelay = props.leaveDelay,
              leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,
              _props$leaveTouchDela = props.leaveTouchDelay,
              leaveTouchDelay =
                _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,
              onClose = props.onClose,
              onOpen = props.onOpen,
              openProp = props.open,
              _props$placement = props.placement,
              placement =
                _props$placement === void 0 ? "bottom" : _props$placement,
              _props$PopperComponen = props.PopperComponent,
              PopperComponent =
                _props$PopperComponen === void 0
                  ? esm_Popper_Popper
                  : _props$PopperComponen,
              PopperProps = props.PopperProps,
              title = props.title,
              _props$TransitionComp = props.TransitionComponent,
              TransitionComponent =
                _props$TransitionComp === void 0
                  ? esm_Grow_Grow
                  : _props$TransitionComp,
              TransitionProps = props.TransitionProps,
              other = _objectWithoutProperties(props, [
                "arrow",
                "children",
                "classes",
                "disableFocusListener",
                "disableHoverListener",
                "disableTouchListener",
                "enterDelay",
                "enterNextDelay",
                "enterTouchDelay",
                "id",
                "interactive",
                "leaveDelay",
                "leaveTouchDelay",
                "onClose",
                "onOpen",
                "open",
                "placement",
                "PopperComponent",
                "PopperProps",
                "title",
                "TransitionComponent",
                "TransitionProps",
              ]);

            var theme = useTheme_useTheme();

            var _React$useState = react["useState"](),
              childNode = _React$useState[0],
              setChildNode = _React$useState[1];

            var _React$useState2 = react["useState"](null),
              arrowRef = _React$useState2[0],
              setArrowRef = _React$useState2[1];

            var ignoreNonTouchEvents = react["useRef"](false);
            var closeTimer = react["useRef"]();
            var enterTimer = react["useRef"]();
            var leaveTimer = react["useRef"]();
            var touchTimer = react["useRef"]();

            var _useControlled = useControlled({
                controlled: openProp,
                default: false,
                name: "Tooltip",
                state: "open",
              }),
              _useControlled2 = _slicedToArray(_useControlled, 2),
              openState = _useControlled2[0],
              setOpenState = _useControlled2[1];

            var open = openState;

            if (false) {
              var _React$useRef, isControlled;
            }

            var id = useId(idProp);
            react["useEffect"](function () {
              return function () {
                clearTimeout(closeTimer.current);
                clearTimeout(enterTimer.current);
                clearTimeout(leaveTimer.current);
                clearTimeout(touchTimer.current);
              };
            }, []);

            var handleOpen = function handleOpen(event) {
              clearTimeout(hystersisTimer);
              hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.
              // We can skip rerendering when the tooltip is already open.
              // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.

              setOpenState(true);

              if (onOpen) {
                onOpen(event);
              }
            };

            var handleEnter = function handleEnter() {
              var forward =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : true;
              return function (event) {
                var childrenProps = children.props;

                if (
                  event.type === "mouseover" &&
                  childrenProps.onMouseOver &&
                  forward
                ) {
                  childrenProps.onMouseOver(event);
                }

                if (
                  ignoreNonTouchEvents.current &&
                  event.type !== "touchstart"
                ) {
                  return;
                } // Remove the title ahead of time.
                // We don't want to wait for the next render commit.
                // We would risk displaying two tooltips at the same time (native + this one).

                if (childNode) {
                  childNode.removeAttribute("title");
                }

                clearTimeout(enterTimer.current);
                clearTimeout(leaveTimer.current);

                if (enterDelay || (hystersisOpen && enterNextDelay)) {
                  event.persist();
                  enterTimer.current = setTimeout(
                    function () {
                      handleOpen(event);
                    },
                    hystersisOpen ? enterNextDelay : enterDelay
                  );
                } else {
                  handleOpen(event);
                }
              };
            };

            var _useIsFocusVisible = useIsFocusVisible(),
              isFocusVisible = _useIsFocusVisible.isFocusVisible,
              onBlurVisible = _useIsFocusVisible.onBlurVisible,
              focusVisibleRef = _useIsFocusVisible.ref;

            var _React$useState3 = react["useState"](false),
              childIsFocusVisible = _React$useState3[0],
              setChildIsFocusVisible = _React$useState3[1];

            var handleBlur = function handleBlur() {
              if (childIsFocusVisible) {
                setChildIsFocusVisible(false);
                onBlurVisible();
              }
            };

            var handleFocus = function handleFocus() {
              var forward =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : true;
              return function (event) {
                // Workaround for https://github.com/facebook/react/issues/7769
                // The autoFocus of React might trigger the event before the componentDidMount.
                // We need to account for this eventuality.
                if (!childNode) {
                  setChildNode(event.currentTarget);
                }

                if (isFocusVisible(event)) {
                  setChildIsFocusVisible(true);
                  handleEnter()(event);
                }

                var childrenProps = children.props;

                if (childrenProps.onFocus && forward) {
                  childrenProps.onFocus(event);
                }
              };
            };

            var handleClose = function handleClose(event) {
              clearTimeout(hystersisTimer);
              hystersisTimer = setTimeout(function () {
                hystersisOpen = false;
              }, 800 + leaveDelay);
              setOpenState(false);

              if (onClose) {
                onClose(event);
              }

              clearTimeout(closeTimer.current);
              closeTimer.current = setTimeout(function () {
                ignoreNonTouchEvents.current = false;
              }, theme.transitions.duration.shortest);
            };

            var handleLeave = function handleLeave() {
              var forward =
                arguments.length > 0 && arguments[0] !== undefined
                  ? arguments[0]
                  : true;
              return function (event) {
                var childrenProps = children.props;

                if (event.type === "blur") {
                  if (childrenProps.onBlur && forward) {
                    childrenProps.onBlur(event);
                  }

                  handleBlur();
                }

                if (
                  event.type === "mouseleave" &&
                  childrenProps.onMouseLeave &&
                  event.currentTarget === childNode
                ) {
                  childrenProps.onMouseLeave(event);
                }

                clearTimeout(enterTimer.current);
                clearTimeout(leaveTimer.current);
                event.persist();
                leaveTimer.current = setTimeout(function () {
                  handleClose(event);
                }, leaveDelay);
              };
            };

            var detectTouchStart = function detectTouchStart(event) {
              ignoreNonTouchEvents.current = true;
              var childrenProps = children.props;

              if (childrenProps.onTouchStart) {
                childrenProps.onTouchStart(event);
              }
            };

            var handleTouchStart = function handleTouchStart(event) {
              detectTouchStart(event);
              clearTimeout(leaveTimer.current);
              clearTimeout(closeTimer.current);
              clearTimeout(touchTimer.current);
              event.persist();
              touchTimer.current = setTimeout(function () {
                handleEnter()(event);
              }, enterTouchDelay);
            };

            var handleTouchEnd = function handleTouchEnd(event) {
              if (children.props.onTouchEnd) {
                children.props.onTouchEnd(event);
              }

              clearTimeout(touchTimer.current);
              clearTimeout(leaveTimer.current);
              event.persist();
              leaveTimer.current = setTimeout(function () {
                handleClose(event);
              }, leaveTouchDelay);
            };

            var handleUseRef = useForkRef(setChildNode, ref);
            var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components

            var handleOwnRef = react["useCallback"](
              function (instance) {
                // #StrictMode ready
                setRef(handleFocusRef, react_dom["findDOMNode"](instance));
              },
              [handleFocusRef]
            );
            var handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.

            if (title === "") {
              open = false;
            } // For accessibility and SEO concerns, we render the title to the DOM node when
            // the tooltip is hidden. However, we have made a tradeoff when
            // `disableHoverListener` is set. This title logic is disabled.
            // It's allowing us to keep the implementation size minimal.
            // We are open to change the tradeoff.

            var shouldShowNativeTitle = !open && !disableHoverListener;

            var childrenProps = _extends(
              {
                "aria-describedby": open ? id : null,
                title:
                  shouldShowNativeTitle && typeof title === "string"
                    ? title
                    : null,
              },
              other,
              children.props,
              {
                className: clsx_m(other.className, children.props.className),
                onTouchStart: detectTouchStart,
                ref: handleRef,
              }
            );

            var interactiveWrapperListeners = {};

            if (!disableTouchListener) {
              childrenProps.onTouchStart = handleTouchStart;
              childrenProps.onTouchEnd = handleTouchEnd;
            }

            if (!disableHoverListener) {
              childrenProps.onMouseOver = handleEnter();
              childrenProps.onMouseLeave = handleLeave();

              if (interactive) {
                interactiveWrapperListeners.onMouseOver = handleEnter(false);
                interactiveWrapperListeners.onMouseLeave = handleLeave(false);
              }
            }

            if (!disableFocusListener) {
              childrenProps.onFocus = handleFocus();
              childrenProps.onBlur = handleLeave();

              if (interactive) {
                interactiveWrapperListeners.onFocus = handleFocus(false);
                interactiveWrapperListeners.onBlur = handleLeave(false);
              }
            }

            if (false) {
            }

            var mergedPopperProps = react["useMemo"](
              function () {
                return deepmerge(
                  {
                    popperOptions: {
                      modifiers: {
                        arrow: {
                          enabled: Boolean(arrowRef),
                          element: arrowRef,
                        },
                      },
                    },
                  },
                  PopperProps
                );
              },
              [arrowRef, PopperProps]
            );
            return /*#__PURE__*/ react["createElement"](
              react["Fragment"],
              null,
              /*#__PURE__*/ react["cloneElement"](children, childrenProps),
              /*#__PURE__*/ react["createElement"](
                PopperComponent,
                _extends(
                  {
                    className: clsx_m(
                      classes.popper,
                      interactive && classes.popperInteractive,
                      arrow && classes.popperArrow
                    ),
                    placement: placement,
                    anchorEl: childNode,
                    open: childNode ? open : false,
                    id: childrenProps["aria-describedby"],
                    transition: true,
                  },
                  interactiveWrapperListeners,
                  mergedPopperProps
                ),
                function (_ref) {
                  var placementInner = _ref.placement,
                    TransitionPropsInner = _ref.TransitionProps;
                  return /*#__PURE__*/ react["createElement"](
                    TransitionComponent,
                    _extends(
                      {
                        timeout: theme.transitions.duration.shorter,
                      },
                      TransitionPropsInner,
                      TransitionProps
                    ),
                    /*#__PURE__*/ react["createElement"](
                      "div",
                      {
                        className: clsx_m(
                          classes.tooltip,
                          classes[
                            "tooltipPlacement".concat(
                              capitalize(placementInner.split("-")[0])
                            )
                          ],
                          ignoreNonTouchEvents.current && classes.touch,
                          arrow && classes.tooltipArrow
                        ),
                      },
                      title,
                      arrow
                        ? /*#__PURE__*/ react["createElement"]("span", {
                            className: classes.arrow,
                            ref: setArrowRef,
                          })
                        : null
                    )
                  );
                }
              )
            );
          }
        );
        false ? undefined : void 0;
        /* harmony default export */ var esm_Tooltip_Tooltip = styles_withStyles(
          Tooltip_styles,
          {
            name: "MuiTooltip",
            flip: false,
          }
        )(Tooltip_Tooltip);
        // CONCATENATED MODULE: ./src/components/shared/ToolTips.js

        var StyledToolTip = styles_withStyles({
          tooltipPlacementTop: {
            marginBottom: "8px",
          },
          tooltipPlacementBottom: {
            marginTop: "8px",
          },
        })(esm_Tooltip_Tooltip);
        /* harmony default export */ var ToolTips = StyledToolTip;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/PlaybackButtons.js

        function PlaybackButtons(_ref) {
          var document = _ref.document,
            video = _ref.video,
            goToTime = _ref.goToTime,
            isPlaying = _ref.isPlaying,
            setIsPlaying = _ref.setIsPlaying;
          var videoElement = video.getElement();
          var toggleVideoMemo = Object(react["useCallback"])(
            function toggleVideo() {
              if (isPlaying) {
                videoElement.pause();
              } else {
                videoElement.play();
              }

              setIsPlaying(function (prevState) {
                return !prevState;
              });
            },
            [isPlaying, setIsPlaying, videoElement]
          );

          function onPrevFrameClicked() {
            var frame = video.getPrevFrame();
            goToTime(video.getTimeFromFrame(frame));
          }

          function onNextFrameClicked() {
            var frame = video.getNextFrame();
            goToTime(video.getTimeFromFrame(frame));
          } // Use spacebar to play/pause the video
          // This blocks the ability of using the hand tool
          // from WebViewer (Space + Left Mouse Click)
          // Not sure if such functionality is necessary for video though
          // since we are disabling it in src/lib/index.js

          Object(react["useEffect"])(
            function () {
              var listener = function listener(e) {
                switch (e.code) {
                  case "Space":
                    toggleVideoMemo();
                    break;

                  case "ArrowLeft":
                    onPrevFrameClicked();
                    break;

                  case "ArrowRight":
                    onNextFrameClicked();
                    break;
                }
              };

              document.addEventListener("keydown", listener);
              return function () {
                document.removeEventListener("keydown", listener);
              };
            },
            [document, isPlaying, videoElement, toggleVideoMemo]
          );
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: "video-buttons center",
            },
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: "Previous frame",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: onPrevFrameClicked,
                  className: "video-button",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  skip_previous_24px,
                  null
                )
              )
            ),
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: isPlaying ? "Pause video" : "Play video",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: toggleVideoMemo,
                  className: "video-button",
                },
                isPlaying
                  ? /*#__PURE__*/ react_default.a.createElement(
                      pause_24px,
                      null
                    )
                  : /*#__PURE__*/ react_default.a.createElement(
                      play_arrow_24px,
                      null
                    )
              )
            ),
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: "Next frame",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: onNextFrameClicked,
                  className: "video-button",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  skip_next_24px,
                  null
                )
              )
            )
          );
        }

        /* harmony default export */ var Buttons_PlaybackButtons = PlaybackButtons;
        // CONCATENATED MODULE: ./src/hooks/useOnClickOutside.js
        // https://usehooks.com/useOnClickOutside/

        var useOnClickOutside_useOnClickOutside = function useOnClickOutside(
          document,
          ref,
          handler
        ) {
          Object(react["useEffect"])(
            function () {
              var listener = function listener(event) {
                // Do nothing if clicking ref's element or descendent elements
                if (!ref.current || ref.current.contains(event.target)) {
                  return;
                }

                handler(event);
              };

              document.addEventListener("mousedown", listener);
              document.addEventListener("touchstart", listener);
              return function () {
                document.removeEventListener("mousedown", listener);
                document.removeEventListener("touchstart", listener);
              };
            }, // Add ref and handler to effect dependencies
            // It's worth noting that because passed in handler is a new ...
            // ... function on every render that will cause this effect ...
            // ... callback/cleanup to run every render. It's not a big deal ...
            // ... but to optimize you can wrap handler in useCallback before ...
            // ... passing it into this hook.
            [document, ref, handler]
          );
        };

        /* harmony default export */ var hooks_useOnClickOutside = useOnClickOutside_useOnClickOutside;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/PlaybackSpeedButton.js

        function ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              ownKeys(Object(source), true).forEach(function (key) {
                defineProperty_default()(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        var PLAYBACK_SPEEDS = [
          "0.25",
          "0.5",
          "0.75",
          "1",
          "1.25",
          "1.5",
          "1.75",
          "2",
        ];

        function PlaybackSpeedButton(_ref) {
          var document = _ref.document,
            video = _ref.video;
          var containerRef = Object(react["useRef"])();

          var _useState = Object(react["useState"])({
              menuOpen: false,
              currentSpeed: "1",
            }),
            _useState2 = slicedToArray_default()(_useState, 2),
            state = _useState2[0],
            setState = _useState2[1];

          function onChangeSpeed(event) {
            var textContent = event.target.getAttribute("data");
            setState({
              menuOpen: false,
              currentSpeed: textContent,
            });
            var videoElement = video.getElement();
            videoElement.playbackRate = textContent;
          }

          hooks_useOnClickOutside(document, containerRef, function () {
            if (state.menuOpen) {
              setState(
                _objectSpread(
                  _objectSpread({}, state),
                  {},
                  {
                    menuOpen: false,
                  }
                )
              );
            }
          });
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              ref: containerRef,
              className: "button-with-menu",
            },
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: "Playback speed",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: function onClick() {
                    return setState(function (prevState) {
                      return _objectSpread(
                        _objectSpread({}, prevState),
                        {},
                        {
                          menuOpen: !prevState.menuOpen,
                        }
                      );
                    });
                  },
                },
                "".concat(state.currentSpeed, "x")
              )
            ),
            /*#__PURE__*/ react_default.a.createElement(
              "ul",
              {
                hidden: !state.menuOpen,
                className: "menu-popup-container",
              },
              PLAYBACK_SPEEDS.map(function (time) {
                return /*#__PURE__*/ react_default.a.createElement(
                  "li",
                  {
                    key: time,
                    data: time,
                    onClick: onChangeSpeed,
                    className: "menu-popup-option".concat(
                      state.currentSpeed === time ? "-active" : ""
                    ),
                  },
                  "".concat(time, "x")
                );
              })
            )
          );
        }

        /* harmony default export */ var Buttons_PlaybackSpeedButton = PlaybackSpeedButton;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/LoopButton.js

        var isIE11 = window.document.documentMode;

        function LoopButton(_ref) {
          var video = _ref.video;

          var _useState = Object(react["useState"])(false),
            _useState2 = slicedToArray_default()(_useState, 2),
            looping = _useState2[0],
            setLooping = _useState2[1];

          function toggleLoop() {
            var videoElement = video.getElement();
            videoElement.loop = !looping;
            setLooping(!looping);
          }

          return /*#__PURE__*/ react_default.a.createElement(
            ToolTips,
            {
              title: looping ? "Stop looping video" : "Loop video",
              placement: "bottom",
            },
            /*#__PURE__*/ react_default.a.createElement(
              "button",
              {
                onClick: toggleLoop,
                className: "video-button",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "svg",
                {
                  id: "loop",
                  className: "icon",
                  viewBox: "0 0 19 15",
                  xmlns: "http://www.w3.org/2000/svg",
                },
                /*#__PURE__*/ react_default.a.createElement("path", {
                  d:
                    "M14.75 2.5H11V4H14V10.75H2V4H5.75V6.25L9.5 3.25L5.75 0.25V2.5H1.25C0.83525 2.5 0.5 2.83525 0.5 3.25V11.5C0.5 11.9148 0.83525 12.25 1.25 12.25H14.75C15.1648 12.25 15.5 11.9148 15.5 11.5V3.25C15.5 2.83525 15.1648 2.5 14.75 2.5Z",
                  fill: looping
                    ? "#3183C8"
                    : isIE11
                    ? "#ADB5BD"
                    : "var(--icon-color)",
                })
              )
            )
          );
        }

        /* harmony default export */ var Buttons_LoopButton = LoopButton;
        // CONCATENATED MODULE: ./src/assets/icons/volume_black_20px-18px.svg
        function volume_black_20px_18px_extends() {
          volume_black_20px_18px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return volume_black_20px_18px_extends.apply(this, arguments);
        }

        var volume_black_20px_18px_ref = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d:
              "M15.6 3.3c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4C15.4 5.9 16 7.4 16 9c0 1.6-.6 3.1-1.8 4.3-.4.4-.4 1 0 1.4.2.2.5.3.7.3.3 0 .5-.1.7-.3C17.1 13.2 18 11.2 18 9s-.9-4.2-2.4-5.7z",
          }
        );

        var volume_black_20px_18px_ref2 = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d:
              "M11.282 5.282a.909.909 0 000 1.316c.735.735.995 1.458.995 2.402 0 .936-.425 1.917-.995 2.487a.909.909 0 000 1.316c.145.145.636.262 1.018.156a.725.725 0 00.298-.156C13.773 11.733 14.13 10.16 14.13 9c0-.17-.002-.34-.011-.51-.053-.992-.319-2.005-1.522-3.208a.909.909 0 00-1.316 0zm-7.496.726H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z",
          }
        );

        function SvgVolumeBlack20Px18Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            volume_black_20px_18px_extends(
              {
                className: "volume_black_20px-18px_svg__icon",
                width: 20,
                height: 18,
                "data-state": "visible",
                xmlns: "http://www.w3.org/2000/svg",
              },
              props
            ),
            volume_black_20px_18px_ref,
            volume_black_20px_18px_ref2
          );
        }

        /* harmony default export */ var volume_black_20px_18px = SvgVolumeBlack20Px18Px;
        // CONCATENATED MODULE: ./src/assets/icons/volume_muted_20px-18px.svg
        function volume_muted_20px_18px_extends() {
          volume_muted_20px_18px_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return volume_muted_20px_18px_extends.apply(this, arguments);
        }

        var volume_muted_20px_18px_ref = /*#__PURE__*/ react["createElement"](
          "path",
          {
            d:
              "M12.4 12.5l2.1-2.1 2.1 2.1 1.4-1.4L15.9 9 18 6.9l-1.4-1.4-2.1 2.1-2.1-2.1L11 6.9 13.1 9 11 11.1zM3.786 6.008H.714C.286 6.008 0 6.31 0 6.76v4.512c0 .452.286.752.714.752h3.072l4.071 3.858c.5.3 1.143 0 1.143-.602V2.752c0-.601-.643-.977-1.143-.601L3.786 6.008z",
          }
        );

        function SvgVolumeMuted20Px18Px(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            volume_muted_20px_18px_extends(
              {
                className: "volume_muted_20px-18px_svg__icon",
                width: 20,
                height: 18,
                "data-state": "visible",
                xmlns: "http://www.w3.org/2000/svg",
              },
              props
            ),
            volume_muted_20px_18px_ref
          );
        }

        /* harmony default export */ var volume_muted_20px_18px = SvgVolumeMuted20Px18Px;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/VolumeButton.js

        function VolumeButton(_ref) {
          var document = _ref.document,
            getElementVolume = _ref.getElementVolume,
            setElementVolume = _ref.setElementVolume,
            getIsElementMuted = _ref.getIsElementMuted,
            toggleElementMute = _ref.toggleElementMute;
          var rangeRef = Object(react["useRef"])(null);

          var _useState = Object(react["useState"])({
              muted: getIsElementMuted(),
              slideValue: 50,
            }),
            _useState2 = slicedToArray_default()(_useState, 2),
            state = _useState2[0],
            setState = _useState2[1];

          function toggleMute() {
            toggleElementMute(state.muted);
            var isElementMuted = getIsElementMuted(); // Change the colored track to reflect the value

            var slideValue = isElementMuted ? 0 : 50;
            var element = rangeRef.current;
            element.style.setProperty("--val", +slideValue);
            setState({
              muted: isElementMuted,
              slideValue: slideValue,
            });
          }

          function onSlideChange(event) {
            // Volume ranges from 0.0 to 1
            setElementVolume(event.target.value / 100);
            setState({
              muted: getElementVolume() === 0,
              slideValue: event.target.value,
            });
          } // This controls the customized colored part of the input[type=range] track

          function onInputChange() {
            var element = rangeRef.current;
            element.style.setProperty("--val", +element.value);
          }

          Object(react["useEffect"])(
            function () {
              var listener = function listener(e) {
                if (e.code === "KeyM") {
                  toggleMute();
                }
              };

              document.addEventListener("keydown", listener);
              return function () {
                document.removeEventListener("keydown", listener);
              };
            },
            [document, getIsElementMuted, setElementVolume, toggleMute]
          );
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: "volume-button-container",
            },
            /*#__PURE__*/ react_default.a.createElement(
              "button",
              {
                className: "volume-button",
                onClick: toggleMute,
              },
              state.muted
                ? /*#__PURE__*/ react_default.a.createElement(
                    volume_muted_20px_18px,
                    {
                      alt: "Unmute Volume",
                    }
                  )
                : /*#__PURE__*/ react_default.a.createElement(
                    volume_black_20px_18px,
                    {
                      alt: "Mute Volume",
                    }
                  )
            ),
            !utils_isSafari &&
              /*#__PURE__*/ react_default.a.createElement("input", {
                className: "volume-slider",
                type: "range",
                min: "0",
                max: "100",
                ref: rangeRef,
                value: state.slideValue,
                onChange: onSlideChange,
                onInput: onInputChange,
              })
          );
        }

        /* harmony default export */ var Buttons_VolumeButton = VolumeButton;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/SubtitleButton.js

        function SubtitleButton(_ref) {
          var video = _ref.video;
          var subtitleTrack = video.getSubtitleTrackElement();

          var _useState = Object(react["useState"])(false),
            _useState2 = slicedToArray_default()(_useState, 2),
            enabled = _useState2[0],
            setEnabled = _useState2[1];

          var subtitleFileInputRef = Object(react["useRef"])(null);

          function toggleSubtitles() {
            if (!enabled) {
              subtitleFileInputRef.current.click();
            } else {
              subtitleTrack.track.mode = "hidden";
              setEnabled(false);
            }
          }

          function onFileChange(event) {
            setEnabled(true);
            video.loadSubtitles(event.target.files[0]);
          }

          return /*#__PURE__*/ react_default.a.createElement(
            react_default.a.Fragment,
            null,
            /*#__PURE__*/ react_default.a.createElement("input", {
              id: "subtitleFileInput",
              type: "file",
              ref: subtitleFileInputRef,
              onChange: onFileChange,
              hidden: true,
              accept: ".srt,.vtt",
              value: "", // Force onChange to be triggered always, even for the same file
            }),
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: enabled ? "Disable subtitles" : "Load subtitles",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: toggleSubtitles,
                  className: "video-button",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  "svg",
                  {
                    id: "subtitle",
                    xmlns: "http://www.w3.org/2000/svg",
                    width: "22",
                    height: "22",
                    viewBox: "0 0 24 24",
                  },
                  /*#__PURE__*/ react_default.a.createElement("path", {
                    d:
                      "M6 10v4c0 1.103.897 2 2 2h3v-2H8v-4h3V8H8C6.897 8 6 8.897 6 10zM13 10v4c0 1.103.897 2 2 2h3v-2h-3v-4h3V8h-3C13.897 8 13 8.897 13 10z",
                    fill: enabled ? "#3183C8" : "var(--icon-color)",
                  }),
                  /*#__PURE__*/ react_default.a.createElement("path", {
                    d:
                      "M20,4H4C2.897,4,2,4.897,2,6v12c0,1.103,0.897,2,2,2h16c1.103,0,2-0.897,2-2V6C22,4.897,21.103,4,20,4z M4,18V6h16 l0.002,12H4z",
                    fill: enabled ? "#3183C8" : "var(--icon-color)",
                  })
                )
              )
            )
          );
        }

        /* harmony default export */ var Buttons_SubtitleButton = SubtitleButton;
        // CONCATENATED MODULE: ./src/hooks/useWindowResizeCallback.js

        function useWindowResizeCallback(callback) {
          Object(react["useEffect"])(
            function () {
              window.addEventListener("resize", callback);
              return function () {
                window.removeEventListener("resize", callback);
              };
            },
            [callback]
          );
        }

        /* harmony default export */ var hooks_useWindowResizeCallback = useWindowResizeCallback;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/GuidesButton.js

        function GuidesButton_ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function GuidesButton_objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              GuidesButton_ownKeys(Object(source), true).forEach(function (
                key
              ) {
                defineProperty_default()(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              GuidesButton_ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        var ASPECT_RATIOS = ["2.35", "1.85", "16:9", "4:3", "1:1"];

        function GuidesButton(_ref) {
          var instance = _ref.instance,
            document = _ref.document;
          var containerRef = Object(react["useRef"])();

          var _useState = Object(react["useState"])({
              menuOpen: false,
              currentAspectRatio: "",
              show: false,
            }),
            _useState2 = slicedToArray_default()(_useState, 2),
            state = _useState2[0],
            setState = _useState2[1];

          var guidesContainerElement = document.getElementById(
            "guides-container"
          );
          var guidesContainerMainChildElement = document.getElementById(
            "guides-container-main-child"
          );
          hooks_useWindowResizeCallback(function () {
            if (state.show) {
              utils_calculateGuideSize({
                document: document,
                currentAspectRatio: state.currentAspectRatio,
              });
            }
          });
          Object(react["useEffect"])(
            function () {
              var resizeGuide = function resizeGuide() {
                if (state.show) {
                  utils_calculateGuideSize({
                    document: document,
                    currentAspectRatio: state.currentAspectRatio,
                  });
                }
              };

              instance.docViewer.on("zoomUpdated", resizeGuide);
              return function () {
                instance.docViewer.off("zoomUpdated", resizeGuide);
              };
            },
            [state.show, state.currentAspectRatio]
          );
          hooks_useOnClickOutside(document, containerRef, function () {
            if (state.menuOpen) {
              setState(
                GuidesButton_objectSpread(
                  GuidesButton_objectSpread({}, state),
                  {},
                  {
                    menuOpen: false,
                  }
                )
              );
            }
          });

          function onChangeAspectRatio(event) {
            var textContent = event.target.textContent;
            setState({
              menuOpen: false,
              currentAspectRatio: textContent,
              show: textContent !== "Off",
            });

            if (textContent === "Off") {
              guidesContainerElement.style.display = "none";
            } else {
              guidesContainerElement.style.display = "grid";
              utils_calculateGuideSize({
                document: document,
                currentAspectRatio: textContent,
              });
            }
          }

          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              ref: containerRef,
              className: "button-with-menu",
            },
            /*#__PURE__*/ react_default.a.createElement(
              ToolTips,
              {
                title: state.show
                  ? "Hide aspect ratio guide"
                  : "Show aspect ratio guide",
                placement: "bottom",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "button",
                {
                  onClick: function onClick() {
                    return setState(function (prevState) {
                      return GuidesButton_objectSpread(
                        GuidesButton_objectSpread({}, prevState),
                        {},
                        {
                          menuOpen: !prevState.menuOpen,
                        }
                      );
                    });
                  },
                },
                /*#__PURE__*/ react_default.a.createElement(
                  "svg",
                  {
                    width: "22",
                    height: "22",
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    alt: state.show
                      ? "Hide aspect ratio guide"
                      : "Show aspect ratio guide",
                  },
                  /*#__PURE__*/ react_default.a.createElement("path", {
                    d:
                      "M18 12H17.5C17.2239 12 17 12.2239 17 12.5V15H14.5C14.2239 15 14 15.2239 14 15.5V16C14 16.2761 14.2239 16.5 14.5 16.5H18C18.2761 16.5 18.5 16.2761 18.5 16V12.5C18.5 12.2239 18.2761 12 18 12Z",
                    fill: state.show
                      ? "var(--ribbon-active-color)"
                      : "var(--icon-color)",
                  }),
                  /*#__PURE__*/ react_default.a.createElement("path", {
                    d:
                      "M6 12H6.5C6.7761 12 7 11.7761 7 11.5V9H9.5C9.7761 9 10 8.7761 10 8.5V8C10 7.7239 9.7761 7.5 9.5 7.5H6C5.7239 7.5 5.5 7.7239 5.5 8V11.5C5.5 11.7761 5.7239 12 6 12Z",
                    fill: state.show
                      ? "var(--ribbon-active-color)"
                      : "var(--icon-color)",
                  }),
                  /*#__PURE__*/ react_default.a.createElement("path", {
                    d:
                      "M20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6C22 4.9 21.1 4 20 4ZM20 18.01H4V5.99H20V18.01Z",
                    fill: state.show
                      ? "var(--ribbon-active-color)"
                      : "var(--icon-color)",
                  })
                )
              )
            ),
            /*#__PURE__*/ react_default.a.createElement(
              "ul",
              {
                hidden: !state.menuOpen,
                className: "menu-popup-container",
              },
              ASPECT_RATIOS.map(function (ratio) {
                return /*#__PURE__*/ react_default.a.createElement(
                  "li",
                  {
                    key: ratio,
                    onClick: onChangeAspectRatio,
                    className: "menu-popup-option".concat(
                      state.currentAspectRatio === ratio ? "-active" : ""
                    ),
                  },
                  ratio
                );
              }),
              /*#__PURE__*/ react_default.a.createElement(
                "li",
                {
                  value: "Off",
                  onClick: onChangeAspectRatio,
                  className: "menu-popup-option".concat(
                    state.currentAspectRatio === "" ? "-active" : ""
                  ),
                },
                "Off"
              )
            )
          );
        }

        /* harmony default export */ var Buttons_GuidesButton = GuidesButton;
        // CONCATENATED MODULE: ./node_modules/memoize-one/dist/memoize-one.esm.js
        function areInputsEqual(newInputs, lastInputs) {
          if (newInputs.length !== lastInputs.length) {
            return false;
          }
          for (var i = 0; i < newInputs.length; i++) {
            if (newInputs[i] !== lastInputs[i]) {
              return false;
            }
          }
          return true;
        }

        function memoizeOne(resultFn, isEqual) {
          if (isEqual === void 0) {
            isEqual = areInputsEqual;
          }
          var lastThis;
          var lastArgs = [];
          var lastResult;
          var calledOnce = false;
          function memoized() {
            var newArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
              newArgs[_i] = arguments[_i];
            }
            if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
              return lastResult;
            }
            lastResult = resultFn.apply(this, newArgs);
            calledOnce = true;
            lastThis = this;
            lastArgs = newArgs;
            return lastResult;
          }
          return memoized;
        }

        /* harmony default export */ var memoize_one_esm = memoizeOne;

        // CONCATENATED MODULE: ./node_modules/react-window/dist/index.esm.js

        // Animation frame based implementation of setTimeout.
        // Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js
        var hasNativePerformanceNow =
          typeof performance === "object" &&
          typeof performance.now === "function";
        var index_esm_now = hasNativePerformanceNow
          ? function () {
              return performance.now();
            }
          : function () {
              return Date.now();
            };
        function cancelTimeout(timeoutID) {
          cancelAnimationFrame(timeoutID.id);
        }
        function requestTimeout(callback, delay) {
          var start = index_esm_now();

          function tick() {
            if (index_esm_now() - start >= delay) {
              callback.call(null);
            } else {
              timeoutID.id = requestAnimationFrame(tick);
            }
          }

          var timeoutID = {
            id: requestAnimationFrame(tick),
          };
          return timeoutID;
        }

        var index_esm_size = -1; // This utility copied from "dom-helpers" package.

        function getScrollbarSize(recalculate) {
          if (recalculate === void 0) {
            recalculate = false;
          }

          if (index_esm_size === -1 || recalculate) {
            var div = document.createElement("div");
            var style = div.style;
            style.width = "50px";
            style.height = "50px";
            style.overflow = "scroll";
            document.body.appendChild(div);
            index_esm_size = div.offsetWidth - div.clientWidth;
            document.body.removeChild(div);
          }

          return index_esm_size;
        }
        var cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
        // Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).
        // Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.
        // The safest way to check this is to intentionally set a negative offset,
        // and then verify that the subsequent "scroll" event matches the negative offset.
        // If it does not match, then we can assume a non-standard RTL scroll implementation.

        function getRTLOffsetType(recalculate) {
          if (recalculate === void 0) {
            recalculate = false;
          }

          if (cachedRTLResult === null || recalculate) {
            var outerDiv = document.createElement("div");
            var outerStyle = outerDiv.style;
            outerStyle.width = "50px";
            outerStyle.height = "50px";
            outerStyle.overflow = "scroll";
            outerStyle.direction = "rtl";
            var innerDiv = document.createElement("div");
            var innerStyle = innerDiv.style;
            innerStyle.width = "100px";
            innerStyle.height = "100px";
            outerDiv.appendChild(innerDiv);
            document.body.appendChild(outerDiv);

            if (outerDiv.scrollLeft > 0) {
              cachedRTLResult = "positive-descending";
            } else {
              outerDiv.scrollLeft = 1;

              if (outerDiv.scrollLeft === 0) {
                cachedRTLResult = "negative";
              } else {
                cachedRTLResult = "positive-ascending";
              }
            }

            document.body.removeChild(outerDiv);
            return cachedRTLResult;
          }

          return cachedRTLResult;
        }

        var IS_SCROLLING_DEBOUNCE_INTERVAL = 150;

        var defaultItemKey = function defaultItemKey(_ref) {
          var columnIndex = _ref.columnIndex,
            data = _ref.data,
            rowIndex = _ref.rowIndex;
          return rowIndex + ":" + columnIndex;
        }; // In DEV mode, this Set helps us only log a warning once per component instance.
        // This avoids spamming the console every time a render happens.

        var devWarningsOverscanCount = null;
        var devWarningsOverscanRowsColumnsCount = null;
        var devWarningsTagName = null;

        if (false) {
        }

        function createGridComponent(_ref2) {
          var _class, _temp;

          var getColumnOffset = _ref2.getColumnOffset,
            getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,
            getColumnStopIndexForStartIndex =
              _ref2.getColumnStopIndexForStartIndex,
            getColumnWidth = _ref2.getColumnWidth,
            getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,
            getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,
            getOffsetForColumnAndAlignment =
              _ref2.getOffsetForColumnAndAlignment,
            getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,
            getRowHeight = _ref2.getRowHeight,
            getRowOffset = _ref2.getRowOffset,
            getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,
            getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,
            initInstanceProps = _ref2.initInstanceProps,
            shouldResetStyleCacheOnItemSizeChange =
              _ref2.shouldResetStyleCacheOnItemSizeChange,
            validateProps = _ref2.validateProps;
          return (
            (_temp = _class =
              /*#__PURE__*/
              (function (_PureComponent) {
                _inheritsLoose(Grid, _PureComponent);

                // Always use explicit constructor for React components.
                // It produces less code after transpilation. (#26)
                // eslint-disable-next-line no-useless-constructor
                function Grid(props) {
                  var _this;

                  _this = _PureComponent.call(this, props) || this;
                  _this._instanceProps = initInstanceProps(
                    _this.props,
                    _assertThisInitialized(_assertThisInitialized(_this))
                  );
                  _this._resetIsScrollingTimeoutId = null;
                  _this._outerRef = void 0;
                  _this.state = {
                    instance: _assertThisInitialized(
                      _assertThisInitialized(_this)
                    ),
                    isScrolling: false,
                    horizontalScrollDirection: "forward",
                    scrollLeft:
                      typeof _this.props.initialScrollLeft === "number"
                        ? _this.props.initialScrollLeft
                        : 0,
                    scrollTop:
                      typeof _this.props.initialScrollTop === "number"
                        ? _this.props.initialScrollTop
                        : 0,
                    scrollUpdateWasRequested: false,
                    verticalScrollDirection: "forward",
                  };
                  _this._callOnItemsRendered = void 0;
                  _this._callOnItemsRendered = memoize_one_esm(function (
                    overscanColumnStartIndex,
                    overscanColumnStopIndex,
                    overscanRowStartIndex,
                    overscanRowStopIndex,
                    visibleColumnStartIndex,
                    visibleColumnStopIndex,
                    visibleRowStartIndex,
                    visibleRowStopIndex
                  ) {
                    return _this.props.onItemsRendered({
                      overscanColumnStartIndex: overscanColumnStartIndex,
                      overscanColumnStopIndex: overscanColumnStopIndex,
                      overscanRowStartIndex: overscanRowStartIndex,
                      overscanRowStopIndex: overscanRowStopIndex,
                      visibleColumnStartIndex: visibleColumnStartIndex,
                      visibleColumnStopIndex: visibleColumnStopIndex,
                      visibleRowStartIndex: visibleRowStartIndex,
                      visibleRowStopIndex: visibleRowStopIndex,
                    });
                  });
                  _this._callOnScroll = void 0;
                  _this._callOnScroll = memoize_one_esm(function (
                    scrollLeft,
                    scrollTop,
                    horizontalScrollDirection,
                    verticalScrollDirection,
                    scrollUpdateWasRequested
                  ) {
                    return _this.props.onScroll({
                      horizontalScrollDirection: horizontalScrollDirection,
                      scrollLeft: scrollLeft,
                      scrollTop: scrollTop,
                      verticalScrollDirection: verticalScrollDirection,
                      scrollUpdateWasRequested: scrollUpdateWasRequested,
                    });
                  });
                  _this._getItemStyle = void 0;

                  _this._getItemStyle = function (rowIndex, columnIndex) {
                    var _this$props = _this.props,
                      columnWidth = _this$props.columnWidth,
                      direction = _this$props.direction,
                      rowHeight = _this$props.rowHeight;

                    var itemStyleCache = _this._getItemStyleCache(
                      shouldResetStyleCacheOnItemSizeChange && columnWidth,
                      shouldResetStyleCacheOnItemSizeChange && direction,
                      shouldResetStyleCacheOnItemSizeChange && rowHeight
                    );

                    var key = rowIndex + ":" + columnIndex;
                    var style;

                    if (itemStyleCache.hasOwnProperty(key)) {
                      style = itemStyleCache[key];
                    } else {
                      var _offset = getColumnOffset(
                        _this.props,
                        columnIndex,
                        _this._instanceProps
                      );

                      var isRtl = direction === "rtl";
                      itemStyleCache[key] = style = {
                        position: "absolute",
                        left: isRtl ? undefined : _offset,
                        right: isRtl ? _offset : undefined,
                        top: getRowOffset(
                          _this.props,
                          rowIndex,
                          _this._instanceProps
                        ),
                        height: getRowHeight(
                          _this.props,
                          rowIndex,
                          _this._instanceProps
                        ),
                        width: getColumnWidth(
                          _this.props,
                          columnIndex,
                          _this._instanceProps
                        ),
                      };
                    }

                    return style;
                  };

                  _this._getItemStyleCache = void 0;
                  _this._getItemStyleCache = memoize_one_esm(function (
                    _,
                    __,
                    ___
                  ) {
                    return {};
                  });

                  _this._onScroll = function (event) {
                    var _event$currentTarget = event.currentTarget,
                      clientHeight = _event$currentTarget.clientHeight,
                      clientWidth = _event$currentTarget.clientWidth,
                      scrollLeft = _event$currentTarget.scrollLeft,
                      scrollTop = _event$currentTarget.scrollTop,
                      scrollHeight = _event$currentTarget.scrollHeight,
                      scrollWidth = _event$currentTarget.scrollWidth;

                    _this.setState(function (prevState) {
                      if (
                        prevState.scrollLeft === scrollLeft &&
                        prevState.scrollTop === scrollTop
                      ) {
                        // Scroll position may have been updated by cDM/cDU,
                        // In which case we don't need to trigger another render,
                        // And we don't want to update state.isScrolling.
                        return null;
                      }

                      var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
                      // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
                      // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.
                      // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.

                      var calculatedScrollLeft = scrollLeft;

                      if (direction === "rtl") {
                        switch (getRTLOffsetType()) {
                          case "negative":
                            calculatedScrollLeft = -scrollLeft;
                            break;

                          case "positive-descending":
                            calculatedScrollLeft =
                              scrollWidth - clientWidth - scrollLeft;
                            break;
                        }
                      } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.

                      calculatedScrollLeft = Math.max(
                        0,
                        Math.min(
                          calculatedScrollLeft,
                          scrollWidth - clientWidth
                        )
                      );
                      var calculatedScrollTop = Math.max(
                        0,
                        Math.min(scrollTop, scrollHeight - clientHeight)
                      );
                      return {
                        isScrolling: true,
                        horizontalScrollDirection:
                          prevState.scrollLeft < scrollLeft
                            ? "forward"
                            : "backward",
                        scrollLeft: calculatedScrollLeft,
                        scrollTop: calculatedScrollTop,
                        verticalScrollDirection:
                          prevState.scrollTop < scrollTop
                            ? "forward"
                            : "backward",
                        scrollUpdateWasRequested: false,
                      };
                    }, _this._resetIsScrollingDebounced);
                  };

                  _this._outerRefSetter = function (ref) {
                    var outerRef = _this.props.outerRef;
                    _this._outerRef = ref;

                    if (typeof outerRef === "function") {
                      outerRef(ref);
                    } else if (
                      outerRef != null &&
                      typeof outerRef === "object" &&
                      outerRef.hasOwnProperty("current")
                    ) {
                      outerRef.current = ref;
                    }
                  };

                  _this._resetIsScrollingDebounced = function () {
                    if (_this._resetIsScrollingTimeoutId !== null) {
                      cancelTimeout(_this._resetIsScrollingTimeoutId);
                    }

                    _this._resetIsScrollingTimeoutId = requestTimeout(
                      _this._resetIsScrolling,
                      IS_SCROLLING_DEBOUNCE_INTERVAL
                    );
                  };

                  _this._resetIsScrolling = function () {
                    _this._resetIsScrollingTimeoutId = null;

                    _this.setState(
                      {
                        isScrolling: false,
                      },
                      function () {
                        // Clear style cache after state update has been committed.
                        // This way we don't break pure sCU for items that don't use isScrolling param.
                        _this._getItemStyleCache(-1);
                      }
                    );
                  };

                  return _this;
                }

                Grid.getDerivedStateFromProps = function getDerivedStateFromProps(
                  nextProps,
                  prevState
                ) {
                  validateSharedProps(nextProps, prevState);
                  validateProps(nextProps);
                  return null;
                };

                var _proto = Grid.prototype;

                _proto.scrollTo = function scrollTo(_ref3) {
                  var scrollLeft = _ref3.scrollLeft,
                    scrollTop = _ref3.scrollTop;

                  if (scrollLeft !== undefined) {
                    scrollLeft = Math.max(0, scrollLeft);
                  }

                  if (scrollTop !== undefined) {
                    scrollTop = Math.max(0, scrollTop);
                  }

                  this.setState(function (prevState) {
                    if (scrollLeft === undefined) {
                      scrollLeft = prevState.scrollLeft;
                    }

                    if (scrollTop === undefined) {
                      scrollTop = prevState.scrollTop;
                    }

                    if (
                      prevState.scrollLeft === scrollLeft &&
                      prevState.scrollTop === scrollTop
                    ) {
                      return null;
                    }

                    return {
                      horizontalScrollDirection:
                        prevState.scrollLeft < scrollLeft
                          ? "forward"
                          : "backward",
                      scrollLeft: scrollLeft,
                      scrollTop: scrollTop,
                      scrollUpdateWasRequested: true,
                      verticalScrollDirection:
                        prevState.scrollTop < scrollTop
                          ? "forward"
                          : "backward",
                    };
                  }, this._resetIsScrollingDebounced);
                };

                _proto.scrollToItem = function scrollToItem(_ref4) {
                  var _ref4$align = _ref4.align,
                    align = _ref4$align === void 0 ? "auto" : _ref4$align,
                    columnIndex = _ref4.columnIndex,
                    rowIndex = _ref4.rowIndex;
                  var _this$props2 = this.props,
                    columnCount = _this$props2.columnCount,
                    height = _this$props2.height,
                    rowCount = _this$props2.rowCount,
                    width = _this$props2.width;
                  var _this$state = this.state,
                    scrollLeft = _this$state.scrollLeft,
                    scrollTop = _this$state.scrollTop;
                  var scrollbarSize = getScrollbarSize();

                  if (columnIndex !== undefined) {
                    columnIndex = Math.max(
                      0,
                      Math.min(columnIndex, columnCount - 1)
                    );
                  }

                  if (rowIndex !== undefined) {
                    rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));
                  }

                  var estimatedTotalHeight = getEstimatedTotalHeight(
                    this.props,
                    this._instanceProps
                  );
                  var estimatedTotalWidth = getEstimatedTotalWidth(
                    this.props,
                    this._instanceProps
                  ); // The scrollbar size should be considered when scrolling an item into view,
                  // to ensure it's fully visible.
                  // But we only need to account for its size when it's actually visible.

                  var horizontalScrollbarSize =
                    estimatedTotalWidth > width ? scrollbarSize : 0;
                  var verticalScrollbarSize =
                    estimatedTotalHeight > height ? scrollbarSize : 0;
                  this.scrollTo({
                    scrollLeft:
                      columnIndex !== undefined
                        ? getOffsetForColumnAndAlignment(
                            this.props,
                            columnIndex,
                            align,
                            scrollLeft,
                            this._instanceProps,
                            verticalScrollbarSize
                          )
                        : scrollLeft,
                    scrollTop:
                      rowIndex !== undefined
                        ? getOffsetForRowAndAlignment(
                            this.props,
                            rowIndex,
                            align,
                            scrollTop,
                            this._instanceProps,
                            horizontalScrollbarSize
                          )
                        : scrollTop,
                  });
                };

                _proto.componentDidMount = function componentDidMount() {
                  var _this$props3 = this.props,
                    initialScrollLeft = _this$props3.initialScrollLeft,
                    initialScrollTop = _this$props3.initialScrollTop;

                  if (this._outerRef != null) {
                    var outerRef = this._outerRef;

                    if (typeof initialScrollLeft === "number") {
                      outerRef.scrollLeft = initialScrollLeft;
                    }

                    if (typeof initialScrollTop === "number") {
                      outerRef.scrollTop = initialScrollTop;
                    }
                  }

                  this._callPropsCallbacks();
                };

                _proto.componentDidUpdate = function componentDidUpdate() {
                  var direction = this.props.direction;
                  var _this$state2 = this.state,
                    scrollLeft = _this$state2.scrollLeft,
                    scrollTop = _this$state2.scrollTop,
                    scrollUpdateWasRequested =
                      _this$state2.scrollUpdateWasRequested;

                  if (scrollUpdateWasRequested && this._outerRef != null) {
                    // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
                    // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
                    // So we need to determine which browser behavior we're dealing with, and mimic it.
                    var outerRef = this._outerRef;

                    if (direction === "rtl") {
                      switch (getRTLOffsetType()) {
                        case "negative":
                          outerRef.scrollLeft = -scrollLeft;
                          break;

                        case "positive-ascending":
                          outerRef.scrollLeft = scrollLeft;
                          break;

                        default:
                          var clientWidth = outerRef.clientWidth,
                            scrollWidth = outerRef.scrollWidth;
                          outerRef.scrollLeft =
                            scrollWidth - clientWidth - scrollLeft;
                          break;
                      }
                    } else {
                      outerRef.scrollLeft = Math.max(0, scrollLeft);
                    }

                    outerRef.scrollTop = Math.max(0, scrollTop);
                  }

                  this._callPropsCallbacks();
                };

                _proto.componentWillUnmount = function componentWillUnmount() {
                  if (this._resetIsScrollingTimeoutId !== null) {
                    cancelTimeout(this._resetIsScrollingTimeoutId);
                  }
                };

                _proto.render = function render() {
                  var _this$props4 = this.props,
                    children = _this$props4.children,
                    className = _this$props4.className,
                    columnCount = _this$props4.columnCount,
                    direction = _this$props4.direction,
                    height = _this$props4.height,
                    innerRef = _this$props4.innerRef,
                    innerElementType = _this$props4.innerElementType,
                    innerTagName = _this$props4.innerTagName,
                    itemData = _this$props4.itemData,
                    _this$props4$itemKey = _this$props4.itemKey,
                    itemKey =
                      _this$props4$itemKey === void 0
                        ? defaultItemKey
                        : _this$props4$itemKey,
                    outerElementType = _this$props4.outerElementType,
                    outerTagName = _this$props4.outerTagName,
                    rowCount = _this$props4.rowCount,
                    style = _this$props4.style,
                    useIsScrolling = _this$props4.useIsScrolling,
                    width = _this$props4.width;
                  var isScrolling = this.state.isScrolling;

                  var _this$_getHorizontalR = this._getHorizontalRangeToRender(),
                    columnStartIndex = _this$_getHorizontalR[0],
                    columnStopIndex = _this$_getHorizontalR[1];

                  var _this$_getVerticalRan = this._getVerticalRangeToRender(),
                    rowStartIndex = _this$_getVerticalRan[0],
                    rowStopIndex = _this$_getVerticalRan[1];

                  var items = [];

                  if (columnCount > 0 && rowCount) {
                    for (
                      var _rowIndex = rowStartIndex;
                      _rowIndex <= rowStopIndex;
                      _rowIndex++
                    ) {
                      for (
                        var _columnIndex = columnStartIndex;
                        _columnIndex <= columnStopIndex;
                        _columnIndex++
                      ) {
                        items.push(
                          Object(react["createElement"])(children, {
                            columnIndex: _columnIndex,
                            data: itemData,
                            isScrolling: useIsScrolling
                              ? isScrolling
                              : undefined,
                            key: itemKey({
                              columnIndex: _columnIndex,
                              data: itemData,
                              rowIndex: _rowIndex,
                            }),
                            rowIndex: _rowIndex,
                            style: this._getItemStyle(_rowIndex, _columnIndex),
                          })
                        );
                      }
                    }
                  } // Read this value AFTER items have been created,
                  // So their actual sizes (if variable) are taken into consideration.

                  var estimatedTotalHeight = getEstimatedTotalHeight(
                    this.props,
                    this._instanceProps
                  );
                  var estimatedTotalWidth = getEstimatedTotalWidth(
                    this.props,
                    this._instanceProps
                  );
                  return Object(react["createElement"])(
                    outerElementType || outerTagName || "div",
                    {
                      className: className,
                      onScroll: this._onScroll,
                      ref: this._outerRefSetter,
                      style: _extends(
                        {
                          position: "relative",
                          height: height,
                          width: width,
                          overflow: "auto",
                          WebkitOverflowScrolling: "touch",
                          willChange: "transform",
                          direction: direction,
                        },
                        style
                      ),
                    },
                    Object(react["createElement"])(
                      innerElementType || innerTagName || "div",
                      {
                        children: items,
                        ref: innerRef,
                        style: {
                          height: estimatedTotalHeight,
                          pointerEvents: isScrolling ? "none" : undefined,
                          width: estimatedTotalWidth,
                        },
                      }
                    )
                  );
                };

                _proto._callPropsCallbacks = function _callPropsCallbacks() {
                  var _this$props5 = this.props,
                    columnCount = _this$props5.columnCount,
                    onItemsRendered = _this$props5.onItemsRendered,
                    onScroll = _this$props5.onScroll,
                    rowCount = _this$props5.rowCount;

                  if (typeof onItemsRendered === "function") {
                    if (columnCount > 0 && rowCount > 0) {
                      var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),
                        _overscanColumnStartIndex = _this$_getHorizontalR2[0],
                        _overscanColumnStopIndex = _this$_getHorizontalR2[1],
                        _visibleColumnStartIndex = _this$_getHorizontalR2[2],
                        _visibleColumnStopIndex = _this$_getHorizontalR2[3];

                      var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),
                        _overscanRowStartIndex = _this$_getVerticalRan2[0],
                        _overscanRowStopIndex = _this$_getVerticalRan2[1],
                        _visibleRowStartIndex = _this$_getVerticalRan2[2],
                        _visibleRowStopIndex = _this$_getVerticalRan2[3];

                      this._callOnItemsRendered(
                        _overscanColumnStartIndex,
                        _overscanColumnStopIndex,
                        _overscanRowStartIndex,
                        _overscanRowStopIndex,
                        _visibleColumnStartIndex,
                        _visibleColumnStopIndex,
                        _visibleRowStartIndex,
                        _visibleRowStopIndex
                      );
                    }
                  }

                  if (typeof onScroll === "function") {
                    var _this$state3 = this.state,
                      _horizontalScrollDirection =
                        _this$state3.horizontalScrollDirection,
                      _scrollLeft = _this$state3.scrollLeft,
                      _scrollTop = _this$state3.scrollTop,
                      _scrollUpdateWasRequested =
                        _this$state3.scrollUpdateWasRequested,
                      _verticalScrollDirection =
                        _this$state3.verticalScrollDirection;

                    this._callOnScroll(
                      _scrollLeft,
                      _scrollTop,
                      _horizontalScrollDirection,
                      _verticalScrollDirection,
                      _scrollUpdateWasRequested
                    );
                  }
                }; // Lazily create and cache item styles while scrolling,
                // So that pure component sCU will prevent re-renders.
                // We maintain this cache, and pass a style prop rather than index,
                // So that List can clear cached styles and force item re-render if necessary.

                _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {
                  var _this$props6 = this.props,
                    columnCount = _this$props6.columnCount,
                    overscanColumnCount = _this$props6.overscanColumnCount,
                    overscanColumnsCount = _this$props6.overscanColumnsCount,
                    overscanCount = _this$props6.overscanCount,
                    rowCount = _this$props6.rowCount;
                  var _this$state4 = this.state,
                    horizontalScrollDirection =
                      _this$state4.horizontalScrollDirection,
                    isScrolling = _this$state4.isScrolling,
                    scrollLeft = _this$state4.scrollLeft;
                  var overscanCountResolved =
                    overscanColumnCount ||
                    overscanColumnsCount ||
                    overscanCount ||
                    1;

                  if (columnCount === 0 || rowCount === 0) {
                    return [0, 0, 0, 0];
                  }

                  var startIndex = getColumnStartIndexForOffset(
                    this.props,
                    scrollLeft,
                    this._instanceProps
                  );
                  var stopIndex = getColumnStopIndexForStartIndex(
                    this.props,
                    startIndex,
                    scrollLeft,
                    this._instanceProps
                  ); // Overscan by one item in each direction so that tab/focus works.
                  // If there isn't at least one extra item, tab loops back around.

                  var overscanBackward =
                    !isScrolling || horizontalScrollDirection === "backward"
                      ? Math.max(1, overscanCountResolved)
                      : 1;
                  var overscanForward =
                    !isScrolling || horizontalScrollDirection === "forward"
                      ? Math.max(1, overscanCountResolved)
                      : 1;
                  return [
                    Math.max(0, startIndex - overscanBackward),
                    Math.max(
                      0,
                      Math.min(columnCount - 1, stopIndex + overscanForward)
                    ),
                    startIndex,
                    stopIndex,
                  ];
                };

                _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {
                  var _this$props7 = this.props,
                    columnCount = _this$props7.columnCount,
                    overscanCount = _this$props7.overscanCount,
                    overscanRowCount = _this$props7.overscanRowCount,
                    overscanRowsCount = _this$props7.overscanRowsCount,
                    rowCount = _this$props7.rowCount;
                  var _this$state5 = this.state,
                    isScrolling = _this$state5.isScrolling,
                    verticalScrollDirection =
                      _this$state5.verticalScrollDirection,
                    scrollTop = _this$state5.scrollTop;
                  var overscanCountResolved =
                    overscanRowCount || overscanRowsCount || overscanCount || 1;

                  if (columnCount === 0 || rowCount === 0) {
                    return [0, 0, 0, 0];
                  }

                  var startIndex = getRowStartIndexForOffset(
                    this.props,
                    scrollTop,
                    this._instanceProps
                  );
                  var stopIndex = getRowStopIndexForStartIndex(
                    this.props,
                    startIndex,
                    scrollTop,
                    this._instanceProps
                  ); // Overscan by one item in each direction so that tab/focus works.
                  // If there isn't at least one extra item, tab loops back around.

                  var overscanBackward =
                    !isScrolling || verticalScrollDirection === "backward"
                      ? Math.max(1, overscanCountResolved)
                      : 1;
                  var overscanForward =
                    !isScrolling || verticalScrollDirection === "forward"
                      ? Math.max(1, overscanCountResolved)
                      : 1;
                  return [
                    Math.max(0, startIndex - overscanBackward),
                    Math.max(
                      0,
                      Math.min(rowCount - 1, stopIndex + overscanForward)
                    ),
                    startIndex,
                    stopIndex,
                  ];
                };

                return Grid;
              })(react["PureComponent"])),
            (_class.defaultProps = {
              direction: "ltr",
              itemData: undefined,
              useIsScrolling: false,
            }),
            _temp
          );
        }

        var validateSharedProps = function validateSharedProps(_ref5, _ref6) {
          var children = _ref5.children,
            direction = _ref5.direction,
            height = _ref5.height,
            innerTagName = _ref5.innerTagName,
            outerTagName = _ref5.outerTagName,
            overscanColumnsCount = _ref5.overscanColumnsCount,
            overscanCount = _ref5.overscanCount,
            overscanRowsCount = _ref5.overscanRowsCount,
            width = _ref5.width;
          var instance = _ref6.instance;

          if (false) {
          }
        };

        var DEFAULT_ESTIMATED_ITEM_SIZE = 50;

        var index_esm_getEstimatedTotalHeight = function getEstimatedTotalHeight(
          _ref,
          _ref2
        ) {
          var rowCount = _ref.rowCount;
          var rowMetadataMap = _ref2.rowMetadataMap,
            estimatedRowHeight = _ref2.estimatedRowHeight,
            lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;
          var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
          // https://github.com/bvaughn/react-window/pull/138

          if (lastMeasuredRowIndex >= rowCount) {
            lastMeasuredRowIndex = rowCount - 1;
          }

          if (lastMeasuredRowIndex >= 0) {
            var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];
            totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;
          }

          var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;
          var totalSizeOfUnmeasuredItems =
            numUnmeasuredItems * estimatedRowHeight;
          return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;
        };

        var index_esm_getEstimatedTotalWidth = function getEstimatedTotalWidth(
          _ref3,
          _ref4
        ) {
          var columnCount = _ref3.columnCount;
          var columnMetadataMap = _ref4.columnMetadataMap,
            estimatedColumnWidth = _ref4.estimatedColumnWidth,
            lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;
          var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
          // https://github.com/bvaughn/react-window/pull/138

          if (lastMeasuredColumnIndex >= columnCount) {
            lastMeasuredColumnIndex = columnCount - 1;
          }

          if (lastMeasuredColumnIndex >= 0) {
            var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];
            totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;
          }

          var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;
          var totalSizeOfUnmeasuredItems =
            numUnmeasuredItems * estimatedColumnWidth;
          return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;
        };

        var getItemMetadata = function getItemMetadata(
          itemType,
          props,
          index,
          instanceProps
        ) {
          var itemMetadataMap, itemSize, lastMeasuredIndex;

          if (itemType === "column") {
            itemMetadataMap = instanceProps.columnMetadataMap;
            itemSize = props.columnWidth;
            lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;
          } else {
            itemMetadataMap = instanceProps.rowMetadataMap;
            itemSize = props.rowHeight;
            lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;
          }

          if (index > lastMeasuredIndex) {
            var offset = 0;

            if (lastMeasuredIndex >= 0) {
              var itemMetadata = itemMetadataMap[lastMeasuredIndex];
              offset = itemMetadata.offset + itemMetadata.size;
            }

            for (var i = lastMeasuredIndex + 1; i <= index; i++) {
              var size = itemSize(i);
              itemMetadataMap[i] = {
                offset: offset,
                size: size,
              };
              offset += size;
            }

            if (itemType === "column") {
              instanceProps.lastMeasuredColumnIndex = index;
            } else {
              instanceProps.lastMeasuredRowIndex = index;
            }
          }

          return itemMetadataMap[index];
        };

        var findNearestItem = function findNearestItem(
          itemType,
          props,
          instanceProps,
          offset
        ) {
          var itemMetadataMap, lastMeasuredIndex;

          if (itemType === "column") {
            itemMetadataMap = instanceProps.columnMetadataMap;
            lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;
          } else {
            itemMetadataMap = instanceProps.rowMetadataMap;
            lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;
          }

          var lastMeasuredItemOffset =
            lastMeasuredIndex > 0
              ? itemMetadataMap[lastMeasuredIndex].offset
              : 0;

          if (lastMeasuredItemOffset >= offset) {
            // If we've already measured items within this range just use a binary search as it's faster.
            return findNearestItemBinarySearch(
              itemType,
              props,
              instanceProps,
              lastMeasuredIndex,
              0,
              offset
            );
          } else {
            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.
            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.
            // The overall complexity for this approach is O(log n).
            return findNearestItemExponentialSearch(
              itemType,
              props,
              instanceProps,
              Math.max(0, lastMeasuredIndex),
              offset
            );
          }
        };

        var findNearestItemBinarySearch = function findNearestItemBinarySearch(
          itemType,
          props,
          instanceProps,
          high,
          low,
          offset
        ) {
          while (low <= high) {
            var middle = low + Math.floor((high - low) / 2);
            var currentOffset = getItemMetadata(
              itemType,
              props,
              middle,
              instanceProps
            ).offset;

            if (currentOffset === offset) {
              return middle;
            } else if (currentOffset < offset) {
              low = middle + 1;
            } else if (currentOffset > offset) {
              high = middle - 1;
            }
          }

          if (low > 0) {
            return low - 1;
          } else {
            return 0;
          }
        };

        var findNearestItemExponentialSearch = function findNearestItemExponentialSearch(
          itemType,
          props,
          instanceProps,
          index,
          offset
        ) {
          var itemCount =
            itemType === "column" ? props.columnCount : props.rowCount;
          var interval = 1;

          while (
            index < itemCount &&
            getItemMetadata(itemType, props, index, instanceProps).offset <
              offset
          ) {
            index += interval;
            interval *= 2;
          }

          return findNearestItemBinarySearch(
            itemType,
            props,
            instanceProps,
            Math.min(index, itemCount - 1),
            Math.floor(index / 2),
            offset
          );
        };

        var index_esm_getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(
          itemType,
          props,
          index,
          align,
          scrollOffset,
          instanceProps,
          scrollbarSize
        ) {
          var size = itemType === "column" ? props.width : props.height;
          var itemMetadata = getItemMetadata(
            itemType,
            props,
            index,
            instanceProps
          ); // Get estimated total size after ItemMetadata is computed,
          // To ensure it reflects actual measurements instead of just estimates.

          var estimatedTotalSize =
            itemType === "column"
              ? index_esm_getEstimatedTotalWidth(props, instanceProps)
              : index_esm_getEstimatedTotalHeight(props, instanceProps);
          var maxOffset = Math.max(
            0,
            Math.min(estimatedTotalSize - size, itemMetadata.offset)
          );
          var minOffset = Math.max(
            0,
            itemMetadata.offset - size + scrollbarSize + itemMetadata.size
          );

          if (align === "smart") {
            if (
              scrollOffset >= minOffset - size &&
              scrollOffset <= maxOffset + size
            ) {
              align = "auto";
            } else {
              align = "center";
            }
          }

          switch (align) {
            case "start":
              return maxOffset;

            case "end":
              return minOffset;

            case "center":
              return Math.round(minOffset + (maxOffset - minOffset) / 2);

            case "auto":
            default:
              if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
                return scrollOffset;
              } else if (minOffset > maxOffset) {
                // Because we only take into account the scrollbar size when calculating minOffset
                // this value can be larger than maxOffset when at the end of the list
                return minOffset;
              } else if (scrollOffset < minOffset) {
                return minOffset;
              } else {
                return maxOffset;
              }
          }
        };

        var VariableSizeGrid =
          /*#__PURE__*/
          createGridComponent({
            getColumnOffset: function getColumnOffset(
              props,
              index,
              instanceProps
            ) {
              return getItemMetadata("column", props, index, instanceProps)
                .offset;
            },
            getColumnStartIndexForOffset: function getColumnStartIndexForOffset(
              props,
              scrollLeft,
              instanceProps
            ) {
              return findNearestItem(
                "column",
                props,
                instanceProps,
                scrollLeft
              );
            },
            getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(
              props,
              startIndex,
              scrollLeft,
              instanceProps
            ) {
              var columnCount = props.columnCount,
                width = props.width;
              var itemMetadata = getItemMetadata(
                "column",
                props,
                startIndex,
                instanceProps
              );
              var maxOffset = scrollLeft + width;
              var offset = itemMetadata.offset + itemMetadata.size;
              var stopIndex = startIndex;

              while (stopIndex < columnCount - 1 && offset < maxOffset) {
                stopIndex++;
                offset += getItemMetadata(
                  "column",
                  props,
                  stopIndex,
                  instanceProps
                ).size;
              }

              return stopIndex;
            },
            getColumnWidth: function getColumnWidth(
              props,
              index,
              instanceProps
            ) {
              return instanceProps.columnMetadataMap[index].size;
            },
            getEstimatedTotalHeight: index_esm_getEstimatedTotalHeight,
            getEstimatedTotalWidth: index_esm_getEstimatedTotalWidth,
            getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(
              props,
              index,
              align,
              scrollOffset,
              instanceProps,
              scrollbarSize
            ) {
              return index_esm_getOffsetForIndexAndAlignment(
                "column",
                props,
                index,
                align,
                scrollOffset,
                instanceProps,
                scrollbarSize
              );
            },
            getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(
              props,
              index,
              align,
              scrollOffset,
              instanceProps,
              scrollbarSize
            ) {
              return index_esm_getOffsetForIndexAndAlignment(
                "row",
                props,
                index,
                align,
                scrollOffset,
                instanceProps,
                scrollbarSize
              );
            },
            getRowOffset: function getRowOffset(props, index, instanceProps) {
              return getItemMetadata("row", props, index, instanceProps).offset;
            },
            getRowHeight: function getRowHeight(props, index, instanceProps) {
              return instanceProps.rowMetadataMap[index].size;
            },
            getRowStartIndexForOffset: function getRowStartIndexForOffset(
              props,
              scrollTop,
              instanceProps
            ) {
              return findNearestItem("row", props, instanceProps, scrollTop);
            },
            getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(
              props,
              startIndex,
              scrollTop,
              instanceProps
            ) {
              var rowCount = props.rowCount,
                height = props.height;
              var itemMetadata = getItemMetadata(
                "row",
                props,
                startIndex,
                instanceProps
              );
              var maxOffset = scrollTop + height;
              var offset = itemMetadata.offset + itemMetadata.size;
              var stopIndex = startIndex;

              while (stopIndex < rowCount - 1 && offset < maxOffset) {
                stopIndex++;
                offset += getItemMetadata(
                  "row",
                  props,
                  stopIndex,
                  instanceProps
                ).size;
              }

              return stopIndex;
            },
            initInstanceProps: function initInstanceProps(props, instance) {
              var _ref5 = props,
                estimatedColumnWidth = _ref5.estimatedColumnWidth,
                estimatedRowHeight = _ref5.estimatedRowHeight;
              var instanceProps = {
                columnMetadataMap: {},
                estimatedColumnWidth:
                  estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,
                estimatedRowHeight:
                  estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,
                lastMeasuredColumnIndex: -1,
                lastMeasuredRowIndex: -1,
                rowMetadataMap: {},
              };

              instance.resetAfterColumnIndex = function (
                columnIndex,
                shouldForceUpdate
              ) {
                if (shouldForceUpdate === void 0) {
                  shouldForceUpdate = true;
                }

                instance.resetAfterIndices({
                  columnIndex: columnIndex,
                  shouldForceUpdate: shouldForceUpdate,
                });
              };

              instance.resetAfterRowIndex = function (
                rowIndex,
                shouldForceUpdate
              ) {
                if (shouldForceUpdate === void 0) {
                  shouldForceUpdate = true;
                }

                instance.resetAfterIndices({
                  rowIndex: rowIndex,
                  shouldForceUpdate: shouldForceUpdate,
                });
              };

              instance.resetAfterIndices = function (_ref6) {
                var columnIndex = _ref6.columnIndex,
                  rowIndex = _ref6.rowIndex,
                  _ref6$shouldForceUpda = _ref6.shouldForceUpdate,
                  shouldForceUpdate =
                    _ref6$shouldForceUpda === void 0
                      ? true
                      : _ref6$shouldForceUpda;

                if (typeof columnIndex === "number") {
                  instanceProps.lastMeasuredColumnIndex = Math.min(
                    instanceProps.lastMeasuredColumnIndex,
                    columnIndex - 1
                  );
                }

                if (typeof rowIndex === "number") {
                  instanceProps.lastMeasuredRowIndex = Math.min(
                    instanceProps.lastMeasuredRowIndex,
                    rowIndex - 1
                  );
                } // We could potentially optimize further by only evicting styles after this index,
                // But since styles are only cached while scrolling is in progress-
                // It seems an unnecessary optimization.
                // It's unlikely that resetAfterIndex() will be called while a user is scrolling.

                instance._getItemStyleCache(-1);

                if (shouldForceUpdate) {
                  instance.forceUpdate();
                }
              };

              return instanceProps;
            },
            shouldResetStyleCacheOnItemSizeChange: false,
            validateProps: function validateProps(_ref7) {
              var columnWidth = _ref7.columnWidth,
                rowHeight = _ref7.rowHeight;

              if (false) {
              }
            },
          });

        var IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;

        var defaultItemKey$1 = function defaultItemKey(index, data) {
          return index;
        }; // In DEV mode, this Set helps us only log a warning once per component instance.
        // This avoids spamming the console every time a render happens.

        var devWarningsDirection = null;
        var devWarningsTagName$1 = null;

        if (false) {
        }

        function createListComponent(_ref) {
          var _class, _temp;

          var getItemOffset = _ref.getItemOffset,
            getEstimatedTotalSize = _ref.getEstimatedTotalSize,
            getItemSize = _ref.getItemSize,
            getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,
            getStartIndexForOffset = _ref.getStartIndexForOffset,
            getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,
            initInstanceProps = _ref.initInstanceProps,
            shouldResetStyleCacheOnItemSizeChange =
              _ref.shouldResetStyleCacheOnItemSizeChange,
            validateProps = _ref.validateProps;
          return (
            (_temp = _class =
              /*#__PURE__*/
              (function (_PureComponent) {
                _inheritsLoose(List, _PureComponent);

                // Always use explicit constructor for React components.
                // It produces less code after transpilation. (#26)
                // eslint-disable-next-line no-useless-constructor
                function List(props) {
                  var _this;

                  _this = _PureComponent.call(this, props) || this;
                  _this._instanceProps = initInstanceProps(
                    _this.props,
                    _assertThisInitialized(_assertThisInitialized(_this))
                  );
                  _this._outerRef = void 0;
                  _this._resetIsScrollingTimeoutId = null;
                  _this.state = {
                    instance: _assertThisInitialized(
                      _assertThisInitialized(_this)
                    ),
                    isScrolling: false,
                    scrollDirection: "forward",
                    scrollOffset:
                      typeof _this.props.initialScrollOffset === "number"
                        ? _this.props.initialScrollOffset
                        : 0,
                    scrollUpdateWasRequested: false,
                  };
                  _this._callOnItemsRendered = void 0;
                  _this._callOnItemsRendered = memoize_one_esm(function (
                    overscanStartIndex,
                    overscanStopIndex,
                    visibleStartIndex,
                    visibleStopIndex
                  ) {
                    return _this.props.onItemsRendered({
                      overscanStartIndex: overscanStartIndex,
                      overscanStopIndex: overscanStopIndex,
                      visibleStartIndex: visibleStartIndex,
                      visibleStopIndex: visibleStopIndex,
                    });
                  });
                  _this._callOnScroll = void 0;
                  _this._callOnScroll = memoize_one_esm(function (
                    scrollDirection,
                    scrollOffset,
                    scrollUpdateWasRequested
                  ) {
                    return _this.props.onScroll({
                      scrollDirection: scrollDirection,
                      scrollOffset: scrollOffset,
                      scrollUpdateWasRequested: scrollUpdateWasRequested,
                    });
                  });
                  _this._getItemStyle = void 0;

                  _this._getItemStyle = function (index) {
                    var _this$props = _this.props,
                      direction = _this$props.direction,
                      itemSize = _this$props.itemSize,
                      layout = _this$props.layout;

                    var itemStyleCache = _this._getItemStyleCache(
                      shouldResetStyleCacheOnItemSizeChange && itemSize,
                      shouldResetStyleCacheOnItemSizeChange && layout,
                      shouldResetStyleCacheOnItemSizeChange && direction
                    );

                    var style;

                    if (itemStyleCache.hasOwnProperty(index)) {
                      style = itemStyleCache[index];
                    } else {
                      var _offset = getItemOffset(
                        _this.props,
                        index,
                        _this._instanceProps
                      );

                      var size = getItemSize(
                        _this.props,
                        index,
                        _this._instanceProps
                      ); // TODO Deprecate direction "horizontal"

                      var isHorizontal =
                        direction === "horizontal" || layout === "horizontal";
                      var isRtl = direction === "rtl";
                      var offsetHorizontal = isHorizontal ? _offset : 0;
                      itemStyleCache[index] = style = {
                        position: "absolute",
                        left: isRtl ? undefined : offsetHorizontal,
                        right: isRtl ? offsetHorizontal : undefined,
                        top: !isHorizontal ? _offset : 0,
                        height: !isHorizontal ? size : "100%",
                        width: isHorizontal ? size : "100%",
                      };
                    }

                    return style;
                  };

                  _this._getItemStyleCache = void 0;
                  _this._getItemStyleCache = memoize_one_esm(function (
                    _,
                    __,
                    ___
                  ) {
                    return {};
                  });

                  _this._onScrollHorizontal = function (event) {
                    var _event$currentTarget = event.currentTarget,
                      clientWidth = _event$currentTarget.clientWidth,
                      scrollLeft = _event$currentTarget.scrollLeft,
                      scrollWidth = _event$currentTarget.scrollWidth;

                    _this.setState(function (prevState) {
                      if (prevState.scrollOffset === scrollLeft) {
                        // Scroll position may have been updated by cDM/cDU,
                        // In which case we don't need to trigger another render,
                        // And we don't want to update state.isScrolling.
                        return null;
                      }

                      var direction = _this.props.direction;
                      var scrollOffset = scrollLeft;

                      if (direction === "rtl") {
                        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
                        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
                        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.
                        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.
                        switch (getRTLOffsetType()) {
                          case "negative":
                            scrollOffset = -scrollLeft;
                            break;

                          case "positive-descending":
                            scrollOffset =
                              scrollWidth - clientWidth - scrollLeft;
                            break;
                        }
                      } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.

                      scrollOffset = Math.max(
                        0,
                        Math.min(scrollOffset, scrollWidth - clientWidth)
                      );
                      return {
                        isScrolling: true,
                        scrollDirection:
                          prevState.scrollOffset < scrollLeft
                            ? "forward"
                            : "backward",
                        scrollOffset: scrollOffset,
                        scrollUpdateWasRequested: false,
                      };
                    }, _this._resetIsScrollingDebounced);
                  };

                  _this._onScrollVertical = function (event) {
                    var _event$currentTarget2 = event.currentTarget,
                      clientHeight = _event$currentTarget2.clientHeight,
                      scrollHeight = _event$currentTarget2.scrollHeight,
                      scrollTop = _event$currentTarget2.scrollTop;

                    _this.setState(function (prevState) {
                      if (prevState.scrollOffset === scrollTop) {
                        // Scroll position may have been updated by cDM/cDU,
                        // In which case we don't need to trigger another render,
                        // And we don't want to update state.isScrolling.
                        return null;
                      } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.

                      var scrollOffset = Math.max(
                        0,
                        Math.min(scrollTop, scrollHeight - clientHeight)
                      );
                      return {
                        isScrolling: true,
                        scrollDirection:
                          prevState.scrollOffset < scrollOffset
                            ? "forward"
                            : "backward",
                        scrollOffset: scrollOffset,
                        scrollUpdateWasRequested: false,
                      };
                    }, _this._resetIsScrollingDebounced);
                  };

                  _this._outerRefSetter = function (ref) {
                    var outerRef = _this.props.outerRef;
                    _this._outerRef = ref;

                    if (typeof outerRef === "function") {
                      outerRef(ref);
                    } else if (
                      outerRef != null &&
                      typeof outerRef === "object" &&
                      outerRef.hasOwnProperty("current")
                    ) {
                      outerRef.current = ref;
                    }
                  };

                  _this._resetIsScrollingDebounced = function () {
                    if (_this._resetIsScrollingTimeoutId !== null) {
                      cancelTimeout(_this._resetIsScrollingTimeoutId);
                    }

                    _this._resetIsScrollingTimeoutId = requestTimeout(
                      _this._resetIsScrolling,
                      IS_SCROLLING_DEBOUNCE_INTERVAL$1
                    );
                  };

                  _this._resetIsScrolling = function () {
                    _this._resetIsScrollingTimeoutId = null;

                    _this.setState(
                      {
                        isScrolling: false,
                      },
                      function () {
                        // Clear style cache after state update has been committed.
                        // This way we don't break pure sCU for items that don't use isScrolling param.
                        _this._getItemStyleCache(-1, null);
                      }
                    );
                  };

                  return _this;
                }

                List.getDerivedStateFromProps = function getDerivedStateFromProps(
                  nextProps,
                  prevState
                ) {
                  validateSharedProps$1(nextProps, prevState);
                  validateProps(nextProps);
                  return null;
                };

                var _proto = List.prototype;

                _proto.scrollTo = function scrollTo(scrollOffset) {
                  scrollOffset = Math.max(0, scrollOffset);
                  this.setState(function (prevState) {
                    if (prevState.scrollOffset === scrollOffset) {
                      return null;
                    }

                    return {
                      scrollDirection:
                        prevState.scrollOffset < scrollOffset
                          ? "forward"
                          : "backward",
                      scrollOffset: scrollOffset,
                      scrollUpdateWasRequested: true,
                    };
                  }, this._resetIsScrollingDebounced);
                };

                _proto.scrollToItem = function scrollToItem(index, align) {
                  if (align === void 0) {
                    align = "auto";
                  }

                  var itemCount = this.props.itemCount;
                  var scrollOffset = this.state.scrollOffset;
                  index = Math.max(0, Math.min(index, itemCount - 1));
                  this.scrollTo(
                    getOffsetForIndexAndAlignment(
                      this.props,
                      index,
                      align,
                      scrollOffset,
                      this._instanceProps
                    )
                  );
                };

                _proto.componentDidMount = function componentDidMount() {
                  var _this$props2 = this.props,
                    direction = _this$props2.direction,
                    initialScrollOffset = _this$props2.initialScrollOffset,
                    layout = _this$props2.layout;

                  if (
                    typeof initialScrollOffset === "number" &&
                    this._outerRef != null
                  ) {
                    var outerRef = this._outerRef; // TODO Deprecate direction "horizontal"

                    if (direction === "horizontal" || layout === "horizontal") {
                      outerRef.scrollLeft = initialScrollOffset;
                    } else {
                      outerRef.scrollTop = initialScrollOffset;
                    }
                  }

                  this._callPropsCallbacks();
                };

                _proto.componentDidUpdate = function componentDidUpdate() {
                  var _this$props3 = this.props,
                    direction = _this$props3.direction,
                    layout = _this$props3.layout;
                  var _this$state = this.state,
                    scrollOffset = _this$state.scrollOffset,
                    scrollUpdateWasRequested =
                      _this$state.scrollUpdateWasRequested;

                  if (scrollUpdateWasRequested && this._outerRef != null) {
                    var outerRef = this._outerRef; // TODO Deprecate direction "horizontal"

                    if (direction === "horizontal" || layout === "horizontal") {
                      if (direction === "rtl") {
                        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
                        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
                        // So we need to determine which browser behavior we're dealing with, and mimic it.
                        switch (getRTLOffsetType()) {
                          case "negative":
                            outerRef.scrollLeft = -scrollOffset;
                            break;

                          case "positive-ascending":
                            outerRef.scrollLeft = scrollOffset;
                            break;

                          default:
                            var clientWidth = outerRef.clientWidth,
                              scrollWidth = outerRef.scrollWidth;
                            outerRef.scrollLeft =
                              scrollWidth - clientWidth - scrollOffset;
                            break;
                        }
                      } else {
                        outerRef.scrollLeft = scrollOffset;
                      }
                    } else {
                      outerRef.scrollTop = scrollOffset;
                    }
                  }

                  this._callPropsCallbacks();
                };

                _proto.componentWillUnmount = function componentWillUnmount() {
                  if (this._resetIsScrollingTimeoutId !== null) {
                    cancelTimeout(this._resetIsScrollingTimeoutId);
                  }
                };

                _proto.render = function render() {
                  var _this$props4 = this.props,
                    children = _this$props4.children,
                    className = _this$props4.className,
                    direction = _this$props4.direction,
                    height = _this$props4.height,
                    innerRef = _this$props4.innerRef,
                    innerElementType = _this$props4.innerElementType,
                    innerTagName = _this$props4.innerTagName,
                    itemCount = _this$props4.itemCount,
                    itemData = _this$props4.itemData,
                    _this$props4$itemKey = _this$props4.itemKey,
                    itemKey =
                      _this$props4$itemKey === void 0
                        ? defaultItemKey$1
                        : _this$props4$itemKey,
                    layout = _this$props4.layout,
                    outerElementType = _this$props4.outerElementType,
                    outerTagName = _this$props4.outerTagName,
                    style = _this$props4.style,
                    useIsScrolling = _this$props4.useIsScrolling,
                    width = _this$props4.width;
                  var isScrolling = this.state.isScrolling; // TODO Deprecate direction "horizontal"

                  var isHorizontal =
                    direction === "horizontal" || layout === "horizontal";
                  var onScroll = isHorizontal
                    ? this._onScrollHorizontal
                    : this._onScrollVertical;

                  var _this$_getRangeToRend = this._getRangeToRender(),
                    startIndex = _this$_getRangeToRend[0],
                    stopIndex = _this$_getRangeToRend[1];

                  var items = [];

                  if (itemCount > 0) {
                    for (
                      var _index = startIndex;
                      _index <= stopIndex;
                      _index++
                    ) {
                      items.push(
                        Object(react["createElement"])(children, {
                          data: itemData,
                          key: itemKey(_index, itemData),
                          index: _index,
                          isScrolling: useIsScrolling ? isScrolling : undefined,
                          style: this._getItemStyle(_index),
                        })
                      );
                    }
                  } // Read this value AFTER items have been created,
                  // So their actual sizes (if variable) are taken into consideration.

                  var estimatedTotalSize = getEstimatedTotalSize(
                    this.props,
                    this._instanceProps
                  );
                  return Object(react["createElement"])(
                    outerElementType || outerTagName || "div",
                    {
                      className: className,
                      onScroll: onScroll,
                      ref: this._outerRefSetter,
                      style: _extends(
                        {
                          position: "relative",
                          height: height,
                          width: width,
                          overflow: "auto",
                          WebkitOverflowScrolling: "touch",
                          willChange: "transform",
                          direction: direction,
                        },
                        style
                      ),
                    },
                    Object(react["createElement"])(
                      innerElementType || innerTagName || "div",
                      {
                        children: items,
                        ref: innerRef,
                        style: {
                          height: isHorizontal ? "100%" : estimatedTotalSize,
                          pointerEvents: isScrolling ? "none" : undefined,
                          width: isHorizontal ? estimatedTotalSize : "100%",
                        },
                      }
                    )
                  );
                };

                _proto._callPropsCallbacks = function _callPropsCallbacks() {
                  if (typeof this.props.onItemsRendered === "function") {
                    var itemCount = this.props.itemCount;

                    if (itemCount > 0) {
                      var _this$_getRangeToRend2 = this._getRangeToRender(),
                        _overscanStartIndex = _this$_getRangeToRend2[0],
                        _overscanStopIndex = _this$_getRangeToRend2[1],
                        _visibleStartIndex = _this$_getRangeToRend2[2],
                        _visibleStopIndex = _this$_getRangeToRend2[3];

                      this._callOnItemsRendered(
                        _overscanStartIndex,
                        _overscanStopIndex,
                        _visibleStartIndex,
                        _visibleStopIndex
                      );
                    }
                  }

                  if (typeof this.props.onScroll === "function") {
                    var _this$state2 = this.state,
                      _scrollDirection = _this$state2.scrollDirection,
                      _scrollOffset = _this$state2.scrollOffset,
                      _scrollUpdateWasRequested =
                        _this$state2.scrollUpdateWasRequested;

                    this._callOnScroll(
                      _scrollDirection,
                      _scrollOffset,
                      _scrollUpdateWasRequested
                    );
                  }
                }; // Lazily create and cache item styles while scrolling,
                // So that pure component sCU will prevent re-renders.
                // We maintain this cache, and pass a style prop rather than index,
                // So that List can clear cached styles and force item re-render if necessary.

                _proto._getRangeToRender = function _getRangeToRender() {
                  var _this$props5 = this.props,
                    itemCount = _this$props5.itemCount,
                    overscanCount = _this$props5.overscanCount;
                  var _this$state3 = this.state,
                    isScrolling = _this$state3.isScrolling,
                    scrollDirection = _this$state3.scrollDirection,
                    scrollOffset = _this$state3.scrollOffset;

                  if (itemCount === 0) {
                    return [0, 0, 0, 0];
                  }

                  var startIndex = getStartIndexForOffset(
                    this.props,
                    scrollOffset,
                    this._instanceProps
                  );
                  var stopIndex = getStopIndexForStartIndex(
                    this.props,
                    startIndex,
                    scrollOffset,
                    this._instanceProps
                  ); // Overscan by one item in each direction so that tab/focus works.
                  // If there isn't at least one extra item, tab loops back around.

                  var overscanBackward =
                    !isScrolling || scrollDirection === "backward"
                      ? Math.max(1, overscanCount)
                      : 1;
                  var overscanForward =
                    !isScrolling || scrollDirection === "forward"
                      ? Math.max(1, overscanCount)
                      : 1;
                  return [
                    Math.max(0, startIndex - overscanBackward),
                    Math.max(
                      0,
                      Math.min(itemCount - 1, stopIndex + overscanForward)
                    ),
                    startIndex,
                    stopIndex,
                  ];
                };

                return List;
              })(react["PureComponent"])),
            (_class.defaultProps = {
              direction: "ltr",
              itemData: undefined,
              layout: "vertical",
              overscanCount: 2,
              useIsScrolling: false,
            }),
            _temp
          );
        } // NOTE: I considered further wrapping individual items with a pure ListItem component.
        // This would avoid ever calling the render function for the same index more than once,
        // But it would also add the overhead of a lot of components/fibers.
        // I assume people already do this (render function returning a class component),
        // So my doing it would just unnecessarily double the wrappers.

        var validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {
          var children = _ref2.children,
            direction = _ref2.direction,
            height = _ref2.height,
            layout = _ref2.layout,
            innerTagName = _ref2.innerTagName,
            outerTagName = _ref2.outerTagName,
            width = _ref2.width;
          var instance = _ref3.instance;

          if (false) {
            var isHorizontal;
          }
        };

        var DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;

        var getItemMetadata$1 = function getItemMetadata(
          props,
          index,
          instanceProps
        ) {
          var _ref = props,
            itemSize = _ref.itemSize;
          var itemMetadataMap = instanceProps.itemMetadataMap,
            lastMeasuredIndex = instanceProps.lastMeasuredIndex;

          if (index > lastMeasuredIndex) {
            var offset = 0;

            if (lastMeasuredIndex >= 0) {
              var itemMetadata = itemMetadataMap[lastMeasuredIndex];
              offset = itemMetadata.offset + itemMetadata.size;
            }

            for (var i = lastMeasuredIndex + 1; i <= index; i++) {
              var size = itemSize(i);
              itemMetadataMap[i] = {
                offset: offset,
                size: size,
              };
              offset += size;
            }

            instanceProps.lastMeasuredIndex = index;
          }

          return itemMetadataMap[index];
        };

        var findNearestItem$1 = function findNearestItem(
          props,
          instanceProps,
          offset
        ) {
          var itemMetadataMap = instanceProps.itemMetadataMap,
            lastMeasuredIndex = instanceProps.lastMeasuredIndex;
          var lastMeasuredItemOffset =
            lastMeasuredIndex > 0
              ? itemMetadataMap[lastMeasuredIndex].offset
              : 0;

          if (lastMeasuredItemOffset >= offset) {
            // If we've already measured items within this range just use a binary search as it's faster.
            return findNearestItemBinarySearch$1(
              props,
              instanceProps,
              lastMeasuredIndex,
              0,
              offset
            );
          } else {
            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.
            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.
            // The overall complexity for this approach is O(log n).
            return findNearestItemExponentialSearch$1(
              props,
              instanceProps,
              Math.max(0, lastMeasuredIndex),
              offset
            );
          }
        };

        var findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(
          props,
          instanceProps,
          high,
          low,
          offset
        ) {
          while (low <= high) {
            var middle = low + Math.floor((high - low) / 2);
            var currentOffset = getItemMetadata$1(props, middle, instanceProps)
              .offset;

            if (currentOffset === offset) {
              return middle;
            } else if (currentOffset < offset) {
              low = middle + 1;
            } else if (currentOffset > offset) {
              high = middle - 1;
            }
          }

          if (low > 0) {
            return low - 1;
          } else {
            return 0;
          }
        };

        var findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(
          props,
          instanceProps,
          index,
          offset
        ) {
          var itemCount = props.itemCount;
          var interval = 1;

          while (
            index < itemCount &&
            getItemMetadata$1(props, index, instanceProps).offset < offset
          ) {
            index += interval;
            interval *= 2;
          }

          return findNearestItemBinarySearch$1(
            props,
            instanceProps,
            Math.min(index, itemCount - 1),
            Math.floor(index / 2),
            offset
          );
        };

        var index_esm_getEstimatedTotalSize = function getEstimatedTotalSize(
          _ref2,
          _ref3
        ) {
          var itemCount = _ref2.itemCount;
          var itemMetadataMap = _ref3.itemMetadataMap,
            estimatedItemSize = _ref3.estimatedItemSize,
            lastMeasuredIndex = _ref3.lastMeasuredIndex;
          var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
          // https://github.com/bvaughn/react-window/pull/138

          if (lastMeasuredIndex >= itemCount) {
            lastMeasuredIndex = itemCount - 1;
          }

          if (lastMeasuredIndex >= 0) {
            var itemMetadata = itemMetadataMap[lastMeasuredIndex];
            totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;
          }

          var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;
          var totalSizeOfUnmeasuredItems =
            numUnmeasuredItems * estimatedItemSize;
          return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;
        };

        var VariableSizeList =
          /*#__PURE__*/
          createListComponent({
            getItemOffset: function getItemOffset(props, index, instanceProps) {
              return getItemMetadata$1(props, index, instanceProps).offset;
            },
            getItemSize: function getItemSize(props, index, instanceProps) {
              return instanceProps.itemMetadataMap[index].size;
            },
            getEstimatedTotalSize: index_esm_getEstimatedTotalSize,
            getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(
              props,
              index,
              align,
              scrollOffset,
              instanceProps
            ) {
              var direction = props.direction,
                height = props.height,
                layout = props.layout,
                width = props.width; // TODO Deprecate direction "horizontal"

              var isHorizontal =
                direction === "horizontal" || layout === "horizontal";
              var size = isHorizontal ? width : height;
              var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,
              // To ensure it reflects actual measurements instead of just estimates.

              var estimatedTotalSize = index_esm_getEstimatedTotalSize(
                props,
                instanceProps
              );
              var maxOffset = Math.max(
                0,
                Math.min(estimatedTotalSize - size, itemMetadata.offset)
              );
              var minOffset = Math.max(
                0,
                itemMetadata.offset - size + itemMetadata.size
              );

              if (align === "smart") {
                if (
                  scrollOffset >= minOffset - size &&
                  scrollOffset <= maxOffset + size
                ) {
                  align = "auto";
                } else {
                  align = "center";
                }
              }

              switch (align) {
                case "start":
                  return maxOffset;

                case "end":
                  return minOffset;

                case "center":
                  return Math.round(minOffset + (maxOffset - minOffset) / 2);

                case "auto":
                default:
                  if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
                    return scrollOffset;
                  } else if (scrollOffset < minOffset) {
                    return minOffset;
                  } else {
                    return maxOffset;
                  }
              }
            },
            getStartIndexForOffset: function getStartIndexForOffset(
              props,
              offset,
              instanceProps
            ) {
              return findNearestItem$1(props, instanceProps, offset);
            },
            getStopIndexForStartIndex: function getStopIndexForStartIndex(
              props,
              startIndex,
              scrollOffset,
              instanceProps
            ) {
              var direction = props.direction,
                height = props.height,
                itemCount = props.itemCount,
                layout = props.layout,
                width = props.width; // TODO Deprecate direction "horizontal"

              var isHorizontal =
                direction === "horizontal" || layout === "horizontal";
              var size = isHorizontal ? width : height;
              var itemMetadata = getItemMetadata$1(
                props,
                startIndex,
                instanceProps
              );
              var maxOffset = scrollOffset + size;
              var offset = itemMetadata.offset + itemMetadata.size;
              var stopIndex = startIndex;

              while (stopIndex < itemCount - 1 && offset < maxOffset) {
                stopIndex++;
                offset += getItemMetadata$1(props, stopIndex, instanceProps)
                  .size;
              }

              return stopIndex;
            },
            initInstanceProps: function initInstanceProps(props, instance) {
              var _ref4 = props,
                estimatedItemSize = _ref4.estimatedItemSize;
              var instanceProps = {
                itemMetadataMap: {},
                estimatedItemSize:
                  estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,
                lastMeasuredIndex: -1,
              };

              instance.resetAfterIndex = function (index, shouldForceUpdate) {
                if (shouldForceUpdate === void 0) {
                  shouldForceUpdate = true;
                }

                instanceProps.lastMeasuredIndex = Math.min(
                  instanceProps.lastMeasuredIndex,
                  index - 1
                ); // We could potentially optimize further by only evicting styles after this index,
                // But since styles are only cached while scrolling is in progress-
                // It seems an unnecessary optimization.
                // It's unlikely that resetAfterIndex() will be called while a user is scrolling.

                instance._getItemStyleCache(-1);

                if (shouldForceUpdate) {
                  instance.forceUpdate();
                }
              };

              return instanceProps;
            },
            shouldResetStyleCacheOnItemSizeChange: false,
            validateProps: function validateProps(_ref5) {
              var itemSize = _ref5.itemSize;

              if (false) {
              }
            },
          });

        var FixedSizeGrid =
          /*#__PURE__*/
          createGridComponent({
            getColumnOffset: function getColumnOffset(_ref, index) {
              var columnWidth = _ref.columnWidth;
              return index * columnWidth;
            },
            getColumnWidth: function getColumnWidth(_ref2, index) {
              var columnWidth = _ref2.columnWidth;
              return columnWidth;
            },
            getRowOffset: function getRowOffset(_ref3, index) {
              var rowHeight = _ref3.rowHeight;
              return index * rowHeight;
            },
            getRowHeight: function getRowHeight(_ref4, index) {
              var rowHeight = _ref4.rowHeight;
              return rowHeight;
            },
            getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {
              var rowCount = _ref5.rowCount,
                rowHeight = _ref5.rowHeight;
              return rowHeight * rowCount;
            },
            getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {
              var columnCount = _ref6.columnCount,
                columnWidth = _ref6.columnWidth;
              return columnWidth * columnCount;
            },
            getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(
              _ref7,
              columnIndex,
              align,
              scrollLeft,
              instanceProps,
              scrollbarSize
            ) {
              var columnCount = _ref7.columnCount,
                columnWidth = _ref7.columnWidth,
                width = _ref7.width;
              var lastColumnOffset = Math.max(
                0,
                columnCount * columnWidth - width
              );
              var maxOffset = Math.min(
                lastColumnOffset,
                columnIndex * columnWidth
              );
              var minOffset = Math.max(
                0,
                columnIndex * columnWidth - width + scrollbarSize + columnWidth
              );

              if (align === "smart") {
                if (
                  scrollLeft >= minOffset - width &&
                  scrollLeft <= maxOffset + width
                ) {
                  align = "auto";
                } else {
                  align = "center";
                }
              }

              switch (align) {
                case "start":
                  return maxOffset;

                case "end":
                  return minOffset;

                case "center":
                  // "Centered" offset is usually the average of the min and max.
                  // But near the edges of the list, this doesn't hold true.
                  var middleOffset = Math.round(
                    minOffset + (maxOffset - minOffset) / 2
                  );

                  if (middleOffset < Math.ceil(width / 2)) {
                    return 0; // near the beginning
                  } else if (
                    middleOffset >
                    lastColumnOffset + Math.floor(width / 2)
                  ) {
                    return lastColumnOffset; // near the end
                  } else {
                    return middleOffset;
                  }

                case "auto":
                default:
                  if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {
                    return scrollLeft;
                  } else if (minOffset > maxOffset) {
                    // Because we only take into account the scrollbar size when calculating minOffset
                    // this value can be larger than maxOffset when at the end of the list
                    return minOffset;
                  } else if (scrollLeft < minOffset) {
                    return minOffset;
                  } else {
                    return maxOffset;
                  }
              }
            },
            getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(
              _ref8,
              rowIndex,
              align,
              scrollTop,
              instanceProps,
              scrollbarSize
            ) {
              var rowHeight = _ref8.rowHeight,
                height = _ref8.height,
                rowCount = _ref8.rowCount;
              var lastRowOffset = Math.max(0, rowCount * rowHeight - height);
              var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);
              var minOffset = Math.max(
                0,
                rowIndex * rowHeight - height + scrollbarSize + rowHeight
              );

              if (align === "smart") {
                if (
                  scrollTop >= minOffset - height &&
                  scrollTop <= maxOffset + height
                ) {
                  align = "auto";
                } else {
                  align = "center";
                }
              }

              switch (align) {
                case "start":
                  return maxOffset;

                case "end":
                  return minOffset;

                case "center":
                  // "Centered" offset is usually the average of the min and max.
                  // But near the edges of the list, this doesn't hold true.
                  var middleOffset = Math.round(
                    minOffset + (maxOffset - minOffset) / 2
                  );

                  if (middleOffset < Math.ceil(height / 2)) {
                    return 0; // near the beginning
                  } else if (
                    middleOffset >
                    lastRowOffset + Math.floor(height / 2)
                  ) {
                    return lastRowOffset; // near the end
                  } else {
                    return middleOffset;
                  }

                case "auto":
                default:
                  if (scrollTop >= minOffset && scrollTop <= maxOffset) {
                    return scrollTop;
                  } else if (minOffset > maxOffset) {
                    // Because we only take into account the scrollbar size when calculating minOffset
                    // this value can be larger than maxOffset when at the end of the list
                    return minOffset;
                  } else if (scrollTop < minOffset) {
                    return minOffset;
                  } else {
                    return maxOffset;
                  }
              }
            },
            getColumnStartIndexForOffset: function getColumnStartIndexForOffset(
              _ref9,
              scrollLeft
            ) {
              var columnWidth = _ref9.columnWidth,
                columnCount = _ref9.columnCount;
              return Math.max(
                0,
                Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth))
              );
            },
            getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(
              _ref10,
              startIndex,
              scrollLeft
            ) {
              var columnWidth = _ref10.columnWidth,
                columnCount = _ref10.columnCount,
                width = _ref10.width;
              var left = startIndex * columnWidth;
              var numVisibleColumns = Math.ceil(
                (width + scrollLeft - left) / columnWidth
              );
              return Math.max(
                0,
                Math.min(
                  columnCount - 1,
                  startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive
                )
              );
            },
            getRowStartIndexForOffset: function getRowStartIndexForOffset(
              _ref11,
              scrollTop
            ) {
              var rowHeight = _ref11.rowHeight,
                rowCount = _ref11.rowCount;
              return Math.max(
                0,
                Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight))
              );
            },
            getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(
              _ref12,
              startIndex,
              scrollTop
            ) {
              var rowHeight = _ref12.rowHeight,
                rowCount = _ref12.rowCount,
                height = _ref12.height;
              var top = startIndex * rowHeight;
              var numVisibleRows = Math.ceil(
                (height + scrollTop - top) / rowHeight
              );
              return Math.max(
                0,
                Math.min(
                  rowCount - 1,
                  startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive
                )
              );
            },
            initInstanceProps: function initInstanceProps(props) {
              // Noop
            },
            shouldResetStyleCacheOnItemSizeChange: true,
            validateProps: function validateProps(_ref13) {
              var columnWidth = _ref13.columnWidth,
                rowHeight = _ref13.rowHeight;

              if (false) {
              }
            },
          });

        var FixedSizeList =
          /*#__PURE__*/
          createListComponent({
            getItemOffset: function getItemOffset(_ref, index) {
              var itemSize = _ref.itemSize;
              return index * itemSize;
            },
            getItemSize: function getItemSize(_ref2, index) {
              var itemSize = _ref2.itemSize;
              return itemSize;
            },
            getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {
              var itemCount = _ref3.itemCount,
                itemSize = _ref3.itemSize;
              return itemSize * itemCount;
            },
            getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(
              _ref4,
              index,
              align,
              scrollOffset
            ) {
              var direction = _ref4.direction,
                height = _ref4.height,
                itemCount = _ref4.itemCount,
                itemSize = _ref4.itemSize,
                layout = _ref4.layout,
                width = _ref4.width;
              // TODO Deprecate direction "horizontal"
              var isHorizontal =
                direction === "horizontal" || layout === "horizontal";
              var size = isHorizontal ? width : height;
              var lastItemOffset = Math.max(0, itemCount * itemSize - size);
              var maxOffset = Math.min(lastItemOffset, index * itemSize);
              var minOffset = Math.max(0, index * itemSize - size + itemSize);

              if (align === "smart") {
                if (
                  scrollOffset >= minOffset - size &&
                  scrollOffset <= maxOffset + size
                ) {
                  align = "auto";
                } else {
                  align = "center";
                }
              }

              switch (align) {
                case "start":
                  return maxOffset;

                case "end":
                  return minOffset;

                case "center": {
                  // "Centered" offset is usually the average of the min and max.
                  // But near the edges of the list, this doesn't hold true.
                  var middleOffset = Math.round(
                    minOffset + (maxOffset - minOffset) / 2
                  );

                  if (middleOffset < Math.ceil(size / 2)) {
                    return 0; // near the beginning
                  } else if (
                    middleOffset >
                    lastItemOffset + Math.floor(size / 2)
                  ) {
                    return lastItemOffset; // near the end
                  } else {
                    return middleOffset;
                  }
                }

                case "auto":
                default:
                  if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
                    return scrollOffset;
                  } else if (scrollOffset < minOffset) {
                    return minOffset;
                  } else {
                    return maxOffset;
                  }
              }
            },
            getStartIndexForOffset: function getStartIndexForOffset(
              _ref5,
              offset
            ) {
              var itemCount = _ref5.itemCount,
                itemSize = _ref5.itemSize;
              return Math.max(
                0,
                Math.min(itemCount - 1, Math.floor(offset / itemSize))
              );
            },
            getStopIndexForStartIndex: function getStopIndexForStartIndex(
              _ref6,
              startIndex,
              scrollOffset
            ) {
              var direction = _ref6.direction,
                height = _ref6.height,
                itemCount = _ref6.itemCount,
                itemSize = _ref6.itemSize,
                layout = _ref6.layout,
                width = _ref6.width;
              // TODO Deprecate direction "horizontal"
              var isHorizontal =
                direction === "horizontal" || layout === "horizontal";
              var offset = startIndex * itemSize;
              var size = isHorizontal ? width : height;
              var numVisibleItems = Math.ceil(
                (size + scrollOffset - offset) / itemSize
              );
              return Math.max(
                0,
                Math.min(
                  itemCount - 1,
                  startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive
                )
              );
            },
            initInstanceProps: function initInstanceProps(props) {
              // Noop
            },
            shouldResetStyleCacheOnItemSizeChange: true,
            validateProps: function validateProps(_ref7) {
              var itemSize = _ref7.itemSize;

              if (false) {
              }
            },
          });

        // Pulled from react-compat
        // https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349
        function shallowDiffers(prev, next) {
          for (var attribute in prev) {
            if (!(attribute in next)) {
              return true;
            }
          }

          for (var _attribute in next) {
            if (prev[_attribute] !== next[_attribute]) {
              return true;
            }
          }

          return false;
        }

        // It knows to compare individual style props and ignore the wrapper object.
        // See https://reactjs.org/docs/react-api.html#reactmemo

        function areEqual(prevProps, nextProps) {
          var prevStyle = prevProps.style,
            prevRest = _objectWithoutPropertiesLoose(prevProps, ["style"]);

          var nextStyle = nextProps.style,
            nextRest = _objectWithoutPropertiesLoose(nextProps, ["style"]);

          return (
            !shallowDiffers(prevStyle, nextStyle) &&
            !shallowDiffers(prevRest, nextRest)
          );
        }

        // It knows to compare individual style props and ignore the wrapper object.
        // See https://reactjs.org/docs/react-component.html#shouldcomponentupdate

        function shouldComponentUpdate(nextProps, nextState) {
          return (
            !areEqual(this.props, nextProps) ||
            shallowDiffers(this.state, nextState)
          );
        }

        //# sourceMappingURL=index.esm.js.map

        // EXTERNAL MODULE: ./node_modules/react-virtualized-auto-sizer/dist/index.esm.js
        var dist_index_esm = __webpack_require__(246);

        // EXTERNAL MODULE: ./node_modules/classnames/index.js
        var classnames = __webpack_require__(34);
        var classnames_default = /*#__PURE__*/ __webpack_require__.n(
          classnames
        );

        // CONCATENATED MODULE: ./src/components/Controls/Timeline/Frame.js

        function Frame_ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function Frame_objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              Frame_ownKeys(Object(source), true).forEach(function (key) {
                defineProperty_default()(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              Frame_ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        var Frame_Frame = function Frame(_ref) {
          var index = _ref.index,
            style = _ref.style,
            data = _ref.data;
          var frameNumber = index + 1;
          var video = data.video,
            goToTime = data.goToTime,
            frameCanvases = data.frameCanvases,
            currentFrameNumber = data.currentFrameNumber,
            selectedAnnotation = data.selectedAnnotation; // "pointer-events" might be disabled on the parent
          // in the case of a video being played, for example.
          // Therefore, we need to re-enable it here.

          var containerCustomStyles = Frame_objectSpread(
            Frame_objectSpread({}, style),
            {},
            {
              pointerEvents: "auto",
            }
          );

          var isFrameSelected = false;
          var frameContainerStyle = {};

          if (selectedAnnotation) {
            var _selectedAnnotation$S, _selectedAnnotation$S2;

            var borderColor =
              ((_selectedAnnotation$S = selectedAnnotation.StrokeColor) ===
                null || _selectedAnnotation$S === void 0
                ? void 0
                : (_selectedAnnotation$S2 =
                    _selectedAnnotation$S.toHexString) === null ||
                  _selectedAnnotation$S2 === void 0
                ? void 0
                : _selectedAnnotation$S2.call(_selectedAnnotation$S)) ||
              "#ADB5BD";
            var startTime = selectedAnnotation.startTime,
              endTime = selectedAnnotation.endTime;
            var startFrameNumber = video.getFrameFromTime(startTime);
            var endFrameNumber = video.getFrameFromTime(endTime);
            isFrameSelected =
              frameNumber >= startFrameNumber && frameNumber <= endFrameNumber;

            if (isFrameSelected) {
              if (endFrameNumber === startFrameNumber) {
                frameContainerStyle = {
                  borderRadius: "4px",
                  border: "2px solid ".concat(borderColor),
                };
              } else if (frameNumber === startFrameNumber) {
                frameContainerStyle = Frame_objectSpread(
                  Frame_objectSpread(
                    {
                      borderTopLeftRadius: "4px",
                      borderBottomLeftRadius: "4px",
                      borderTop: "2px solid ".concat(borderColor),
                      borderLeft: "2px solid ".concat(borderColor),
                      borderBottom: "2px solid ".concat(borderColor),
                    },
                    frameNumber !== 1 && {
                      marginLeft: "-2px",
                    }
                  ),
                  {},
                  {
                    zIndex: 9999,
                  }
                );
              } else if (frameNumber === endFrameNumber) {
                frameContainerStyle = Frame_objectSpread(
                  Frame_objectSpread(
                    {
                      borderTopRightRadius: "4px",
                      borderBottomRightRadius: "4px",
                      borderTop: "2px solid ".concat(borderColor),
                      borderRight: "2px solid ".concat(borderColor),
                      borderBottom: "2px solid ".concat(borderColor),
                    },
                    frameNumber !== video.getTotalFrames() && {
                      marginRight: "-2px",
                    }
                  ),
                  {},
                  {
                    zIndex: 9999,
                  }
                );
              } else {
                frameContainerStyle = {
                  borderTop: "2px solid ".concat(borderColor),
                  borderBottom: "2px solid ".concat(borderColor),
                };
              }
            }
          }

          var innerFrameRef = Object(react["useRef"])(null); // TODO: This looks buggy. Why is frameCanvases passed into the component. Just pass the canvas.
          // frameCanvas could change without frameCanvases changing.

          Object(react["useEffect"])(
            function () {
              if (
                innerFrameRef !== null &&
                innerFrameRef !== void 0 &&
                innerFrameRef.current
              ) {
                var frameCanvas = frameCanvases[frameNumber];

                if (frameCanvas) {
                  innerFrameRef.current.lastChild &&
                    innerFrameRef.current.removeChild(
                      innerFrameRef.current.lastChild
                    );
                  innerFrameRef.current.appendChild(frameCanvas);
                }
              }
            },
            [innerFrameRef, frameCanvases, frameNumber]
          );
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              style: containerCustomStyles,
              className: classnames_default()({
                "outer-frame-container": true,
              }),
            },
            /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: classnames_default()({
                  "frame-container": true,
                  darken: selectedAnnotation && !isFrameSelected,
                }),
                style: frameContainerStyle,
              },
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: classnames_default()({
                    frame: true,
                    "is-selected": isFrameSelected,
                    "is-current-frame":
                      !isFrameSelected && frameNumber === currentFrameNumber,
                  }),
                  onClick: function onClick() {
                    goToTime(video.getTimeFromFrame(frameNumber));
                  },
                },
                /*#__PURE__*/ react_default.a.createElement("div", {
                  ref: innerFrameRef,
                  className: "innerFrame",
                  framenumber: frameNumber,
                })
              )
            )
          );
        };

        /* harmony default export */ var Timeline_Frame = Frame_Frame;
        // CONCATENATED MODULE: ./src/components/Controls/Timeline/TimelineReel.js

        var TimelineReel_TimelineReel = /*#__PURE__*/ Object(
          react["forwardRef"]
        )(
          // https://reactjs.org/docs/forwarding-refs.html#displaying-a-custom-name-in-devtools
          function TimelineReel(_ref, ref) {
            var video = _ref.video,
              goToTime = _ref.goToTime,
              frameCanvases = _ref.frameCanvases,
              currentFrameNumber = _ref.currentFrameNumber,
              selectedAnnotation = _ref.selectedAnnotation,
              isPlaying = _ref.isPlaying;
            return /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: "react-frames-container",
              },
              /*#__PURE__*/ react_default.a.createElement(
                dist_index_esm["a" /* default */],
                null,
                function (_ref2) {
                  var height = _ref2.height,
                    width = _ref2.width;
                  return /*#__PURE__*/ react_default.a.createElement(
                    FixedSizeList,
                    {
                      style: isPlaying && {
                        pointerEvents: "none",
                      },
                      outerRef: ref,
                      itemCount: video.getTotalFrames(),
                      itemSize: 116,
                      layout: "horizontal",
                      height: height,
                      width: width,
                      itemData: {
                        video: video,
                        goToTime: goToTime,
                        frameCanvases: frameCanvases,
                        currentFrameNumber: currentFrameNumber,
                        selectedAnnotation: selectedAnnotation,
                      },
                    },
                    Timeline_Frame
                  );
                }
              )
            );
          }
        );
        /* harmony default export */ var Timeline_TimelineReel = TimelineReel_TimelineReel;
        // CONCATENATED MODULE: ./src/hooks/useStateRef.js

        // https://stackoverflow.com/questions/53845595/wrong-react-hooks-behaviour-with-event-listener

        var useStateRef_useStateRef = function useStateRef(initialValue) {
          var _useState = Object(react["useState"])(initialValue),
            _useState2 = slicedToArray_default()(_useState, 2),
            value = _useState2[0],
            setValue = _useState2[1];

          var ref = Object(react["useRef"])(value);
          Object(react["useEffect"])(
            function () {
              ref.current = value;
            },
            [value]
          );
          return [value, setValue, ref];
        };

        /* harmony default export */ var hooks_useStateRef = useStateRef_useStateRef;
        // CONCATENATED MODULE: ./src/components/Controls/MarkerBar/ResizeHandle.js

        var ResizeHandle_ResizeHandle = function ResizeHandle(_ref) {
          var instance = _ref.instance,
            onResize = _ref.onResize,
            direction = _ref.direction,
            onFinishedResizing = _ref.onFinishedResizing;

          var _useStateRef = hooks_useStateRef(false),
            _useStateRef2 = slicedToArray_default()(_useStateRef, 3),
            setIsMouseDown = _useStateRef2[1],
            isMouseDownRef = _useStateRef2[2];

          var resizeHandleRef = Object(react["useRef"])();

          var onMove = function onMove(e) {
            if (isMouseDownRef.current) {
              if (direction === "right") {
                onResize(
                  e.pageX - resizeHandleRef.current.getBoundingClientRect().left
                );
              } else if (direction === "left") {
                onResize(
                  e.pageX -
                    resizeHandleRef.current.getBoundingClientRect().right
                );
              }
            }
          };

          var onMouseDown = function onMouseDown() {
            setIsMouseDown(true);
          };

          var onMouseUp = function onMouseUp() {
            onFinishedResizing();
            setIsMouseDown(false);
          };

          Object(react["useEffect"])(function () {
            instance.iframeWindow.addEventListener("mousemove", onMove);
            instance.iframeWindow.addEventListener("mouseup", onMouseUp);
            return function () {
              instance.iframeWindow.removeEventListener("mousemove", onMove);
              instance.iframeWindow.removeEventListener("mouseup", onMouseUp);
            };
          }, []);
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: classnames_default()({
                "right-resize-container": direction === "right",
                "left-resize-container": direction === "left",
              }),
              ref: resizeHandleRef,
              onMouseDown: onMouseDown,
            },
            /*#__PURE__*/ react_default.a.createElement("div", {
              className: classnames_default()({
                "right-resize": direction === "right",
                "left-resize": direction === "left",
                selected: isMouseDownRef.current,
              }),
            })
          );
        };

        /* harmony default export */ var MarkerBar_ResizeHandle = ResizeHandle_ResizeHandle;
        // CONCATENATED MODULE: ./src/components/Controls/MarkerBar/Marker.js

        function Marker_ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function Marker_objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              Marker_ownKeys(Object(source), true).forEach(function (key) {
                defineProperty_default()(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              Marker_ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        var Marker_Marker = function Marker(_ref) {
          var _annotation$StrokeCol, _annotation$StrokeCol2;

          var document = _ref.document,
            instance = _ref.instance,
            annotation = _ref.annotation,
            isSelected = _ref.isSelected,
            onClick = _ref.onClick,
            video = _ref.video,
            progressBarWidth = _ref.progressBarWidth,
            goToTime = _ref.goToTime,
            onClickOutside = _ref.onClickOutside;
          var percent = annotation.startTime / video.getDuration();
          var rangePercent =
            (annotation.endTime - annotation.startTime) / video.getDuration();
          var style = {
            left: "calc(".concat(percent * 100, "% - 6px)"),
          };
          var width = progressBarWidth * rangePercent;
          var rangeStyle = {
            width: "calc(".concat(width, "px + 6px)"),
          };
          var markerAndResizeContainerRef = Object(react["useRef"])();
          var markerContainerRef = Object(react["useRef"])();
          var docViewer = instance.docViewer;
          var annotationManager = docViewer.getAnnotationManager();
          hooks_useOnClickOutside(
            document,
            markerAndResizeContainerRef,
            function (e) {
              onClickOutside(e);
            }
          );

          var _useStateRef = hooks_useStateRef(null),
            _useStateRef2 = slicedToArray_default()(_useStateRef, 3),
            setMouseDownPosition = _useStateRef2[1],
            mouseDownPositionRef = _useStateRef2[2];

          var onMove = function onMove(e) {
            if (mouseDownPositionRef.current !== null) {
              var _markerContainerRef$c = markerContainerRef.current.getBoundingClientRect(),
                left = _markerContainerRef$c.left;

              var offset = e.pageX - (mouseDownPositionRef.current + left);
              var percentChange = offset / progressBarWidth;
              var timeMoved = percentChange * video.getDuration();
              var diff = annotation.endTime - annotation.startTime;
              annotation.startTime = Math.min(
                Math.max(0, annotation.startTime + timeMoved),
                video.getDuration() - diff
              );
              annotation.endTime = Math.min(
                video.getDuration(),
                annotation.startTime + diff
              );
              goToTime(annotation.startTime); // This is to trigger deserialization
              // eslint-disable-next-line

              annotation.Id = annotation.Id;
              annotationManager.trigger("annotationChanged", [
                [annotation],
                "modify",
                {},
              ]);
            }
          };

          var onMouseDown = function onMouseDown(e) {
            var _markerContainerRef$c2 =
                markerContainerRef === null || markerContainerRef === void 0
                  ? void 0
                  : markerContainerRef.current.getBoundingClientRect(),
              left = _markerContainerRef$c2.left;

            setMouseDownPosition(e.pageX - left);
          };

          var onMouseUp = function onMouseUp() {
            setMouseDownPosition(null);
          };

          Object(react["useEffect"])(
            function () {
              var keydown = function keydown(e) {
                if (isSelected) {
                  if (e.which === 37 || e.which === 39) {
                    e.preventDefault();
                    e.stopPropagation();
                    annotation.endTime = Math.max(
                      Math.min(
                        video.getDuration(),
                        e.which === 37
                          ? annotation.endTime - 1
                          : annotation.endTime + 1
                      ),
                      annotation.startTime
                    );
                    goToTime(annotation.endTime); // This is to trigger deserialization
                    // eslint-disable-next-line

                    annotation.Id = annotation.Id;
                    annotationManager.trigger("annotationChanged", [
                      [annotation],
                      "modify",
                      {},
                    ]);
                  }
                }
              }; // add event listener in capture phase
              // intercepting keydown event before playback buttons to prevent conflict

              document.addEventListener("keydown", keydown, true);
              return function () {
                document.removeEventListener("keydown", keydown, true);
              };
            },
            [isSelected, annotation]
          );
          Object(react["useEffect"])(function () {
            instance.iframeWindow.addEventListener("mousemove", onMove);
            instance.iframeWindow.addEventListener("mouseup", onMouseUp);
            return function () {
              instance.iframeWindow.removeEventListener("mousemove", onMove);
              instance.iframeWindow.removeEventListener("mouseup", onMouseUp);
            };
          }, []);
          var markerColor =
            ((_annotation$StrokeCol = annotation.StrokeColor) === null ||
            _annotation$StrokeCol === void 0
              ? void 0
              : (_annotation$StrokeCol2 = _annotation$StrokeCol.toHexString) ===
                  null || _annotation$StrokeCol2 === void 0
              ? void 0
              : _annotation$StrokeCol2.call(_annotation$StrokeCol)) ||
            "#ADB5BD";
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: classnames_default()({
                "marker-and-resize-container": true,
                selected: isSelected,
              }),
              ref: markerAndResizeContainerRef,
              style: style,
            },
            isSelected &&
              /*#__PURE__*/ react_default.a.createElement(
                MarkerBar_ResizeHandle,
                {
                  onResize: function onResize(offset) {
                    var percentChange = offset / progressBarWidth;
                    var timeMoved = percentChange * video.getDuration();
                    var newStartTime = Math.min(
                      Math.max(0, annotation.startTime + timeMoved),
                      annotation.endTime
                    );
                    annotation.startTime = newStartTime;
                    goToTime(newStartTime); // This is to trigger deserialization
                    // eslint-disable-next-line

                    annotation.Id = annotation.Id;
                    annotationManager.trigger("annotationChanged", [
                      [annotation],
                      "modify",
                      {},
                    ]);
                  },
                  onFinishedResizing: function onFinishedResizing() {
                    // annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);
                  },
                  instance: instance,
                  direction: "left",
                }
              ),
            /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: classnames_default()({
                  "marker-container": true,
                  selected: isSelected,
                  grabbing: mouseDownPositionRef.current !== null,
                }),
                onClick: onClick,
                onMouseDown: onMouseDown,
                ref: markerContainerRef,
              },
              /*#__PURE__*/ react_default.a.createElement("div", {
                style: {
                  background: markerColor,
                },
                className: classnames_default()({
                  marker: true,
                }),
              }),
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: classnames_default()({
                    "marker-range": true,
                  }),
                  style: Marker_objectSpread(
                    {
                      background: markerColor,
                    },
                    rangeStyle
                  ),
                },
                isSelected &&
                  /*#__PURE__*/ react_default.a.createElement(
                    react_default.a.Fragment,
                    null,
                    /*#__PURE__*/ react_default.a.createElement("div", {
                      className: "marker-line",
                    }),
                    /*#__PURE__*/ react_default.a.createElement("div", {
                      className: "marker-line-2",
                    })
                  )
              )
            ),
            isSelected &&
              /*#__PURE__*/ react_default.a.createElement(
                MarkerBar_ResizeHandle,
                {
                  onResize: function onResize(offset) {
                    var percentChange = offset / progressBarWidth;
                    var timeMoved = percentChange * video.getDuration();
                    var newEndTime = Math.max(
                      Math.min(
                        video.getDuration(),
                        annotation.endTime + timeMoved
                      ),
                      annotation.startTime
                    );
                    annotation.endTime = newEndTime;
                    goToTime(newEndTime); // This is to trigger deserialization
                    // eslint-disable-next-line

                    annotation.Id = annotation.Id;
                    annotationManager.trigger("annotationChanged", [
                      [annotation],
                      "modify",
                      {},
                    ]);
                  },
                  onFinishedResizing: function onFinishedResizing() {
                    // annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);
                  },
                  instance: instance,
                  direction: "right",
                }
              )
          );
        };

        /* harmony default export */ var MarkerBar_Marker = Marker_Marker;
        // CONCATENATED MODULE: ./src/components/Controls/MarkerBar/Markers.js

        var Markers_Markers = function Markers(_ref) {
          var document = _ref.document,
            instance = _ref.instance,
            goToTime = _ref.goToTime,
            progressBarWidth = _ref.progressBarWidth,
            selectedAnnotation = _ref.selectedAnnotation,
            setSelectedAnnotation = _ref.setSelectedAnnotation,
            forceUpdate = _ref.forceUpdate,
            setIsPlaying = _ref.setIsPlaying;
          var docViewer = instance.docViewer;
          var annotationManager = docViewer.getAnnotationManager();
          var doc = docViewer.getDocument();
          var video = doc.getVideo();

          var _useState = Object(react["useState"])(video.getAllAnnotations()),
            _useState2 = slicedToArray_default()(_useState, 2),
            annotations = _useState2[0],
            setAnnotations = _useState2[1];

          Object(react["useEffect"])(function () {
            var onAnnotationChanged = function onAnnotationChanged() {
              var videoElement = video.getElement();
              videoElement.pause();
              setIsPlaying(false);
              setAnnotations(video.getAllAnnotations());
              forceUpdate();
            };

            annotationManager.on("annotationChanged", onAnnotationChanged);
            return function () {
              annotationManager.off("annotationChanged", onAnnotationChanged);
            };
          }, []);
          Object(react["useEffect"])(
            function () {
              var onAnnotationSelected = function onAnnotationSelected(
                annotList,
                action
              ) {
                if (action === "selected" && annotList.length === 1) {
                  setSelectedAnnotation(annotList[0]);
                } else if (action === "deselected") {
                  // all annotations have been deselected if annotList is null.
                  // Yes, I know, that is weird.
                  if (annotList === null) {
                    setSelectedAnnotation(null);
                  } else if (annotList.includes(selectedAnnotation)) {
                    setSelectedAnnotation(null);
                  }
                }
              };

              annotationManager.on("annotationSelected", onAnnotationSelected);
              return function () {
                annotationManager.off(
                  "annotationSelected",
                  onAnnotationSelected
                );
              };
            },
            [selectedAnnotation]
          );
          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: "markers-container",
            },
            /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: "markers",
              },
              /*#__PURE__*/ react_default.a.createElement("div", {
                className: "marker-bar",
              }),
              annotations.map(function (annotation) {
                if (annotation.startTime <= video.getDuration()) {
                  var annotIsSelected =
                    (selectedAnnotation === null ||
                    selectedAnnotation === void 0
                      ? void 0
                      : selectedAnnotation.Id) === annotation.Id;
                  return /*#__PURE__*/ react_default.a.createElement(
                    MarkerBar_Marker,
                    {
                      document: document,
                      key: annotation.Id,
                      progressBarWidth: progressBarWidth,
                      instance: instance,
                      annotation: annotation,
                      isSelected: annotIsSelected,
                      onClick: function onClick() {
                        goToTime(annotation.startTime);
                        annotationManager.deselectAllAnnotations();
                        annotationManager.selectAnnotation(annotation);
                      },
                      goToTime: goToTime,
                      video: video,
                      onClickOutside: function onClickOutside(e) {
                        if (annotIsSelected) {
                          var progressBar = document.getElementById("progress");
                          var clickedInProgressBar =
                            progressBar === null || progressBar === void 0
                              ? void 0
                              : progressBar.contains(e.target);
                          var videoControls = document.querySelector(
                            ".video-controls"
                          );
                          var clickedOnVideoControls =
                            videoControls === null || videoControls === void 0
                              ? void 0
                              : videoControls.contains(e.target);

                          if (!clickedInProgressBar && clickedOnVideoControls) {
                            setSelectedAnnotation(null);
                            annotationManager.deselectAllAnnotations();
                          }
                        }
                      },
                    }
                  );
                }

                return null;
              })
            )
          );
        };

        /* harmony default export */ var MarkerBar_Markers = Markers_Markers;
        // CONCATENATED MODULE: ./src/hooks/useComponentWillMount.js
        // https://stackoverflow.com/questions/53464595/how-to-use-componentwillmount-in-react-hooks

        var useComponentWillMount_useComponentWillMount = function useComponentWillMount(
          func
        ) {
          var willMount = Object(react["useRef"])(true);

          if (willMount.current) {
            func();
          }

          willMount.current = false;
        };

        /* harmony default export */ var hooks_useComponentWillMount = useComponentWillMount_useComponentWillMount;
        // EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.index-of.js
        var es_array_index_of = __webpack_require__(202);

        // CONCATENATED MODULE: ./src/utils/isChrome.js

        var isChrome = function isChrome() {
          var isChromium = window.chrome;
          var winNav = window.navigator;
          var vendorName = winNav.vendor;
          var isOpera = typeof window.opr !== "undefined";
          var isIEedge = winNav.userAgent.indexOf("Edge") > -1;
          return (
            isChromium !== null &&
            typeof isChromium !== "undefined" &&
            vendorName === "Google Inc." &&
            isOpera === false &&
            isIEedge === false
          );
        };

        /* harmony default export */ var utils_isChrome = isChrome;
        // CONCATENATED MODULE: ./src/components/Controls/styles.scss
        // extracted by mini-css-extract-plugin

        // EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/components/Controls/styles.scss
        var Controls_styles = __webpack_require__(247);
        var styles_default = /*#__PURE__*/ __webpack_require__.n(
          Controls_styles
        );

        // CONCATENATED MODULE: ./src/components/Controls/index.js

        function Controls_ownKeys(object, enumerableOnly) {
          var keys = Object.keys(object);
          if (Object.getOwnPropertySymbols) {
            var symbols = Object.getOwnPropertySymbols(object);
            if (enumerableOnly)
              symbols = symbols.filter(function (sym) {
                return Object.getOwnPropertyDescriptor(object, sym).enumerable;
              });
            keys.push.apply(keys, symbols);
          }
          return keys;
        }

        function Controls_objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            if (i % 2) {
              Controls_ownKeys(Object(source), true).forEach(function (key) {
                defineProperty_default()(target, key, source[key]);
              });
            } else if (Object.getOwnPropertyDescriptors) {
              Object.defineProperties(
                target,
                Object.getOwnPropertyDescriptors(source)
              );
            } else {
              Controls_ownKeys(Object(source)).forEach(function (key) {
                Object.defineProperty(
                  target,
                  key,
                  Object.getOwnPropertyDescriptor(source, key)
                );
              });
            }
          }
          return target;
        }

        // Components

        // Hooks

        // Utils

        // CSS

        // https://stackoverflow.com/questions/59086868/compiling-sass-file-into-css-string-in-javascript-with-loader

        var Controls_isIE11 = window.document.documentMode;
        var Controls_document = null;

        var Controls_Controls = function Controls(_ref) {
          var instance = _ref.instance;
          var marginRight = 12;
          var widthFrameContainer = 104; // const timelineHeight = 102;

          var updateVisibleFrames = /*#__PURE__*/ (function () {
            var _ref2 = asyncToGenerator_default()(
              /*#__PURE__*/ regenerator_default.a.mark(function _callee() {
                var _framesListRef$curren,
                  timelineX,
                  timelineWidth,
                  innerFrames,
                  frameNumbers,
                  extractedFrames;

                return regenerator_default.a.wrap(function _callee$(_context) {
                  while (1) {
                    switch ((_context.prev = _context.next)) {
                      case 0:
                        if (utils_isChrome()) {
                          _context.next = 2;
                          break;
                        }

                        return _context.abrupt("return");

                      case 2:
                        (_framesListRef$curren = framesListRef.current.getBoundingClientRect()),
                          (timelineX = _framesListRef$curren.x),
                          (timelineWidth = _framesListRef$curren.width);
                        innerFrames = Array.from(
                          framesListRef.current.getElementsByClassName(
                            "innerFrame"
                          )
                        ).filter(function (innerFrame) {
                          var _innerFrame$getBoundi = innerFrame.getBoundingClientRect(),
                            frameX = _innerFrame$getBoundi.x,
                            frameWidth = _innerFrame$getBoundi.width;

                          var isVisible =
                            frameX + frameWidth > timelineX &&
                            frameX < timelineX + timelineWidth;
                          return innerFrame.children.length === 0 && isVisible;
                        });
                        frameNumbers = innerFrames
                          .map(function (innerFrame) {
                            return parseInt(
                              innerFrame.attributes.frameNumber.nodeValue
                            );
                          })
                          .filter(function (frameNumber) {
                            return !frameCanvases[frameNumber];
                          });
                        _context.next = 7;
                        return video.extractFrames(frameNumbers);

                      case 7:
                        extractedFrames = _context.sent;
                        setFrameCanvases(
                          Controls_objectSpread(
                            Controls_objectSpread({}, frameCanvases),
                            extractedFrames
                          )
                        );

                      case 9:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              })
            );

            return function updateVisibleFrames() {
              return _ref2.apply(this, arguments);
            };
          })();

          var debouncedUpdateVisibleFrames = debounce_default()(
            updateVisibleFrames,
            250
          );
          Controls_document = instance.iframeWindow.document;
          hooks_useComponentWillMount(function () {
            var style = Controls_document.createElement("style");
            style.innerHTML = styles_default.a.toString();
            Controls_document.head.appendChild(style);
          });
          var docViewer = instance.docViewer;
          var annotationManager = docViewer.getAnnotationManager();
          var doc = docViewer.getDocument();
          var video = doc.getVideo();
          var timeSortStrategy = {
            name: "Timecode",
            getSortedNotes: function getSortedNotes(notes) {
              var sortByCreatedDate = function sortByCreatedDate(a, b) {
                var createdTimeA = Date.parse(a.DateCreated);
                var createdTimeB = Date.parse(b.DateCreated);
                if (createdTimeA < createdTimeB) return 1;
                if (createdTimeA > createdTimeB) return -1;
                if (createdTimeA === createdTimeB) return 0;
              };

              return notes.sort(function (a, b) {
                if (a.startTime < b.startTime) return 1;
                if (a.startTime > b.startTime) return -1;
                if (a.startTime === b.startTime) return sortByCreatedDate(a, b);
              });
            },
            shouldRenderSeparator: function shouldRenderSeparator(
              prevNote,
              currNote
            ) {
              return (
                prevNote.startTime !== currNote.startTime ||
                prevNote.endTime !== currNote.endTime
              );
            },
            getSeparatorContent: function getSeparatorContent(
              prevNote,
              currNote
            ) {
              if (
                currNote.endTime >= 0 &&
                currNote.startTime !== currNote.endTime
              ) {
                return ""
                  .concat(video.getFormattedTime(currNote.startTime), " - ")
                  .concat(video.getFormattedTime(currNote.endTime));
              }

              return "".concat(video.getFormattedTime(currNote.startTime));
            },
          };
          instance.addSortStrategy(timeSortStrategy);

          var _useState = Object(react["useState"])(false),
            _useState2 = slicedToArray_default()(_useState, 2),
            isPlaying = _useState2[0],
            setIsPlaying = _useState2[1];

          var _useState3 = Object(react["useState"])(0),
            _useState4 = slicedToArray_default()(_useState3, 2),
            currentTime = _useState4[0],
            setCurrentTime = _useState4[1];

          var _useState5 = Object(react["useState"])(1),
            _useState6 = slicedToArray_default()(_useState5, 2),
            currentFrameNumber = _useState6[0],
            setCurrentFrameNumber = _useState6[1];

          var _useState7 = Object(react["useState"])(video.getDuration()),
            _useState8 = slicedToArray_default()(_useState7, 2),
            videoDuration = _useState8[0],
            setVideoDuration = _useState8[1];

          var _useState9 = Object(react["useState"])(false),
            _useState10 = slicedToArray_default()(_useState9, 2),
            isVideoReady = _useState10[0],
            setIsVideoReady = _useState10[1];

          var _useState11 = Object(react["useState"])(0),
            _useState12 = slicedToArray_default()(_useState11, 2),
            tooltipTime = _useState12[0],
            setTooltipTime = _useState12[1];

          var _useState13 = Object(react["useState"])(null),
            _useState14 = slicedToArray_default()(_useState13, 2),
            selectedAnnotation = _useState14[0],
            setSelectedAnnotation = _useState14[1];

          var _useState15 = Object(react["useState"])(0),
            _useState16 = slicedToArray_default()(_useState15, 2),
            progressBarWidth = _useState16[0],
            setProgressBarWidth = _useState16[1];

          var _useState17 = Object(react["useState"])("dark"),
            _useState18 = slicedToArray_default()(_useState17, 2),
            theme = _useState18[0],
            setTheme = _useState18[1];

          var _useState19 = Object(react["useState"])({}),
            _useState20 = slicedToArray_default()(_useState19, 2),
            frameCanvases = _useState20[0],
            setFrameCanvases = _useState20[1];

          var _useReducer = Object(react["useReducer"])(function (x) {
              return x + 1;
            }, 0),
            _useReducer2 = slicedToArray_default()(_useReducer, 2),
            shouldUpdate = _useReducer2[0],
            forceUpdate = _useReducer2[1];

          var progressRef = Object(react["useRef"])(null);
          var currentTimeTooltip = Object(react["useRef"])(null);
          var framesListRef = Object(react["useRef"])(null);
          hooks_useWindowResizeCallback(debouncedUpdateVisibleFrames);
          Object(react["useEffect"])(function () {
            instance.iframeWindow.addEventListener(
              "themeChanged",
              function (e) {
                var theme = e.detail;
                setTheme(theme);
              }
            );
            instance.setTheme("dark");
            return function () {
              instance.iframeWindow.removeEventListener("themeChanged");
            };
          }, []);
          Object(react["useEffect"])(
            function () {
              if (framesListRef.current) {
                var refCurrent = framesListRef.current;
                refCurrent.addEventListener(
                  "scroll",
                  debouncedUpdateVisibleFrames
                );
                return function () {
                  refCurrent.removeEventListener(
                    "scroll",
                    debouncedUpdateVisibleFrames
                  );
                };
              }
            },
            [framesListRef.current, frameCanvases]
          );
          Object(react["useEffect"])(function () {
            instance.setFitMode(instance.FitMode.FitPage);
            instance.setCustomNoteSelectionFunction(function (annotation) {
              if (
                !isNaN(
                  annotation === null || annotation === void 0
                    ? void 0
                    : annotation.startTime
                )
              ) {
                goToTime(annotation.startTime);
              }
            });
            var intervalID = window.setInterval(function () {
              if (video.getReadyState() > 0) {
                setVideoDuration(video.getDuration());
                setIsVideoReady(true);
                debouncedUpdateVisibleFrames(); // Updates notes panel with full video duration

                annotationManager.trigger("annotationChanged", [
                  [],
                  "modify",
                  {},
                ]);
                clearInterval(intervalID);
              }
            }, 200);
            var videoElement = video.getElement();
            videoElement.addEventListener(
              "timeupdate",
              /*#__PURE__*/ asyncToGenerator_default()(
                /*#__PURE__*/ regenerator_default.a.mark(function _callee2() {
                  var currentFrameNumber;
                  return regenerator_default.a.wrap(function _callee2$(
                    _context2
                  ) {
                    while (1) {
                      switch ((_context2.prev = _context2.next)) {
                        case 0:
                          video.updateAnnotationsToTime(
                            videoElement.currentTime
                          );
                          setCurrentTime(videoElement.currentTime);
                          currentFrameNumber = video.getFrameFromTime(
                            videoElement.currentTime
                          );
                          setCurrentFrameNumber(currentFrameNumber);
                          scrollToFrame(currentFrameNumber);

                        case 5:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  },
                  _callee2);
                })
              )
            );
          }, []);
          /**
           * Side-effect function that handles the tooltip for a user hovering over the
           * video timeline, represented by a `progress` element
           *
           * @param {SyntheticEvent} event The event passed as a parameter from
           * onMouseMove/onMouseOut
           * @param {boolean} hide Determines if the tooltip will be hidden or not,
           * allowing onMouseMove and onMouseOut to trigger the appropriate logic for
           * their respective events
           */

          var toggleTimeTooltip = function toggleTimeTooltip(event) {
            var hide =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : false;
            currentTimeTooltip.current.style.visibility = hide
              ? "hidden"
              : "visible";

            if (hide) {
              return null;
            }

            if (
              progressRef !== null &&
              progressRef !== void 0 &&
              progressRef.current
            ) {
              var _progressRef$current$ = progressRef.current.getBoundingClientRect(),
                frameLeft = _progressRef$current$.left,
                width = _progressRef$current$.width;

              var pageX = event.pageX;
              currentTimeTooltip.current.style.left = "".concat(
                pageX - frameLeft,
                "px"
              );
              /**
               * For calculating the percentage of the bar that is being clicked, an
               * offset of units (x from `getBoundingClientRect`) is required to properly
               * align the position of the mouse cursor, and where the position of the
               * progress bar will end up upon an onClick event
               */

              var percentage = (pageX - frameLeft) / width;
              var newTime = percentage * video.getDuration();
              setTooltipTime(newTime);
            }
          };

          var scrollToFrame = function scrollToFrame(frameNumber) {
            if (
              framesListRef !== null &&
              framesListRef !== void 0 &&
              framesListRef.current
            ) {
              var rightmostPosition =
                (frameNumber - 1) * (marginRight + widthFrameContainer);
              var scrollLeft =
                rightmostPosition -
                framesListRef.current.clientWidth / 2 +
                widthFrameContainer / 2;

              if (framesListRef.current.scroll) {
                if (
                  Math.abs(framesListRef.current.scrollLeft - scrollLeft) <
                    800 &&
                  framesListRef.current.scroll
                ) {
                  framesListRef.current.scroll({
                    left: scrollLeft,
                    behavior: "smooth",
                  });
                } else {
                  framesListRef.current.scrollLeft = scrollLeft;
                }
              } else {
                framesListRef.current.scrollLeft = scrollLeft;
              }
            }
          };
          /**
           * Progresses the video to the clicked portion of the `progress` timeline bar,
           * updating the progress bar and time state value that is displayed in the
           * video player
           *
           * @param {Number} time The unformatted time to jump the video to
           */

          var goToTime = function goToTime(time) {
            video.getElement().currentTime = time; // This is needed so that the progress bar and other things updates immediately

            setCurrentTime(time);
            var newFrameNumber = video.getFrameFromTime(time);
            setCurrentFrameNumber(newFrameNumber);
            video.updateAnnotationsToTime(time);
            scrollToFrame(newFrameNumber);
          };

          return /*#__PURE__*/ react_default.a.createElement(
            "div",
            {
              className: "video-controls ".concat(theme, "-mode"),
            },
            /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: "buttons-container",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: "video-buttons",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  Buttons_VolumeButton,
                  {
                    document: Controls_document,
                    getElementVolume: function getElementVolume() {
                      return video.getElement().volume;
                    },
                    setElementVolume: function setElementVolume(val) {
                      return (video.getElement().volume = val);
                    },
                    getIsElementMuted: function getIsElementMuted() {
                      return video.getElement().muted;
                    },
                    toggleElementMute: function toggleElementMute(muted) {
                      return (video.getElement().muted = !muted);
                    },
                  }
                ),
                /*#__PURE__*/ react_default.a.createElement(
                  Buttons_LoopButton,
                  {
                    video: video,
                  }
                ),
                /*#__PURE__*/ react_default.a.createElement(
                  Buttons_PlaybackSpeedButton,
                  {
                    document: Controls_document,
                    video: video,
                  }
                ),
                !Controls_isIE11 &&
                  /*#__PURE__*/ react_default.a.createElement(
                    Buttons_GuidesButton,
                    {
                      instance: instance,
                      document: Controls_document,
                    }
                  ),
                !utils_isSafari &&
                  !Controls_isIE11 &&
                  /*#__PURE__*/ react_default.a.createElement(
                    Buttons_SubtitleButton,
                    {
                      video: video,
                    }
                  )
              ),
              /*#__PURE__*/ react_default.a.createElement(
                Buttons_PlaybackButtons,
                {
                  document: Controls_document,
                  video: video,
                  goToTime: goToTime,
                  isPlaying: isPlaying,
                  setIsPlaying: setIsPlaying,
                }
              ),
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: "video-buttons",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  "span",
                  {
                    className: "formatted-timeframe mr-sm",
                  },
                  video.getFormattedCurrentTime(currentTime)
                )
              )
            ),
            /*#__PURE__*/ react_default.a.createElement(
              "div",
              {
                className: "timeline-container",
              },
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: "timeline",
                },
                /*#__PURE__*/ react_default.a.createElement(
                  "div",
                  {
                    className: "progress-container",
                  },
                  /*#__PURE__*/ react_default.a.createElement(
                    "div",
                    {
                      className: "progress-container-inner",
                    },
                    /*#__PURE__*/ react_default.a.createElement(
                      "div",
                      {
                        className: "tooltip",
                        ref: currentTimeTooltip,
                      },
                      video.getFormattedTime(tooltipTime)
                    ),
                    /*#__PURE__*/ react_default.a.createElement(
                      index_esm,
                      {
                        bounds: true,
                        innerRef: progressRef,
                        onResize: function onResize(_ref4) {
                          var bounds = _ref4.bounds;
                          setProgressBarWidth(bounds.width);
                        },
                      },
                      function (_ref5) {
                        var measureRef = _ref5.measureRef;
                        return /*#__PURE__*/ react_default.a.createElement(
                          "progress",
                          {
                            id: "progress",
                            ref: measureRef,
                            max: videoDuration,
                            value: currentTime,
                            onClick: function onClick() {
                              return goToTime(tooltipTime);
                            },
                            onMouseMove: function onMouseMove(event) {
                              return toggleTimeTooltip(event);
                            },
                            onMouseOut: function onMouseOut(event) {
                              return toggleTimeTooltip(event, true);
                            },
                          }
                        );
                      }
                    )
                  )
                ),
                isVideoReady &&
                  /*#__PURE__*/ react_default.a.createElement(
                    MarkerBar_Markers,
                    {
                      document: Controls_document,
                      instance: instance,
                      goToTime: goToTime,
                      progressBarWidth: progressBarWidth,
                      selectedAnnotation: selectedAnnotation,
                      setSelectedAnnotation: setSelectedAnnotation,
                      forceUpdate: forceUpdate,
                      setIsPlaying: setIsPlaying,
                    }
                  )
              ),
              utils_isChrome() &&
                /*#__PURE__*/ react_default.a.createElement(
                  Timeline_TimelineReel,
                  {
                    ref: framesListRef,
                    video: video,
                    goToTime: goToTime,
                    frameCanvases: frameCanvases,
                    currentFrameNumber: currentFrameNumber,
                    selectedAnnotation: selectedAnnotation,
                    shouldUpdate: shouldUpdate,
                    isPlaying: isPlaying,
                  }
                )
            )
          );
        };

        /* harmony default export */ var components_Controls = Controls_Controls;
        // CONCATENATED MODULE: ./src/assets/icons/full-screen.svg
        function full_screen_extends() {
          full_screen_extends =
            Object.assign ||
            function (target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return full_screen_extends.apply(this, arguments);
        }

        var full_screen_ref = /*#__PURE__*/ react["createElement"](
          "g",
          {
            filter: "url(#full-screen_svg__filter0_d)",
          },
          /*#__PURE__*/ react["createElement"]("path", {
            d:
              "M2 2h5V0H0v7h2V2zm5 14H2v-5H0v7h7v-2zm11-5h-2v5h-5v2h7v-7zm-2-4h2V0h-7v2h5v5z",
            fill: "#fff",
          })
        );

        var full_screen_ref2 = /*#__PURE__*/ react["createElement"]("path", {
          d:
            "M2 2h5V0H0v7h2V2zm5 14H2v-5H0v7h7v-2zm11-5h-2v5h-5v2h7v-7zm-2-4h2V0h-7v2h5v5z",
          fill: "#AEB4BC",
        });

        var full_screen_ref3 = /*#__PURE__*/ react["createElement"](
          "defs",
          null,
          /*#__PURE__*/ react["createElement"](
            "filter",
            {
              id: "full-screen_svg__filter0_d",
              x: 0,
              y: 0,
              width: 19,
              height: 19,
              filterUnits: "userSpaceOnUse",
              colorInterpolationFilters: "sRGB",
            },
            /*#__PURE__*/ react["createElement"]("feFlood", {
              floodOpacity: 0,
              result: "BackgroundImageFix",
            }),
            /*#__PURE__*/ react["createElement"]("feColorMatrix", {
              in: "SourceAlpha",
              values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0",
            }),
            /*#__PURE__*/ react["createElement"]("feOffset", {
              dx: 1,
              dy: 1,
            }),
            /*#__PURE__*/ react["createElement"]("feColorMatrix", {
              values:
                "0 0 0 0 0.345833 0 0 0 0 0.345833 0 0 0 0 0.345833 0 0 0 0.25 0",
            }),
            /*#__PURE__*/ react["createElement"]("feBlend", {
              in2: "BackgroundImageFix",
              result: "effect1_dropShadow",
            }),
            /*#__PURE__*/ react["createElement"]("feBlend", {
              in: "SourceGraphic",
              in2: "effect1_dropShadow",
              result: "shape",
            })
          )
        );

        function SvgFullScreen(props) {
          return /*#__PURE__*/ react["createElement"](
            "svg",
            full_screen_extends(
              {
                width: 19,
                height: 19,
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
              },
              props
            ),
            full_screen_ref,
            full_screen_ref2,
            full_screen_ref3
          );
        }

        /* harmony default export */ var full_screen = SvgFullScreen;
        // CONCATENATED MODULE: ./src/components/Controls/Buttons/FullScreenButton.js

        function FullScreenButton(_ref) {
          var instance = _ref.instance,
            video = _ref.video;

          var _useState = Object(react["useState"])(instance.FitMode.Zoom),
            _useState2 = slicedToArray_default()(_useState, 2),
            fitModeBeforeFullScreen = _useState2[0],
            setFitModeBeforeFullscreen = _useState2[1];

          var document = instance.iframeWindow.document;
          Object(react["useEffect"])(
            function () {
              var videoElement = video.getElement();
              videoElement.addEventListener("fullscreenchange", function () {
                if (!document.fullscreenElement) {
                  instance.setFitMode(fitModeBeforeFullScreen);
                }
              });
            },
            [
              fitModeBeforeFullScreen,
              instance,
              video,
              document.fullscreenElement,
            ]
          );

          if (document.fullscreenEnabled) {
            return /*#__PURE__*/ react_default.a.createElement(
              "button",
              {
                onClick: function onClick() {
                  setFitModeBeforeFullscreen(instance.getFitMode());
                  instance.setFitMode(instance.FitMode.Zoom);
                  setTimeout(function () {
                    video.getElement().requestFullscreen();
                  }, 100);
                },
              },
              /*#__PURE__*/ react_default.a.createElement(
                "div",
                {
                  className: "icon",
                },
                /*#__PURE__*/ react_default.a.createElement(full_screen, {
                  alt: "Full Screen",
                })
              )
            );
          }

          return null;
        }

        /* harmony default export */ var Buttons_FullScreenButton = FullScreenButton;
        // CONCATENATED MODULE: ./src/index.js

        /**
         * Mounts the react component for the video controls into the passed in container.
         * @alias module:@pdftron/webviewer-video.renderControlsToDOM
         * @param {Object} instance - The WebViewer instance
         * @param {Object} customContainer - A container element, e.g. a div.
         * @example
         * const customContainer = window.document.querySelector('.custom-container');
         * renderControlsToDOM(webViewerInstance, customContainer)
         */

        var src_renderControlsToDOM = function renderControlsToDOM(
          instance,
          container
        ) {
          // Because we use ReactDOM to render the react component, we know don't have to worry
          // about double react in sample app and video module
          // In subsequent calls to renderControlsToDOM, for loading other videos for example,
          // it is important to release all the current Control components
          react_dom_default.a.unmountComponentAtNode(container);
          react_dom_default.a.render(
            /*#__PURE__*/ react_default.a.createElement(components_Controls, {
              instance: instance,
            }),
            container
          );
        };
        /**
         * Mounts the fullscreen react component into the passed in container.
         * @alias module:@pdftron/webviewer-video.renderFullscreenButton
         * @param {Object} instance - The WebViewer instance
         * @param {Object} video - The video object
         * @param {Object} customContainer - A container element, e.g. a div.
         * @example
         * const customContainer = window.document.querySelector('.custom-container');
         * const video = webViewerInstance.docViewer.getDocument().getVideo();
         * renderFullscreenButton(webViewerInstance, video, customContainer)
         */

        var src_renderFullscreenButton = function renderFullscreenButton(
          instance,
          video,
          container
        ) {
          react_dom_default.a.render(
            /*#__PURE__*/ react_default.a.createElement(
              Buttons_FullScreenButton,
              {
                instance: instance,
                video: video,
              }
            ),
            container
          );
        };
        /**
         * Unmounts webviewer video.
         * @alias module:@pdftron/webviewer-video.unmountWebViewerVideo
         * @param {Object} instance - The WebViewer instance
         * @param {Object} customContainer - A container element, e.g. a div.
         * @example
         * unmountWebViewerVideo(webViewerInstance, container);
         */

        var src_unmountWebViewerVideo = function unmountWebViewerVideo(
          instance,
          customContainer
        ) {
          instance.enableElements([
            "searchButton",
            "pageNavOverlay",
            "viewControlsButton",
            "panToolButton",
            "underlineToolGroupButton",
            "strikeoutToolGroupButton",
            "highlightToolGroupButton",
            "squigglyToolGroupButton",
            "signatureToolButton",
            "leftPanel",
            "leftPanelButton",
            "toolbarGroup-Edit",
            "downloadButton",
            "printButton",
            "annotationCommentButton",
            "toggleNotesButton",
            "annotationNoteConnectorLine",
          ]);
          var fullScreenButtonContainer = instance.iframeWindow.document.querySelector(
            "#fullscreen-button-container"
          );
          react_dom_default.a.unmountComponentAtNode(fullScreenButtonContainer);
          react_dom_default.a.unmountComponentAtNode(customContainer);
        };

        /***/
      },
      /******/
    ]
  );
});
